(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{126:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/arch-overview-a39c27e2b4acf0d445483a2d670fd450.svg"},68:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return s}));var r=n(2),a=n(6),i=(n(0),n(88)),c={id:"architecture",title:"Architecture"},l={unversionedId:"architecture",id:"architecture",isDocsHomePage:!1,title:"Architecture",description:"Kraken Architecture",source:"@site/docs/architecture.md",slug:"/architecture",permalink:"/docs/architecture",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/architecture.md",version:"current",sidebar:"someSidebar",previous:{title:"Entities & Terminology",permalink:"/docs/entities"},next:{title:"Schema",permalink:"/docs/schema"}},b=[{value:"Server",id:"server",children:[]},{value:"UI",id:"ui",children:[]},{value:"Controller",id:"controller",children:[]},{value:"Celery",id:"celery",children:[]},{value:"ELK",id:"elk",children:[]},{value:"Agent",id:"agent",children:[]}],o={rightToc:b};function s(e){var t=e.components,c=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},o,c,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("img",{alt:"Kraken Architecture",src:n(126).default})),Object(i.b)("h2",{id:"server"},"Server"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Server")," exposes Kraken ReST API"),Object(i.b)("h2",{id:"ui"},"UI"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"UI")," is an Angular application that can be served by NGINX. Unicorn can be used to maintain ",Object(i.b)("inlineCode",{parentName:"p"},"Server")," instances."),Object(i.b)("h2",{id:"controller"},"Controller"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Controller")," is made of 4 services:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Planner")," - it triggers new flows based on indicated rule in given project's branch"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Scheduler")," - it assigns jobs to agents"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Watchdog")," - it checks runs and their jobs if they are in their time limits, it also monitors agents and their machines health"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Storage")," - it stores and serves artifacts which can be uploaded or downloaded by agents")),Object(i.b)("h2",{id:"celery"},"Celery"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Celery")," executes background tasks like processing results reported by an agent. Any service in ",Object(i.b)("inlineCode",{parentName:"p"},"Controller"),"\nor ",Object(i.b)("inlineCode",{parentName:"p"},"Celery")," tasks can enqueue new ",Object(i.b)("inlineCode",{parentName:"p"},"Celery")," tasks. Current tasks:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"analyze_results_history"),Object(i.b)("li",{parentName:"ul"},"notify_about_completed_run"),Object(i.b)("li",{parentName:"ul"},"trigger_stages"),Object(i.b)("li",{parentName:"ul"},"job_completed"),Object(i.b)("li",{parentName:"ul"},"trigger_run"),Object(i.b)("li",{parentName:"ul"},"trigger_flow")),Object(i.b)("h2",{id:"elk"},"ELK"),Object(i.b)("p",null,"This is ",Object(i.b)("inlineCode",{parentName:"p"},"ELK")," stack ie. ",Object(i.b)("inlineCode",{parentName:"p"},"Elasticsearch"),", ",Object(i.b)("inlineCode",{parentName:"p"},"Logstash")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Kibana"),". ",Object(i.b)("inlineCode",{parentName:"p"},"Logstash")," is used for collecting logs from all agents,\n",Object(i.b)("inlineCode",{parentName:"p"},"Elasticsearch")," is used for storing these logs and exposing them to the ",Object(i.b)("inlineCode",{parentName:"p"},"Server")," for example for presentin in ",Object(i.b)("inlineCode",{parentName:"p"},"UI"),".\n",Object(i.b)("inlineCode",{parentName:"p"},"Kibana")," is an internal dashboard to ",Object(i.b)("inlineCode",{parentName:"p"},"Elasticsearch"),"."),Object(i.b)("h2",{id:"agent"},"Agent"),Object(i.b)("p",null,"Agent is a service that is run on a machine that is expected to execute jobs. Agent can execute jobs directly on the system (locally),\nor it can encapulate them in e.g. container. Currently there are executors for:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"local"),Object(i.b)("li",{parentName:"ul"},"Docker"),Object(i.b)("li",{parentName:"ul"},"LXD")),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"pathname:///arch-ppt/index.html"}),"Presentation about Kraken Architecture")))}s.isMDXComponent=!0}}]);