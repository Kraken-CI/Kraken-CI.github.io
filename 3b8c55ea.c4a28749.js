(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{119:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,b=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(n),O=a,u=p["".concat(b,".").concat(O)]||p[O]||d[O]||o;return n?r.a.createElement(u,l(l({ref:t},c),{},{components:n})):r.a.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,b=new Array(o);b[0]=O;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,b[1]=l;for(var c=2;c<o;c++)b[c]=n[c];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),o=(n(0),n(119)),b={id:"installation",title:"Installation",sidebar_label:"Installation"},l={unversionedId:"installation",id:"installation",isDocsHomePage:!1,title:"Installation",description:"The easiest method for installing Kraken is based on Docker and Docker Compose.",source:"@site/docs/installation.md",slug:"/installation",permalink:"/docs/installation",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/installation.md",version:"current",sidebar_label:"Installation",sidebar:"someSidebar",previous:{title:"Demo",permalink:"/docs/demo"},next:{title:"Entities & Terminology",permalink:"/docs/entities"}},i=[{value:"Pre-requisites",id:"pre-requisites",children:[]},{value:"Kraken Download",id:"kraken-download",children:[]},{value:"Kraken Configuration",id:"kraken-configuration",children:[{value:"Configuration of ClickHouse",id:"configuration-of-clickhouse",children:[]},{value:"Configuration of Minio",id:"configuration-of-minio",children:[]},{value:"Configuration of PostgreSQL database",id:"configuration-of-postgresql-database",children:[]},{value:"Configuration of Kraken services",id:"configuration-of-kraken-services",children:[]}]},{value:"Kraken Start",id:"kraken-start",children:[]},{value:"Kraken Stop",id:"kraken-stop",children:[]},{value:"Next Steps",id:"next-steps",children:[]}],c={toc:i};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The easiest method for installing Kraken is based on ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.docker.com/"}),"Docker")," and ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/compose/"}),"Docker Compose"),"."),Object(o.b)("h2",{id:"pre-requisites"},"Pre-requisites"),Object(o.b)("p",null,"There are several things that are required to run Kraken. In short:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Linux-based operating system"),Object(o.b)("li",{parentName:"ul"},"Docker Engine and Docker Compose")),Object(o.b)("p",null,"The operating system must be ",Object(o.b)("strong",{parentName:"p"},"Linux based"),". Kraken was tested on ",Object(o.b)("strong",{parentName:"p"},"Ubuntu 20.04"),"\nbut other distributions should be ok."),Object(o.b)("p",null,"The next thing is Docker. ",Object(o.b)("strong",{parentName:"p"},"Docker Compose")," is used to spawn all the Kraken services.\nThese services are described in ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/architecture"}),"Architecture chapter"),"."),Object(o.b)("h2",{id:"kraken-download"},"Kraken Download"),Object(o.b)("p",null,"Kraken installation artifacts can be downloaded from ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Kraken-CI/kraken/releases"}),"Kraken GitHub releases page"),".\nThere are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"kraken-docker-compose-X.Y.yaml")," - a services configuration file for Docker Compose"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"dot-X.Y.env")," - an example configuration for Kraken services that is used by Docker Compose file")),Object(o.b)("p",null,"Docker Compose file is using pre-built Kraken container images. On first run, it will download and install Kraken image and all required dependencies."),Object(o.b)("p",null,"Download these 2 files to your local machine that will host Kraken services. Put them in the same folder.\nRename ",Object(o.b)("inlineCode",{parentName:"p"},"dot-X.Y.env")," to ",Object(o.b)("inlineCode",{parentName:"p"},".env")," - this is the only way to make it visible to ",Object(o.b)("inlineCode",{parentName:"p"},"docker-compose"),"."),Object(o.b)("h2",{id:"kraken-configuration"},"Kraken Configuration"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},".env")," file contains Kraken basic configuration that is required to start Kraken services.\nDefault content of this file looks as follows:"),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://raw.githubusercontent.com/Kraken-CI/kraken/master/.env",alt:"File"}))),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"POSTGRES_USER=kraken\nPOSTGRES_PASSWORD=kk123\nPOSTGRES_DB=kraken\n\nMINIO_ACCESS_KEY=UFSEHRCFU4ACUEWHCHWU\nMINIO_SECRET_KEY=HICSHuhIIUhiuhMIUHIUhGFfUHugy6fGJuyyfiGY\n\nKRAKEN_REDIS_ADDR=redis\nKRAKEN_DB_URL=postgresql://kraken:kk123@postgres:5432/kraken\nKRAKEN_CLICKHOUSE_PORT=9001\nKRAKEN_CLICKHOUSE_ADDR=clickhouse-proxy:9001\nKRAKEN_CLICKHOUSE_URL=http://clickhouse:8123/\nKRAKEN_SERVER_PORT=6000\nKRAKEN_SERVER_ADDR=server:6000\nKRAKEN_PLANNER_URL=http://controller:7997/\nKRAKEN_UI_PUBLIC_PORT=8080\nKRAKEN_MINIO_PORT=9999\nKRAKEN_MINIO_ADDR=minio:9999\n")),Object(o.b)("h3",{id:"configuration-of-clickhouse"},"Configuration of ClickHouse"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://clickhouse.tech/"}),"ClickHouse")," is used to store logs from all\nKraken services and from jobs execution."),Object(o.b)("p",null,"These parameters are used when ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://clickhouse.tech/"}),"ClickHouse"),"\nis run internally in Docker together with Kraken services from the\nsame Docker Compose file. It is possible to set up ClickHouse\nexternally to Kraken services on another machine."),Object(o.b)("p",null,"No specific configuration."),Object(o.b)("h3",{id:"configuration-of-minio"},"Configuration of Minio"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://min.io/"}),"MinIO")," is object storage database with API\ncompatible with AWS S3.  It is used in Kraken to store build\nartifacts, cache files and Git repositories bundles."),Object(o.b)("p",null,"These parameters are used when ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://min.io/"}),"MinIO")," is run\ninternally in Docker together with Kraken services from the same\nDocker Compose file. It is possible to set up MinIO externally to\nKraken services on another machine."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description / Default value"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"MINIO_ACCESS_KEY")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Access key to MinIO",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"UFSEHRCFU4ACUEWHCHWU"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"MINIO_SECRET_KEY")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Secret key to MinIO",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"HICSHuhIIUhiuhMIUHIUhGFfUHugy6fGJuyyfiGY"))))),Object(o.b)("h3",{id:"configuration-of-postgresql-database"},"Configuration of PostgreSQL database"),Object(o.b)("p",null,Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.postgresql.org/"}),"PostgreSQL")," is used to store all\nrelational data of Kraken, mainly related to jobs planning, execution\nand reporting."),Object(o.b)("p",null,"These parameters are used\nwhen ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.postgresql.org/"}),"PostgreSQL")," is run internally in\nDocker together with Kraken services from the same Docker Compose\nfile. It is possible to set up PostgreSQL externally to Kraken\nservices on another machine."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description / Default value"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"POSTGRES_USER")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"User name used to access PostgreSQL database",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"kraken"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"POSTGRES_PASSWORD")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Password used to access PostgreSQL database",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"kk123"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"POSTGRES_DB")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Name of the Kraken's PostgreSQL database",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"kraken"))))),Object(o.b)("h3",{id:"configuration-of-kraken-services"},"Configuration of Kraken services"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description / Default value"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_REDIS_ADDR")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Location of Redis in ",Object(o.b)("em",{parentName:"td"},"address:port")," form",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"redis"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_DB_URL")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL of the Kraken's PostgreSQL database",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"postgresql://kraken:kk123@postgres:5432/kraken"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_CLICKHOUSE_PORT")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Port of ClickHouse Proxy for collection logs, should be the same as in ",Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_CLICKHOUSE_ADDR")," ",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"9001"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_CLICKHOUSE_ADDR")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Location of ClickHouse Proxy ",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"clickhouse-proxy:9001"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_CLICKHOUSE_URL")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL to ClickHouse, it is used to query ClickHouse database ",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"http://clickhouse:8123/"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_SERVER_PORT")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Port of Kraken API Server, should be the same as in ",Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_SERVER_ADDR"),Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"6000"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_SERVER_ADDR")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Location of Kraken API server in ",Object(o.b)("em",{parentName:"td"},"address:port")," form",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"server:6000"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_PLANNER_URL")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL of Kraken Planner",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"http://controller:7997/"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_UI_PUBLIC_PORT")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Public port of Kraken's web UI that is exposed to users. ",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"8080"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_MINIO_PORT ")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Port of MinIO, should be the same as in ",Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_MINIO_ADDR"),". ",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"9999"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"KRAKEN_MINIO_ADDR")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Location of MinIO in ",Object(o.b)("em",{parentName:"td"},"address:port")," form",Object(o.b)("br",null),"Default: ",Object(o.b)("inlineCode",{parentName:"td"},"minio:9999"))))),Object(o.b)("p",null,"Most of these variables do not have to be altered. By default all\nservices are defined in one Docker Compose file and they communicate\nwith each other internally. Still, it is possible to divide these\nservices into a few groups and host them on separate machines. This\nallows for handling bigger load by Kraken. The most common approach\nfor dividing services is putting PostgreSQL database, ClickHouse\ndatabase and MinIO on separate machines. Going further it is possible\nto setup Kraken API Server on a separate machine and even put several\ninstances of them to handle and load-balance huge load of API\nrequests."),Object(o.b)("h2",{id:"kraken-start"},"Kraken Start"),Object(o.b)("p",null,"After downloading Docker Compose and .env files and tweaking them if needed,\nKraken services can be started by:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-console"}),"$ docker-compose -f kraken-docker-compose-X.Y.yaml up -d\n")),Object(o.b)("p",null,"where:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"-f")," indicates Docker Compose file"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"up")," spins up all Kraken services"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"-d")," runs Docker Compose in detached mode i.e. in background")),Object(o.b)("p",null,"Check if all started correctly:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-console"}),"docker-compose -f kraken-docker-compose-X.Y.yaml ps\n")),Object(o.b)("p",null,"If all is ok then now it is possible to check Kraken web page: ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://localhost:8080"}),"http://localhost:8080")),Object(o.b)("h2",{id:"kraken-stop"},"Kraken Stop"),Object(o.b)("p",null,"Kraken services can be stopped with a command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-console"}),"$ docker-compose -f kraken-docker-compose-X.Y.yaml down\n")),Object(o.b)("p",null,"In case the services can't be gracefully stopped or need to be shut down immediately,\nthey can be killed with a command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-console"}),"$ docker-compose -f kraken-docker-compose-X.Y.yaml kill\n")),Object(o.b)("h2",{id:"next-steps"},"Next Steps"),Object(o.b)("p",null,"Now there are s everal steps that can be done:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"learn more about Kraken concepts: read ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"entities"}),"Entities & Terminology")," and ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"architecture"}),"Architecture")," chapters"),Object(o.b)("li",{parentName:"ul"},"start using Kraken by creating new project, branches, etc: see ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"proj-branches"}),"Usage chapters")),Object(o.b)("li",{parentName:"ul"},"install new agents: visit ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"agents"}),"Agents")," chapter in Administraction category")))}s.isMDXComponent=!0}}]);