(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),i=(n(0),n(91)),l={id:"schema",title:"Workflow Schema"},c={unversionedId:"schema",id:"schema",isDocsHomePage:!1,title:"Workflow Schema",description:"A branch contains one or several stages. Stages can be independent and",source:"@site/docs/schema.md",slug:"/schema",permalink:"/docs/schema",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/schema.md",version:"current",sidebar:"someSidebar",previous:{title:"Projects and Branches",permalink:"/docs/proj-branches"},next:{title:"Docker Executor",permalink:"/docs/docker-executor"}},b=[{value:"Schema Elements",id:"schema-elements",children:[]},{value:"Parent",id:"parent",children:[]},{value:"Triggers",id:"triggers",children:[{value:"parent",id:"parent-1",children:[]},{value:"interval",id:"interval",children:[]},{value:"date",id:"date",children:[]},{value:"cron",id:"cron",children:[]},{value:"repository",id:"repository",children:[]},{value:"webhook",id:"webhook",children:[]}]},{value:"Step",id:"step",children:[]},{value:"Built-in Step Tools",id:"built-in-step-tools",children:[{value:"Shell",id:"shell",children:[]},{value:"Git",id:"git",children:[]},{value:"Artifacts",id:"artifacts",children:[]},{value:"PyLint",id:"pylint",children:[]},{value:"PyTest",id:"pytest",children:[]},{value:"NgLint",id:"nglint",children:[]},{value:"Cloc",id:"cloc",children:[]},{value:"RndTest",id:"rndtest",children:[]}]}],o={rightToc:b};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A branch contains one or several stages. Stages can be independent and\nrun in parallel or chained and together can for a tree or a set of\ntrees (forest). Stage have a schema that defines what should be\ndone. Schema generally defines jobs for execution, execution\nenvironment, triggers that start the execution of whole schema,\noptional parameters and execution configuration."),Object(i.b)("h2",{id:"schema-elements"},"Schema Elements"),Object(i.b)("p",null,"There are defined several things in the schema:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"parent")," stage"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"triggers")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"parameters")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"configs")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"jobs")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"notification")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"timeout"))),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'        "parent": "root",\n        "triggers": {\n            "parent": True\n        },\n        "parameters": [],\n        "configs": [],\n        "jobs": [{\n            "name": "hello",\n            "steps": [{\n                "tool": "shell",\n                "cmd": "echo \'Hello World\'"\n            }],\n            "environments": [{\n                "system": "centos-7",\n                "agents_group": "all",\n                "config": "default"\n            }]\n        }]\n')),Object(i.b)("h2",{id:"parent"},"Parent"),Object(i.b)("p",null,"Parent allows for defining a chain of dependencies between subsequent\nstages. Current stage will be started only when parent stage has been\nfinished.  The value of ",Object(i.b)("inlineCode",{parentName:"p"},"parent")," field is a name of a stage. If it is\nset to special value ",Object(i.b)("inlineCode",{parentName:"p"},"root")," than it means that the stage does not\ndepend on anything and can be started as the first stage or one of the\nfirst stages, just after triggering a new flow in a branch."),Object(i.b)("h2",{id:"triggers"},"Triggers"),Object(i.b)("p",null,"Triggers indicate what events may start a stage and create its new run.\nThere are several events:"),Object(i.b)("h3",{id:"parent-1"},"parent"),Object(i.b)("p",null,"A stage is triggered by completion of a parent stage. It is defined as ",Object(i.b)("inlineCode",{parentName:"p"},'"parent": True'),"."),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'   "triggers": {\n      "parent": True\n   }\n')),Object(i.b)("h3",{id:"interval"},"interval"),Object(i.b)("p",null,"Given stage is triggered specified amount of time after competion of\nprevious run of this stage.  The duration can be specified in a human\nreadable way e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"1d")," what means one day or ",Object(i.b)("inlineCode",{parentName:"p"},"3h 30m")," what means 3\nhours and 30 minutes."),Object(i.b)("p",null,"Example, start a new stage run every 10 minutes:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'   "triggers": {\n      "interval": "10m"\n   }\n')),Object(i.b)("h3",{id:"date"},"date"),Object(i.b)("p",null,"Given stage is triggered once, on specified date. The date can be\nprovided in human readable way, e.g.: ",Object(i.b)("inlineCode",{parentName:"p"},"2012-01-19 17:21:00")," or ",Object(i.b)("inlineCode",{parentName:"p"},"Sat\nSep 17 23:26:08 CEST 2016"),"."),Object(i.b)("p",null,"Example, start a new stage run once on indicate date:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'   "triggers": {\n      "date": "2012-01-19 17:21:00"\n   }\n')),Object(i.b)("h3",{id:"cron"},"cron"),Object(i.b)("p",null,"A stage is triggered on specified CRON rule e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"* * 10 * *"),". There\nare always 5 items. Each item is separated by space. The items meaning\nare as follows: minutes, hours, days, months, dow (day of week).  The\npossible values for each item can be found on\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://apscheduler.readthedocs.io/en/stable/modules/triggers/cron.html?highlight=cron#introduction"}),"Advanced Python Scheduler web page")),Object(i.b)("p",null,"Example, start a new stage run always half past nine AM:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'   "triggers": {\n      "cron": "30 9 * * *"\n   }\n')),Object(i.b)("h3",{id:"repository"},"repository"),Object(i.b)("p",null,"TODO: repository: url with branch"),Object(i.b)("h3",{id:"webhook"},"webhook"),Object(i.b)("p",null,"TODO: webhook: from GitHub or GitLab or Bitbucket"),Object(i.b)("h2",{id:"step"},"Step"),Object(i.b)("p",null,"Common step fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"tool")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"cwd")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"timeout")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"attempts")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"sleep_time_after_attempt"))),Object(i.b)("h2",{id:"built-in-step-tools"},"Built-in Step Tools"),Object(i.b)("h3",{id:"shell"},"Shell"),Object(i.b)("p",null,"Fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"cmd")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"timeout")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"user")," - by default kraken ",Object(i.b)("inlineCode",{parentName:"li"},"user")," is used, this field allows for changing user e.g. to ",Object(i.b)("inlineCode",{parentName:"li"},"root"))),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'   "steps": [{\n       "tool": "shell",\n       "cmd": "echo \'Hello World\'"\n   }]\n')),Object(i.b)("h3",{id:"git"},"Git"),Object(i.b)("p",null,"Fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"checkout")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"destination")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ssh-key")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"access-token"))),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'   "steps": [{\n       "tool": "git",\n       "checkout": "https://github.com/Kraken-CI/kraken.git",\n       "branch": "master"\n   }]\n')),Object(i.b)("h3",{id:"artifacts"},"Artifacts"),Object(i.b)("p",null,"Fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"action")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"public")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"source")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"destination"))),Object(i.b)("h3",{id:"pylint"},"PyLint"),Object(i.b)("p",null,"Fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"rcfile")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"modules_or_packages"))),Object(i.b)("h3",{id:"pytest"},"PyTest"),Object(i.b)("p",null,"Fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"params"))),Object(i.b)("h3",{id:"nglint"},"NgLint"),Object(i.b)("p",null,"No specific fields."),Object(i.b)("h3",{id:"cloc"},"Cloc"),Object(i.b)("p",null,"Fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"not-match-f")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"exclude-dir"))),Object(i.b)("h3",{id:"rndtest"},"RndTest"),Object(i.b)("p",null,"Fields:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"count"))))}s.isMDXComponent=!0},91:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),s=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,m=p["".concat(l,".").concat(u)]||p[u]||d[u]||i;return n?r.a.createElement(m,c(c({ref:t},o),{},{components:n})):r.a.createElement(m,c({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var o=2;o<i;o++)l[o]=n[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);