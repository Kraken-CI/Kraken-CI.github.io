"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[8334],{8168:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var t=s(4848),i=s(8453);const r={id:"install-helm",title:"Helm and Kubernetes"},a=void 0,l={id:"install-helm",title:"Helm and Kubernetes",description:"It is possible to install Kraken in Kubernetes",source:"@site/docs/install-helm.mdx",sourceDirName:".",slug:"/install-helm",permalink:"/docs/install-helm",draft:!1,unlisted:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/install-helm.mdx",tags:[],version:"current",frontMatter:{id:"install-helm",title:"Helm and Kubernetes"},sidebar:"someSidebar",previous:{title:"Docker Compose",permalink:"/docs/install-docker-compose"},next:{title:"Manual Installation",permalink:"/docs/install-manual"}},c={},o=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Kubernetes Clusters",id:"kubernetes-clusters",level:2},{value:"Install in Minikube",id:"install-in-minikube",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["It is possible to install Kraken in ",(0,t.jsx)(n.a,{href:"https://kubernetes.io",children:"Kubernetes"}),"\nusing ",(0,t.jsx)(n.a,{href:"https://helm.sh",children:"Helm Chart"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,t.jsx)(n.p,{children:"Several things are required to install Kraken using Helm.\nIn short:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Kubernetes cluster and kubectl tool"}),"\n",(0,t.jsx)(n.li,{children:"Helm tool"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Helm is used to deploy several Kraken services and expose them to an external network.\nThese Kraken services are described in ",(0,t.jsx)(n.a,{href:"/docs/architecture",children:"Architecture chapter"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"kubernetes-clusters",children:"Kubernetes Clusters"}),"\n",(0,t.jsx)(n.p,{children:"There are multiple ways for setting up a Kubernetes cluster. One of the easiest ones,\nthat is most often used for experimenting is Minikube. There are also managed\nclusters like EKS (Elastic Kubernetes Service) in AWS."}),"\n",(0,t.jsx)(n.p,{children:"This manual will show how to install Kraken CI in Minikube but the\nsteps are similar for other Kubernetes environments as well."}),"\n",(0,t.jsx)(n.h2,{id:"install-in-minikube",children:"Install in Minikube"}),"\n",(0,t.jsxs)(n.p,{children:["First, download minikube from ",(0,t.jsx)(n.a,{href:"https://minikube.sigs.k8s.io/docs/",children:"https://minikube.sigs.k8s.io/docs/"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"And then create a cluster:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"$ minikube start\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now you may install Kraken CI but first, lets add a repo with Kraken Helm charts:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"$ helm repo add kraken-ci https://kraken.ci/helm-repo/charts\n$ helm repo update\n"})}),"\n",(0,t.jsx)(n.p,{children:"and now install Kraken CI:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"$ helm upgrade --install --create-namespace --namespace kraken \\\n  --debug --wait \\\n  --set access.method='external-ips' --set access.external_ips={`minikube ip`} \\\n  kraken-ci kraken-ci/kraken-ci\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This command actually upgrades Kraken CI if it is already installed\nbut if it was not yet installed, then it installs it (this is\n",(0,t.jsx)(n.code,{children:"--install"})," switch)."]}),"\n",(0,t.jsxs)(n.p,{children:["The switches ",(0,t.jsx)(n.code,{children:"--create-namespace"})," ",(0,t.jsx)(n.code,{children:"--namespace kraken"})," are installing\nKraken CI into ",(0,t.jsx)(n.code,{children:"kraken"})," namespace. If the namespace does not exist,\nthen it is created."]}),"\n",(0,t.jsxs)(n.p,{children:["This command waits until all Kraken services are started correctly\n(",(0,t.jsx)(n.code,{children:"--wait"})," switch). The ",(0,t.jsx)(n.code,{children:"--debug"})," switch makes the output much more\nverbose."]}),"\n",(0,t.jsxs)(n.p,{children:["The two ",(0,t.jsx)(n.code,{children:"--set"})," switches set Kraken's chart configuration. Whole\nthe config can be present using the following command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"$ helm show values kraken-ci/kraken-ci\n"})}),"\n",(0,t.jsx)(n.p,{children:"In the upgrade command, there are set two fields:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"access.method"})," which indicate what method should be used to expose\nKraken services in Kubernetes; there are available the following\noptions: ",(0,t.jsx)(n.code,{children:"external-ips"}),", ",(0,t.jsx)(n.code,{children:"node-port"}),", ",(0,t.jsx)(n.code,{children:"load-balancer"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"access.external_ips"})," which indicate what external IP should be used\nto access Kraken services; in the case above, an IP address of\nminikube is used (the curly brackets ",(0,t.jsx)(n.code,{children:"{..}"})," are necessary because\n",(0,t.jsx)(n.code,{children:"access.external_ips"})," requires an array as an argument)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["And then, there are two arguments at the end of the upgrade\ncommand. The first one is ",(0,t.jsx)(n.code,{children:"kraken-ci"})," and this is the installation\nname of the chart - you can pick any name here. The second argument is\nthe name of Kraken's Helm repository that was added above and the name\nof the chart in this repository: ",(0,t.jsx)(n.code,{children:"kraken-ci/kraken-ci"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"When everything completes successfully, then at the end of the whole\noutput there should be presented short instruction about getting\nthe URL of Kraken service like that:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'NOTES:\nGet the application URL by running these commands:\n  export NODE_PORT=$(kubectl get --namespace kk-1 -o jsonpath="{.spec.ports[0].port}" services ui)\n  export NODE_IP=$(kubectl get nodes --namespace kk-1 -o jsonpath="{.items[0].status.addresses[0].address}")\n  echo http://$NODE_IP:$NODE_PORT\n'})}),"\n",(0,t.jsx)(n.p,{children:"Now you may check if Kraken is working by visiting the URL\ngiven by this code and by checking if Kubernetes is running Kraken's\nservices with this command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"kubectl get all -n kraken\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will show Kraken's pods, services, deployments and replica sets."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);