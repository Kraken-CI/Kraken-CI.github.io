"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[6476],{4137:function(e,n,t){t.d(n,{Zo:function(){return k},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},k=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,k=o(e,["components","mdxType","originalType","parentName"]),d=p(t),u=r,h=d["".concat(s,".").concat(u)]||d[u]||c[u]||l;return t?a.createElement(h,i(i({ref:n},k),{},{components:t})):a.createElement(h,i({ref:n},k))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8638:function(e,n,t){t.r(n),t.d(n,{assets:function(){return k},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var a=t(3117),r=t(102),l=(t(7294),t(4137)),i=["components"],o={id:"install-manual",title:"Manual Installation"},s=void 0,p={unversionedId:"install-manual",id:"install-manual",title:"Manual Installation",description:"The installation is based on Ubuntu 22.04. All instructions and",source:"@site/docs/install-manual.mdx",sourceDirName:".",slug:"/install-manual",permalink:"/docs/install-manual",draft:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/install-manual.mdx",tags:[],version:"current",frontMatter:{id:"install-manual",title:"Manual Installation"},sidebar:"someSidebar",previous:{title:"Helm and Kubernetes",permalink:"/docs/install-helm"},next:{title:"Entities & Terminology",permalink:"/docs/entities"}},k={},c=[{value:"Required 3rd Party Services",id:"required-3rd-party-services",level:2},{value:"PostgreSQL",id:"postgresql",level:3},{value:"Redis",id:"redis",level:3},{value:"Clickhouse",id:"clickhouse",level:3},{value:"MinIO",id:"minio",level:3},{value:"Nginx as a reverse proxy",id:"nginx-as-a-reverse-proxy",level:3},{value:"Kraken Components Installation",id:"kraken-components-installation",level:2},{value:"Server - Clickhouse Proxy",id:"server---clickhouse-proxy",level:3},{value:"Server - Backend",id:"server---backend",level:3},{value:"Server - Database Preparation",id:"server---database-preparation",level:3},{value:"Server - Planner",id:"server---planner",level:3},{value:"Server - RQ",id:"server---rq",level:3},{value:"Server - QNeck",id:"server---qneck",level:3},{value:"Server - Scheduler",id:"server---scheduler",level:3},{value:"Server - Watchdog",id:"server---watchdog",level:3},{value:"Server - Server",id:"server---server",level:3},{value:"Web UI &amp; Reverse Proxy",id:"web-ui--reverse-proxy",level:3},{value:"Agent",id:"agent",level:3},{value:"The First Job",id:"the-first-job",level:2}],d={toc:c};function u(e){var n=e.components,t=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The installation is based on Ubuntu 22.04. All instructions and\ncommands should be performed in Ubuntu 22.04 system."),(0,l.kt)("p",null,"The first part of the manual shows how to install and prepare services\nrequired by Kraken CI. The second part guides through the installation\nof particular components of Kraken CI."),(0,l.kt)("p",null,"Manual installation requires better knowledge of Kraken CI\ninternals. So, first, get familiar\nwith ",(0,l.kt)("a",{parentName:"p",href:"/docs/architecture"},"Kraken CI architecture"),"."),(0,l.kt)("h2",{id:"required-3rd-party-services"},"Required 3rd Party Services"),(0,l.kt)("h3",{id:"postgresql"},"PostgreSQL"),(0,l.kt)("p",null,"Kraken relies on PostgreSQL 11.\nThe installation instruction can be found at ",(0,l.kt)("a",{parentName:"p",href:"https://www.postgresql.org/download/linux/ubuntu/"},"https://www.postgresql.org/download/linux/ubuntu/"),"."),(0,l.kt)("p",null,"To install the required 11 version, do the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ sudo apt install postgresql-11\n")),(0,l.kt)("p",null,"After installation, create a ",(0,l.kt)("inlineCode",{parentName:"p"},"kkdb")," database for Kraken CI Server and a\nuser ",(0,l.kt)("inlineCode",{parentName:"p"},"kkuser")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"kkpass")," password:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ sudo -u postgres psql\npostgres=# create database kkdb;\npostgres=# create user kkuser with encrypted password 'kkpass';\npostgres=# grant all privileges on database kkdb to kkuser;\n")),(0,l.kt)("h3",{id:"redis"},"Redis"),(0,l.kt)("p",null,"Kraken is using Redis and is tested with the 7.0 version.\nThe installation instruction can be found at ",(0,l.kt)("a",{parentName:"p",href:"https://redis.io/docs/getting-started/installation/install-redis-on-linux/"},"https://redis.io/docs/getting-started/installation/install-redis-on-linux/"),"."),(0,l.kt)("h3",{id:"clickhouse"},"Clickhouse"),(0,l.kt)("p",null,"Kraken is using Clickhouse and is tested with the 22.10.2.11 version.\nThe installation instruction can be found at ",(0,l.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/install/#install-from-deb-packages"},"https://clickhouse.com/docs/en/install/#install-from-deb-packages"),"."),(0,l.kt)("h3",{id:"minio"},"MinIO"),(0,l.kt)("p",null,"RELEASE.2022-10-24T18-35-07Z"),(0,l.kt)("p",null,"Kraken is using MinIO RELEASE.2022-10-24T18-35-07Z version. Newer\nversions may not work, so please use indicated version. The\ninstallation instruction can be found at\n",(0,l.kt)("a",{parentName:"p",href:"https://min.io/docs/minio/linux/operations/installation.html"},"https://min.io/docs/minio/linux/operations/installation.html"),"."),(0,l.kt)("p",null,"Debian package can be downloaded from here:\n",(0,l.kt)("a",{parentName:"p",href:"https://dl.min.io/server/minio/release/linux-amd64/archive/minio_20221024183507.0.0_amd64.deb"},"https://dl.min.io/server/minio/release/linux-amd64/archive/minio_20221024183507.0.0_amd64.deb"),".\nRPM from here:\n",(0,l.kt)("a",{parentName:"p",href:"https://dl.min.io/server/minio/release/linux-amd64/archive/minio-20221024183507.0.0.x86_64.rpm"},"https://dl.min.io/server/minio/release/linux-amd64/archive/minio-20221024183507.0.0.x86_64.rpm"),".\nPlease check for any other format on this page:\n",(0,l.kt)("a",{parentName:"p",href:"https://dl.min.io/server/minio/release/linux-amd64/archive/"},"https://dl.min.io/server/minio/release/linux-amd64/archive/"),"."),(0,l.kt)("p",null,"The configuration could be set up in ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/default/minio")," file. There should be set at least the following fields:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MINIO_ROOT_USER")," - a name for the root user; this needs to be\npassed to Kraken components later (especially Kraken Server);"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MINIO_ROOT_PASSWORD")," - a password for the root user; this needs to\nbe passed to Kraken components later (especially Kraken Server);"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MINIO_VOLUMES")," - it must point to a folder where MinIO data will be\nstored;"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MINIO_OPTS")," - this should be used at least to change the listening\nport - see next paragraph.")),(0,l.kt)("p",null,"Unfortunately, Clickhouse and MinIO are listening on the same TCP\nport 9000.  It can be changed in MinIO in ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/default/minio")," by\nadding the following line:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"MINIO_OPTS=--address :9999\n")),(0,l.kt)("h3",{id:"nginx-as-a-reverse-proxy"},"Nginx as a reverse proxy"),(0,l.kt)("p",null,"As a frontend web server that does reverse proxy, any web server can be\nused, for example, Nginx."),(0,l.kt)("p",null,"First, install Nginx:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ sudo apt install nginx\n")),(0,l.kt)("p",null,"The configuration will be described in ",(0,l.kt)("inlineCode",{parentName:"p"},"Web UI & Reverse Proxy")," section below."),(0,l.kt)("h2",{id:"kraken-components-installation"},"Kraken Components Installation"),(0,l.kt)("p",null,"Kraken CI components can be downloaded from Kraken\nCI ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Kraken-CI/kraken/releases"},"GitHub releases"),"\npage. There should be:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"clickhouse-proxy-VERSION.tar.gz")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"krakenci_server-VERSION.tar.gz")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"krakenci_ui-VERSION.tar.gz")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"krakenci_agent-VERSION.tar.gz"))),(0,l.kt)("p",null,"where ",(0,l.kt)("inlineCode",{parentName:"p"},"VERSION")," is for example ",(0,l.kt)("inlineCode",{parentName:"p"},"0.1091"),"."),(0,l.kt)("p",null,"Python packages can also be installed using ",(0,l.kt)("inlineCode",{parentName:"p"},"pip")," tool.\nFor that purpose, a Python virtual env may be created:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ python3 -m venv venv\n$ ./venv/bin/pip install -U pip\n")),(0,l.kt)("h3",{id:"server---clickhouse-proxy"},"Server - Clickhouse Proxy"),(0,l.kt)("p",null,"Unpack ",(0,l.kt)("inlineCode",{parentName:"p"},"clickhouse-proxy"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ tar -zxvf clickhouse-proxy-VERSION.tar.gz\n")),(0,l.kt)("p",null,"Prepare environment variables, ie. location of Clickhouse server:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ export KRAKEN_CLICKHOUSE_URL=http://localhost:8123\n")),(0,l.kt)("p",null,"Start the proxy:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},'$ ./clickhouse-proxy\nstarted clickhouse proxy\nClickhouse address: "http://localhost:8123"\nVersionRow { version: 2 }\nlogs table created in clickhouse\nwaiting for logs to store\n')),(0,l.kt)("h3",{id:"server---backend"},"Server - Backend"),(0,l.kt)("p",null,"There are prerequisites needed to install the Kraken CI server. It\ndepends on ",(0,l.kt)("inlineCode",{parentName:"p"},"python-ldap"),", which has extensions in C language. So to\ninstall and build Kraken CI dependencies there are needed:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"C compiler -- ",(0,l.kt)("inlineCode",{parentName:"li"},"gcc")),(0,l.kt)("li",{parentName:"ul"},"headers for LDAP library -- ",(0,l.kt)("inlineCode",{parentName:"li"},"libldap-dev")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"libsasl2-dev")),(0,l.kt)("li",{parentName:"ul"},"headers for Python -- ",(0,l.kt)("inlineCode",{parentName:"li"},"python3-dev"))),(0,l.kt)("p",null,"They can be installed this way:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ sudo apt install gcc python3-dev libldap-dev libsasl2-dev\n")),(0,l.kt)("p",null,"Now we are ready to install the Kraken CI Server component:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ ./venv/bin/pip install krakenci_server-VERSION.tar.gz\nProcessing ./krakenci_server-0.1091.tar.gz\n  Preparing metadata (setup.py) ... done\nCollecting Authlib<2.0.0,>=1.1.0\n  Downloading Authlib-1.1.0-py2.py3-none-any.whl (214 kB)\n...\n")),(0,l.kt)("h3",{id:"server---database-preparation"},"Server - Database Preparation"),(0,l.kt)("p",null,"Run a script that sets up tables and performs database migration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ KRAKEN_DB_URL=postgresql://kkuser:kkpass@localhost:5432/kkdb ./venv/bin/kkdbmigrate\nKraken DB Migration\nmigrating db: postgresql://kkuser:kkpass@localhost:5432/kkdb\nchecking TCP service postgresql on localhost:5432... 1.\npostgresql is up\nINFO  [alembic.runtime.migration] Context impl PostgresqlImpl.\nINFO  [alembic.runtime.migration] Will assume transactional DDL.\nINFO  [alembic.runtime.migration] Running stamp_revision  -> 5c16623f4d55\nalembic stamp completed\nPreparing initial DB data\n   created Tool record local_tool\n   created Tool record git\n   created Tool record shell\n   created Tool record pytest\n   created Tool record rndtest\n   created Tool record artifacts\n   created Tool record pylint\n   created Tool record cloc\n   created Tool record nglint\n   created Tool record cache\n   created Tool record gotest\n   created Tool record junit_collect\n   created Tool record values_collect\n   created AgentsGroup record 'all'\n   created Project record 'Demo'\n   created Branch record 'master'\n   created Stage record 'Tests'\n   created User record 'admin'\n   created User record 'demo'\nDB version: 5c16623f4d55\nKraken DB Migration completed\n")),(0,l.kt)("h3",{id:"server---planner"},"Server - Planner"),(0,l.kt)("p",null,"To start Kraken Planner, invoke the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ KRAKEN_DB_URL=postgresql://kkuser:kkpass@localhost:5432/kkdb ./venv/bin/kkplanner\nchecking TCP service postgresql on localhost:5432... 1.\npostgresql is up\n2022-12-05 05:59:36,533 INFO p: 2787     logs:409   setup logging on planner to clickhouse: localhost:9001\n2022-12-05 05:59:36,533 INFO p: 2787  planner:161   Kraken Planner started, version 0.1091\n2022-12-05 05:59:36,720 INFO p: 2787     base:171   Scheduler started\n2022-12-05 05:59:36,723 INFO p: 2787  planner:43    started planner scheduler\n2022-12-05 05:59:36,732 INFO p: 2787  planner:172   starting xml-rpc server for planner on port 7997\n")),(0,l.kt)("p",null,"Other environment variables that could be expected by the Kraken Planner are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_PLANNER_URL")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:7997")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_CLICKHOUSE_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:8123"))),(0,l.kt)("h3",{id:"server---rq"},"Server - RQ"),(0,l.kt)("p",null,"To start Kraken RQ, invoke the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ KRAKEN_DB_URL=postgresql://kkuser:kkpass@localhost:5432/kkdb ./venv/bin/kkrq\nchecking TCP service planner on localhost:7997... 1.\nplanner is up\nchecking TCP service redis on localhost:6379... 1.\nredis is up\nchecking TCP service postgresql on localhost:5432... 1.\npostgresql is up\n2022-12-05 06:02:36,132 INFO p: 2809     logs:409   setup logging on rq to clickhouse: localhost:9001\n2022-12-05 06:02:36,133 INFO p: 2809     kkrq:105   Kraken RQ started, version 0.1091\n2022-12-05 06:02:36,297 INFO p: 2809   worker:569   Worker rq:worker:76715862411a4038b99ff404aeedb5b4: started, version 1.11.1\n2022-12-05 06:02:36,299 INFO p: 2809   worker:539   Subscribing to channel rq:pubsub:76715862411a4038b99ff404aeedb5b4\n2022-12-05 06:02:36,303 INFO p: 2809   worker:573   *** Listening on kq...\n2022-12-05 06:02:36,304 INFO p: 2809 schedule:107   Trying to acquire locks for kq\n2022-12-05 06:02:36,312 INFO p: 2813 schedule:233   Scheduler for kq started with PID 2813\n2022-12-05 06:02:36,313 INFO p: 2809   worker:1187  Cleaning registries for queue: kq\n")),(0,l.kt)("p",null,"Other environment variables that could be expected by the Kraken RQ are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_PLANNER_URL")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:7997")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_CLICKHOUSE_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:8123")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_REDIS_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"localhost:6379"))),(0,l.kt)("h3",{id:"server---qneck"},"Server - QNeck"),(0,l.kt)("p",null,"To start Kraken QNeck, invoke the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ ./venv/bin/kkqneck\n2022-12-05 06:03:07,656 INFO p: 2824     logs:409   setup logging on rq to clickhouse: localhost:9001\n2022-12-05 06:03:07,657 INFO p: 2824    qneck:136   Kraken QNeck started, version 0.1091\nchecking TCP service redis on localhost:6379... 1.\nredis is up\n")),(0,l.kt)("p",null,"Other environment variables that could be expected by the Kraken QNeck are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_CLICKHOUSE_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:8123")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_REDIS_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"localhost:6379"))),(0,l.kt)("h3",{id:"server---scheduler"},"Server - Scheduler"),(0,l.kt)("p",null,"To start Kraken Scheduler, invoke the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ KRAKEN_DB_URL=postgresql://kkuser:kkpass@localhost:5432/kkdb ./venv/bin/kkscheduler\nchecking TCP service postgresql on localhost:5432... 1.\npostgresql is up\nchecking TCP service planner on localhost:7997... 1.\nplanner is up\n2022-12-05 06:40:13,445 INFO p: 2942     logs:409   setup logging on scheduler to clickhouse: localhost:9001\n2022-12-05 06:40:13,446 INFO p: 2942 schedule:139   Kraken Scheduler started, version 0.1091\n2022-12-05 06:40:13,621 INFO p: 2942 schedule:117   no idle agents\n2022-12-05 06:40:13,621 INFO p: 2942 schedule:173   scheduled 0 jobs in 0.0s, go sleep for 5.0s\n2022-12-05 06:40:18,620 INFO p: 2942 schedule:117   no idle agents\n")),(0,l.kt)("p",null,"Other environment variables that could be expected by the Kraken Scheduler are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_CLICKHOUSE_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:8123")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_PLANNER_URL")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:7997"))),(0,l.kt)("h3",{id:"server---watchdog"},"Server - Watchdog"),(0,l.kt)("p",null,"To start Kraken Watchdog, invoke the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ KRAKEN_DB_URL=postgresql://kkuser:kkpass@localhost:5432/kkdb ./venv/bin/kkwatchdog\nchecking TCP service postgresql on localhost:5432... 1.\npostgresql is up\nchecking TCP service planner on localhost:7997... 1.\nplanner is up\n2022-12-05 06:40:53,819 INFO p: 3003     logs:409   setup logging on watchdog to clickhouse: localhost:9001\n2022-12-05 06:40:53,820 INFO p: 3003 watchdog:53    Kraken Watchdog started, version 0.1091\n")),(0,l.kt)("p",null,"Other environment variables that could be expected by the Kraken Watchdog are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_CLICKHOUSE_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:8123")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_PLANNER_URL")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:7997")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_REDIS_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"localhost:6379"))),(0,l.kt)("h3",{id:"server---server"},"Server - Server"),(0,l.kt)("p",null,"Set required environment variables:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"export KRAKEN_DB_URL=postgresql://kkuser:kkpass@localhost:5432/kkdb\nexport MINIO_ROOT_USER=root\nexport MINIO_ROOT_PASSWORD=password\nexport KKAGENT_DIR=/usr/share/nginx/html/agent\n")),(0,l.kt)("p",null,"And then start the server directly:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"./venv/bin/python3 -m kraken.server.server\n")),(0,l.kt)("p",null,"or using ",(0,l.kt)("inlineCode",{parentName:"p"},"gunicorn"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},'./venv/bin/gunicorn -b 0.0.0.0:8080 -w 2 "kraken.server.server:create_app()"\n')),(0,l.kt)("p",null,"Other environment variables that could be expected by the Kraken Server are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_CLICKHOUSE_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:8123")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_PLANNER_URL")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"http://localhost:7997")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_REDIS_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"localhost:6379")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_SERVER_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"localhost:8080")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KRAKEN_MINIO_ADDR")," - the default is ",(0,l.kt)("inlineCode",{parentName:"li"},"localhost:9999"))),(0,l.kt)("h3",{id:"web-ui--reverse-proxy"},"Web UI & Reverse Proxy"),(0,l.kt)("p",null,"Save the following nginx.conf file in ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/nginx/sites-available/kraken"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-apache"},'upstream ui_rest {\n    server localhost:8080;\n}\n\nserver {\n    listen       80;\n    server_name  localhost;\n    root   /usr/share/nginx/html;\n    index  index.html index.htm;\n\n    location ~ ^/(bk|api|webhooks|artifacts|job_log|install|backend|branch-badge) {\n        proxy_pass http://ui_rest;\n        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;\n        proxy_buffering off;\n        proxy_set_header Accept-Encoding "";\n    }\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n\n    # redirect server error pages to the static page /50x.html\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n}\n')),(0,l.kt)("p",null,"The critical part is:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"    server localhost:8080;\n")),(0,l.kt)("p",null,"It indicates the serving address and port of the backend Kraken CI server.\nIt should point to ",(0,l.kt)("inlineCode",{parentName:"p"},"KRAKEN_SERVER_ADDR"),", which is ",(0,l.kt)("inlineCode",{parentName:"p"},"localhost:8080")," by default."),(0,l.kt)("p",null,"Unpack static Kraken Web UI content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"tar -zxvf krakenci_ui-VERSION.tar.gz\n")),(0,l.kt)("p",null,"Copy this static content to ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/share/nginx/html"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ sudo cp -a krakenci_ui-VERSION/* /usr/share/nginx/html\n")),(0,l.kt)("p",null,"Now remove the default site in Nginx and add the kraken site:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ sudo rm /etc/nginx/sites-enabled/default\n$ sudo ln -s /etc/nginx/sites-available/kraken /etc/nginx/sites-enabled/kraken\n")),(0,l.kt)("p",null,"Now restart and check the Nginx service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ sudo systemctl restart nginx\n$ sudo systemctl status nginx\n")),(0,l.kt)("p",null,"Now you may check if Kraken web UI is working by visiting\n",(0,l.kt)("a",{parentName:"p",href:"http://localhost/"},"http://localhost/")," in your web browser or using curl:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ curl http://localhost/\n")),(0,l.kt)("p",null,"In a web browser, log in with ",(0,l.kt)("inlineCode",{parentName:"p"},"admin"),":",(0,l.kt)("inlineCode",{parentName:"p"},"admin")," credentials.  Next, go to\n",(0,l.kt)("inlineCode",{parentName:"p"},"Configuration"),"->",(0,l.kt)("inlineCode",{parentName:"p"},"Settings")," page and on ",(0,l.kt)("inlineCode",{parentName:"p"},"General")," tab set ",(0,l.kt)("inlineCode",{parentName:"p"},"Kraken\nServer URL"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"MinIO Address")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Clickhouse Proxy Address"),". And then\nclick the save button at the bottom."),(0,l.kt)("p",null,"Now you can install Kraken Agent."),(0,l.kt)("h3",{id:"agent"},"Agent"),(0,l.kt)("p",null,"Unpack ",(0,l.kt)("inlineCode",{parentName:"p"},"krakenci_agent-VERSION.tar.gz")," and copy\n",(0,l.kt)("inlineCode",{parentName:"p"},"krakenci_agent-VERSION/kkagent")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"krakenci_agent-0.1091/kktool")," to\n",(0,l.kt)("inlineCode",{parentName:"p"},"KKAGENT_DIR")," i.e. ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/share/nginx/html/agent"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ tar -zxvf krakenci_agent-VERSION.tar.gz\n$ sudo mkdir -p /usr/share/nginx/html/agent\n$ sudo cp -a krakenci_agent-VERSION/* /usr/share/nginx/html/agent/\n")),(0,l.kt)("p",null,"In Kraken Web UI, go to ",(0,l.kt)("inlineCode",{parentName:"p"},"Agents")," menu and click ",(0,l.kt)("inlineCode",{parentName:"p"},"Download"),". This will\ndownload a script for installing ",(0,l.kt)("inlineCode",{parentName:"p"},"Kraken Agent"),"."),(0,l.kt)("p",null,"Transfer it to a machine where you want to have Kraken Agent running\nand then run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ chmod a+x kraken-agent-install.sh\n$ ./kraken-agent-install.sh\n+ KRAKEN_URL=http://10.79.46.85\n+ sudo -n true\n+ '[' 0 -ne 0 ']'\n+ python3 --version\nPython 3.10.6\n+ '[' 0 -ne 0 ']'\n+ DL_TOOL=\n+ which curl\n/usr/bin/curl\n+ '[' 0 -ne 0 ']'\n+ DL_TOOL=curl\n+ set -e\n+ '[' curl == wget ']'\n+ curl -o /tmp/kkagent http://10.79.46.85/install/agent\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 1366k  100 1366k    0     0  70.1M      0 --:--:-- --:--:-- --:--:-- 74.1M\n+ chmod a+x /tmp/kkagent\n+ export KRAKEN_CLICKHOUSE_ADDR=10.79.46.85:9001\n+ KRAKEN_CLICKHOUSE_ADDR=10.79.46.85:9001\n+ /tmp/kkagent install -s http://10.79.46.85\n2022-12-06 05:11:29,897 INFO p: 4552     logs:409   setup logging on agent to clickhouse: 10.79.46.85:9001\n2022-12-06 05:11:29,898 INFO p: 4552     main:49    Starting Kraken Agent, version 0.1091\n2022-12-06 05:11:29,899 INFO p: 4552     main:50    using Python version 3.10.6\n2022-12-06 05:11:30,063 INFO p: 4552  install:107   no docker group\nCreated symlink /etc/systemd/system/multi-user.target.wants/kraken-agent.service \u2192 /lib/systemd/system/kraken-agent.service.\n\u25cf kraken-agent.service - Kraken Agent\n     Loaded: loaded (/lib/systemd/system/kraken-agent.service; enabled; vendor preset: enabled)\n    Drop-In: /run/systemd/system/service.d\n             \u2514\u2500zzz-lxc-service.conf\n     Active: active (running) since Tue 2022-12-06 05:11:30 UTC; 37ms ago\n   Main PID: 4737 (python3)\n      Tasks: 1 (limit: 14079)\n     Memory: 2.7M\n        CPU: 27ms\n     CGroup: /system.slice/kraken-agent.service\n             \u2514\u25004737 python3 /opt/kraken/kkagent run\n\nDec 06 05:11:30 u22 systemd[1]: Started Kraken Agent.\n+ rm -f /tmp/kkagent\n+ echo 'Kraken Agent installed'\nKraken Agent installed\n")),(0,l.kt)("p",null,"You can check logs of the installed agent by invoking:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"sudo journalctl -u kraken-agent\n")),(0,l.kt)("p",null,"In the logs, there should be seen a response with information that the\nagent is unauthorized:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"...\nDec 06 05:12:41 u22 kkagent[4737]: 2022-12-06 05:12:41,974 INFO p: 4737    agent:137   RESP {'unauthorized': True}\nDec 06 05:12:41 u22 kkagent[4737]: 2022-12-06 05:12:41,975 WARN p: 4737    agent:140   agent is not authorized, sleeping for 10s\n...\n")),(0,l.kt)("p",null,"Now go to Kraken web UI and go to ",(0,l.kt)("inlineCode",{parentName:"p"},"Agents"),"->",(0,l.kt)("inlineCode",{parentName:"p"},"Discovered")," menu. The\nstarted agent should be present there. Select the checkbox on the left\nand click ",(0,l.kt)("inlineCode",{parentName:"p"},"Authorize")," button at the top."),(0,l.kt)("p",null,"Now switch the web page to the list of authorized agents:\n",(0,l.kt)("inlineCode",{parentName:"p"},"Agents"),"->",(0,l.kt)("inlineCode",{parentName:"p"},"Agents"),". Now the agent should be visible here and should be\nenabled."),(0,l.kt)("p",null,"Recheck the agent logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"sudo journalctl -u kraken-agent\n")),(0,l.kt)("p",null,"Now it should be visible that the received job by the agent is empty:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"...\nDec 06 05:14:52 u22 kkagent[4737]: 2022-12-06 05:14:52,348 INFO p: 4737    agent:137   RESP {}\nDec 06 05:14:52 u22 kkagent[4737]: 2022-12-06 05:14:52,361 INFO p: 4737     logs:409   setup logging on agent to clickhouse: 10.79.46.85:9001\nDec 06 05:14:52 u22 kkagent[4737]: 2022-12-06 05:14:52,362 INFO p: 4737    agent:163   received job: {}\n...\n")),(0,l.kt)("h2",{id:"the-first-job"},"The First Job"),(0,l.kt)("p",null,"But first, install Git and Pytest on the machine where the Kraken Agent is\nrunning. The demo job requires that."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shellsession"},"$ sudo apt install git python3-pytest\n")),(0,l.kt)("p",null,"Now, go to Krakek Web UI, go to the main page (click on the logo in\nthe left top corner), click ",(0,l.kt)("inlineCode",{parentName:"p"},"master")," branch in ",(0,l.kt)("inlineCode",{parentName:"p"},"Project Demo")," and now\nclick ",(0,l.kt)("inlineCode",{parentName:"p"},"Run Flow")," button and then ",(0,l.kt)("inlineCode",{parentName:"p"},"Submit"),". You should be on the ",(0,l.kt)("inlineCode",{parentName:"p"},"Flow\n1.")," page. In the big box, click ",(0,l.kt)("inlineCode",{parentName:"p"},"Tests")," title (this is the name of the\njob). This will land you on the Run page, where one job should be\nvisible in the pane on the left, while there should be logs in the\nright pane."))}u.isMDXComponent=!0}}]);