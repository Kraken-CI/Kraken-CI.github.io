(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[4990],{4137:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8742:function(e,t,n){"use strict";var a=n(7294);t.Z=function(e){var t=e.img;return a.createElement("img",{src:"/img/"+t,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}})}},2844:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var a=n(4034),i=n(9973),r=(n(7294),n(4137)),s=n(8742),o=["components"],l={id:"autoscale-in-cloud",title:"Autoscale in Cloud"},c=void 0,u={unversionedId:"autoscale-in-cloud",id:"autoscale-in-cloud",isDocsHomePage:!1,title:"Autoscale in Cloud",description:"Kraken CI allows for creating executing machines dynamically in the",source:"@site/docs/autoscale-in-cloud.mdx",sourceDirName:".",slug:"/autoscale-in-cloud",permalink:"/docs/autoscale-in-cloud",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/autoscale-in-cloud.mdx",tags:[],version:"current",frontMatter:{id:"autoscale-in-cloud",title:"Autoscale in Cloud"},sidebar:"someSidebar",previous:{title:"LXD Executor",permalink:"/docs/lxd-executor"},next:{title:"Test Results",permalink:"/docs/test-results"}},p=[{value:"Global Cloud Settings",id:"global-cloud-settings",children:[],level:2},{value:"Preparing Cloud Environment",id:"preparing-cloud-environment",children:[],level:2},{value:"Configuration in Agents Groups",id:"configuration-in-agents-groups",children:[{value:"AWS EC2",id:"aws-ec2",children:[],level:3},{value:"AWS ECS",id:"aws-ecs",children:[],level:3},{value:"Azure VM",id:"azure-vm",children:[],level:3}],level:2},{value:"Usage",id:"usage",children:[],level:2}],d={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Kraken CI allows for creating executing machines dynamically in the\ncloud when they are needed. They can be either virtual machines or\ncontainers. When new jobs are triggered and there are no agents\navailable for them, new machines with Kraken agents are\nspawned. The configuration of the way of spawning new machines is\nlocated in agent groups."),(0,r.kt)("p",null,"Currently, Kraken CI autoscaling is supporting:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"AWS EC2 virtual machines"),(0,r.kt)("li",{parentName:"ul"},"AWS ECS containers"),(0,r.kt)("li",{parentName:"ul"},"Azure virtual machines")),(0,r.kt)("h2",{id:"global-cloud-settings"},"Global Cloud Settings"),(0,r.kt)("p",null,"First, global settings have to be set to allow access to a given cloud\nprovider. In Web UI, on Kraken -> Settings page, in Cloud tab,\nthere is a form for collecting credentials to cloud providers:"),(0,r.kt)(s.Z,{img:"screen-settings-cloud.png",mdxType:"Screen"}),(0,r.kt)("p",null,"In the case of AWS, there are required ",(0,r.kt)("inlineCode",{parentName:"p"},"Access Key")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Secret Access Key"),"."),(0,r.kt)("p",null,"When Microsoft Azure is used, then there are required ",(0,r.kt)("inlineCode",{parentName:"p"},"Subscription ID"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"Tenant ID"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Client ID")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Client Secret"),"."),(0,r.kt)("h2",{id:"preparing-cloud-environment"},"Preparing Cloud Environment"),(0,r.kt)("p",null,"In the case of AWS, it is also required to assign proper permissions so\nthat Kraken can create or destroy EC2 instances. List of all requires\npermissions looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Sid": "VisualEditor0",\n            "Effect": "Allow",\n            "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateKeyPair",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteKeyPair",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus"\n                "ec2:DescribeInstanceTypeOfferings",\n                "ec2:DescribeRegions",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeVpcs",\n                "ec2:RunInstances",\n                "ec2:TerminateInstances",\n            ],\n            "Resource": "*"\n        }\n    ]\n}\n')),(0,r.kt)("h2",{id:"configuration-in-agents-groups"},"Configuration in Agents Groups"),(0,r.kt)("p",null,"Having set credentials to cloud providers, it is possible now to\nconfigure the aspects of spawning new machines. This can be done on Kraken\n-> Agents -> Groups page.  When a particular group is selected, then\nits details will be presented on a separate tab. On this tab, there is\na section ",(0,r.kt)("inlineCode",{parentName:"p"},"Agents Deployment"),". So the deployment can be manual\n(default) or automated to particular cloud provider."),(0,r.kt)("h3",{id:"aws-ec2"},"AWS EC2"),(0,r.kt)("p",null,"In the case of ",(0,r.kt)("inlineCode",{parentName:"p"},"AWS EC2"),", jobs are executed in AWS EC2 VMs. There are\nthe following options that can be set:"),(0,r.kt)(s.Z,{img:"screen-agents-groups-cloud-aws.png",mdxType:"Screen"}),(0,r.kt)("p",null,"The meaning of the settings is as follows."),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"General")," section:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Region")," - AWS region where a machine will be spawned"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Instances Limit")," - maximum number of spawned machines at a time"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default AMI Image")," - if AMI image is not provided in job definition\nthen this one is used"),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"VM Options")," section:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Instance Type")," - EC2 instance type that should be used for spawned\nmachines, the full list is available on ",(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/ec2/instance-types/"},"AWS web\npage")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Spot Instance")," - indicates where Spot instance should be used (",(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/ec2/spot/"},"AWS\ndocs"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Monitoring")," - indicates if monitoring should be enabled (",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html"},"AWS\ndocs"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"CPU Credits Unlimited")," - this allows having more burst power, more\nin ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-unlimited-mode.html"},"AWS\ndocs")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Disk Size")," - the size of root disk, if 0 then default size is used otherwise provided number is counted in GB"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Init Script")," - a value of this text is passed as UserData to EC2\ninstance, generally, this is a script that is executing during the\nfirst boot of instance (",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html"},"AWS docs"),")"),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"Destruction")," section:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Destroy VM after N jobs")," - this indicates that the machine should\nbe destroyed (terminated) after it is used in N Kraken jobs, default\nis 1, ie. machine is used once and then it is destroyed so each time\na new fresh machine is used for each job; 0 means that this\nmechanism is disabled"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Destroy VM after N minutes of idle time")," - this indicates that the\nmachine should be destroyed (terminated) after it is not used in any\nKraken jobs for a given number of minutes, default is 10 minutes,\nie. a machine is destroyed if it sits idle for 10 minutes; 0 means\nthat this mechanism is disabled"),(0,r.kt)("h3",{id:"aws-ecs"},"AWS ECS"),(0,r.kt)("p",null,"In the case of ",(0,r.kt)("inlineCode",{parentName:"p"},"AWS ECS"),", jobs are executed in containers in AWS ECS\ncluster. There are the following options that can be set:"),(0,r.kt)(s.Z,{img:"screen-agents-groups-cloud-aws-ecs.png",mdxType:"Screen"}),(0,r.kt)("p",null,"The meaning of the settings is as follows."),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"General")," section:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Region")," - AWS region where a machine will be spawned"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Instances Limit")," - maximum number of spawned machines at a time"),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"ECS Task Options")," section:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Cluster")," - the name of ECS cluster"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Subnets")," - a list of subnets IDs separated by comma"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Security Group")," - ID of security group used for spawned tasks and their containers"),(0,r.kt)("h3",{id:"azure-vm"},"Azure VM"),(0,r.kt)("p",null,"In the case of ",(0,r.kt)("inlineCode",{parentName:"p"},"Azure VM"),", jobs are executed in containers in\nMicrosoft Azure VMs. There are the following options that can be set:"),(0,r.kt)(s.Z,{img:"screen-agents-groups-cloud-azure-vm.png",mdxType:"Screen"}),(0,r.kt)("p",null,"The meaning of the settings is as follows."),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"General")," section:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Location")," - Azure location (region) where a machine will be spawned"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Instances Limit")," - maximum number of spawned machines at a time"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Image")," - if image is not provided in job definition\nthen this one is used; the expected format is: publisher:offer:sku:version,\ne.g.: Canonical:0001-com-ubuntu-server-focal:20_04-lts:20.04.202109080"),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"VM Options")," section:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"VM Size")," - Azure VM size that should be used for spawned\nmachines; more about VM sizes can be found on ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/virtual-machines/sizes"},"Azure web\npage")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Init Script")," - a value of this text is passed as user_data to VM\ninstance, generally, this is a script that is executing during the\nfirst boot of instance"),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"Destruction")," section:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Destroy VM after N jobs")," - this indicates that the machine should\nbe destroyed (terminated) after it is used in N Kraken jobs, default\nis 1, ie. machine is used once and then it is destroyed so each time\na new fresh machine is used for each job; 0 means that this\nmechanism is disabled"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Destroy VM after N minutes of idle time")," - this indicates that the\nmachine should be destroyed (terminated) after it is not used in any\nKraken jobs for a given number of minutes, default is 10 minutes,\nie. a machine is destroyed if it sits idle for 10 minutes; 0 means\nthat this mechanism is disabled"),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Now when a job is assigned to an agents group with configured Agents\nDeployment then a new machine will be spawned for that job if there\nare no available agents."))}m.isMDXComponent=!0}}]);