"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[4990],{4137:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,k=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return t?a.createElement(k,i(i({ref:n},c),{},{components:t})):a.createElement(k,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<s;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8742:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.img;return a.createElement("a",{href:"/img/"+n,target:"blank"},a.createElement("img",{src:"/img/"+n,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}}))}},425:function(e,n,t){t.d(n,{Z:function(){return i}});var a=t(7294),r=t(6010),s="tabItem_Ymn6";function i(e){var n=e.children,t=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,i),hidden:t},n)}},3992:function(e,n,t){t.d(n,{Z:function(){return N}});var a=t(3117),r=t(7294),s=t(6010),i=t(2957),o=t(6775),l=t(5238),u=t(3609),c=t(2560);function p(e){return function(e){var n,t;return null!=(n=null==(t=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(n=e.props)&&"object"==typeof n&&"value"in n)return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}function d(e){var n=e.values,t=e.children;return(0,r.useMemo)((function(){var e=null!=n?n:p(t);return function(e){var n=(0,u.l)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function m(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function k(e){var n=e.queryString,t=void 0!==n&&n,a=e.groupId,s=(0,o.k6)(),i=function(e){var n=e.queryString,t=void 0!==n&&n,a=e.groupId;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:t,groupId:a});return[(0,l._X)(i),(0,r.useCallback)((function(e){if(i){var n=new URLSearchParams(s.location.search);n.set(i,e),s.replace(Object.assign({},s.location,{search:n.toString()}))}}),[i,s])]}function h(e){var n,t,a,s,i=e.defaultValue,o=e.queryString,l=void 0!==o&&o,u=e.groupId,p=d(e),h=(0,r.useState)((function(){return function(e){var n,t=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}var r=null!=(n=a.find((function(e){return e.default})))?n:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:i,tabValues:p})})),f=h[0],g=h[1],b=k({queryString:l,groupId:u}),v=b[0],y=b[1],w=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),t=(0,c.Nk)(n),a=t[0],s=t[1],[a,(0,r.useCallback)((function(e){n&&s.set(e)}),[n,s])]),N=w[0],C=w[1],S=function(){var e=null!=v?v:N;return m({value:e,tabValues:p})?e:null}();return(0,r.useLayoutEffect)((function(){S&&g(S)}),[S]),{selectedValue:f,selectValue:(0,r.useCallback)((function(e){if(!m({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),C(e)}),[y,C,p]),tabValues:p}}var f=t(1048),g="tabList__CuJ",b="tabItem_LNqP";function v(e){var n=e.className,t=e.block,o=e.selectedValue,l=e.selectValue,u=e.tabValues,c=[],p=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var n=e.currentTarget,t=c.indexOf(n),a=u[t].value;a!==o&&(p(n),l(a))},m=function(e){var n,t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var a,r=c.indexOf(e.currentTarget)+1;t=null!=(a=c[r])?a:c[0];break;case"ArrowLeft":var s,i=c.indexOf(e.currentTarget)-1;t=null!=(s=c[i])?s:c[c.length-1]}null==(n=t)||n.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n)},u.map((function(e){var n=e.value,t=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,key:n,ref:function(e){return c.push(e)},onKeyDown:m,onClick:d},i,{className:(0,s.Z)("tabs__item",b,null==i?void 0:i.className,{"tabs__item--active":o===n})}),null!=t?t:n)})))}function y(e){var n=e.lazy,t=e.children,a=e.selectedValue,s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){var i=s.find((function(e){return e.props.value===a}));return i?(0,r.cloneElement)(i,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})})))}function w(e){var n=h(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",g)},r.createElement(v,(0,a.Z)({},e,n)),r.createElement(y,(0,a.Z)({},e,n)))}function N(e){var n=(0,f.Z)();return r.createElement(w,(0,a.Z)({key:String(n)},e))}},2844:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return k}});var a=t(3117),r=t(102),s=(t(7294),t(4137)),i=t(3992),o=t(425),l=t(8742),u=["components"],c={id:"autoscale-in-cloud",title:"Autoscale in Cloud"},p=void 0,d={unversionedId:"autoscale-in-cloud",id:"autoscale-in-cloud",title:"Autoscale in Cloud",description:"Kraken CI allows for creating executing machines dynamically in the",source:"@site/docs/autoscale-in-cloud.mdx",sourceDirName:".",slug:"/autoscale-in-cloud",permalink:"/docs/autoscale-in-cloud",draft:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/autoscale-in-cloud.mdx",tags:[],version:"current",frontMatter:{id:"autoscale-in-cloud",title:"Autoscale in Cloud"},sidebar:"someSidebar",previous:{title:"Webhooks",permalink:"/docs/webhooks"},next:{title:"Test Results Basics",permalink:"/docs/test-results-basics"}},m={},k=[{value:"Preparing Cloud Environment",id:"preparing-cloud-environment",level:2},{value:"Global Cloud Settings",id:"global-cloud-settings",level:2},{value:"Configuration in Agents Groups",id:"configuration-in-agents-groups",level:2},{value:"Usage",id:"usage",level:2}],h={toc:k};function f(e){var n=e.components,c=(0,r.Z)(e,u);return(0,s.kt)("wrapper",(0,a.Z)({},h,c,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Kraken CI allows for creating executing machines dynamically in the\ncloud when they are needed. They can be either virtual machines or\ncontainers. When new jobs are triggered and there are no agents\navailable for them, new machines with Kraken agents are\nspawned. The configuration of the way of spawning new machines is\nlocated in agent groups."),(0,s.kt)("p",null,"Currently, Kraken CI autoscaling is supporting:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"AWS EC2 virtual machines"),(0,s.kt)("li",{parentName:"ul"},"AWS ECS containers"),(0,s.kt)("li",{parentName:"ul"},"Azure virtual machines"),(0,s.kt)("li",{parentName:"ul"},"Kubernetes")),(0,s.kt)("h2",{id:"preparing-cloud-environment"},"Preparing Cloud Environment"),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"aws-ec2",label:"AWS EC2",default:!0,mdxType:"TabItem"},(0,s.kt)("p",null,"In the case of AWS EC2, it is required to assign proper permissions to the\naccessing user so that Kraken can create or destroy EC2\ninstances. The list of all requires permissions looks as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Sid": "VisualEditor0",\n            "Effect": "Allow",\n            "Action": [\n                "ec2:AuthorizeSecurityGroupIngress",\n                "ec2:CreateKeyPair",\n                "ec2:CreateSecurityGroup",\n                "ec2:CreateTags",\n                "ec2:DeleteKeyPair",\n                "ec2:DescribeInstances",\n                "ec2:DescribeInstanceStatus"\n                "ec2:DescribeInstanceTypeOfferings",\n                "ec2:DescribeRegions",\n                "ec2:DescribeSecurityGroups",\n                "ec2:DescribeVpcs",\n                "ec2:RunInstances",\n                "ec2:TerminateInstances",\n            ],\n            "Resource": "*"\n        }\n    ]\n}\n'))),(0,s.kt)(o.Z,{value:"aws-ecs",label:"AWS ECS",mdxType:"TabItem"},(0,s.kt)("p",null,"In the case of AWS ECS, it is required to assign proper permissions to\nthe accessing user so that Kraken can create or destroy ECS\ntasks. The list of all requires permissions looks as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Sid": "VisualEditor0",\n            "Effect": "Allow",\n            "Action": [\n                "ec2:DescribeNetworkInterfaces",\n                "ecs:RunTask",\n                "ecs:StopTask",\n                "ecs:DescribeTasks",\n                "ecs:ListTaskDefinitions"\n            ],\n            "Resource": "*"\n        },\n        {\n            "Sid": "VisualEditor1",\n            "Effect": "Allow",\n            "Action": "iam:PassRole",\n            "Resource": "arn:aws:iam::*:role/ecsTaskExecutionRole"\n        }\n    ]\n}\n'))),(0,s.kt)(o.Z,{value:"kubernetes",label:"Kubernetes",mdxType:"TabItem"},(0,s.kt)("p",null,"For Kubernetes, there are two accessing variants: Kraken CI is\ninstalled inside Kubernetes cluster or outside. In both cases, a proper\naccess must be configured. When Kraken is installed inside a\nKubernetes cluster then this is made using Helm chart and it also sets\nservice account and proper permissions. When Kraken CI sits outside of\nKubernetes cluster, then the service account and permissions must be\nconfigured in the following way."),(0,s.kt)("p",null,"The content:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Namespace\nmetadata:\n  name: <namespace>\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kraken\n  namespace: <namespace>\n\n---\n\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\n\nmetadata:\n  name: kraken-role\n\nrules:\n  - apiGroups: [""]\n    resources: ["nodes", "services", "pods", "endpoints", "namespaces"]\n    verbs: ["get", "list", "watch"]\n  - apiGroups: [""]\n    resources: ["pods"]\n    verbs: ["create", "delete"]\n\n---\n\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\n\nmetadata:\n  name: kraken-crb\n\nroleRef:\n  kind: ClusterRole\n  name: kraken-role\n  apiGroup: rbac.authorization.k8s.io\n\nsubjects:\n  - kind: ServiceAccount\n    name: kraken\n    namespace: <namespace>\n')),(0,s.kt)("p",null,"should be copied and pasted to ",(0,s.kt)("inlineCode",{parentName:"p"},"kraken-serviceaccount.yaml")," file or\ndownloaded from ",(0,s.kt)("a",{target:"_blank",href:t(9339).Z},"here"),". Before creating\nthe resources, set your namespace by replacing all occurrences of\n",(0,s.kt)("inlineCode",{parentName:"p"},"<namespace>")," with e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"kraken"),"."),(0,s.kt)("p",null,"And then create these resources using ",(0,s.kt)("inlineCode",{parentName:"p"},"kubectl"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-console"},"kubectl apply -f kraken-serviceaccount.yaml\n")),(0,s.kt)("p",null,"This will create:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"an indicated namespace (e.g. ",(0,s.kt)("inlineCode",{parentName:"li"},"kraken"),"),"),(0,s.kt)("li",{parentName:"ul"},"a service account ",(0,s.kt)("inlineCode",{parentName:"li"},"kraken"),","),(0,s.kt)("li",{parentName:"ul"},"a cluster role ",(0,s.kt)("inlineCode",{parentName:"li"},"kraken-role")," that allows browsing nodes, services,\npods, endpoints and namespaces, and creating and deleting pods,"),(0,s.kt)("li",{parentName:"ul"},"cluster role binding ",(0,s.kt)("inlineCode",{parentName:"li"},"kraken-crb")," that assigns ",(0,s.kt)("inlineCode",{parentName:"li"},"kraken-role")," role to ",(0,s.kt)("inlineCode",{parentName:"li"},"kraken"),"\nservice account")),(0,s.kt)("p",null,"Service account's token will be used in the next steps."))),(0,s.kt)("h2",{id:"global-cloud-settings"},"Global Cloud Settings"),(0,s.kt)("p",null,"First, global settings must be set to allow access to a given cloud\nprovider. In Web UI, on Kraken -> Settings page, in Cloud tab,\nthere is a form for collecting credentials to cloud providers:"),(0,s.kt)(l.Z,{img:"screen-settings-cloud.png",mdxType:"Screen"}),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"aws",label:"AWS",default:!0,mdxType:"TabItem"},(0,s.kt)("p",null,"In the case of AWS, ",(0,s.kt)("inlineCode",{parentName:"p"},"Access Key")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"Secret Access Key")," are required.")),(0,s.kt)(o.Z,{value:"azure",label:"Azure",mdxType:"TabItem"},(0,s.kt)("p",null,"When Microsoft Azure is used, then there are required ",(0,s.kt)("inlineCode",{parentName:"p"},"Subscription ID"),",\n",(0,s.kt)("inlineCode",{parentName:"p"},"Tenant ID"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"Client ID")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"Client Secret"),".")),(0,s.kt)(o.Z,{value:"kubernetes",label:"Kubernetes",mdxType:"TabItem"},(0,s.kt)("p",null,"When Kraken is installed inside Kubernetes cluster, then only setting\n",(0,s.kt)("inlineCode",{parentName:"p"},"Namespace")," field is required, ",(0,s.kt)("inlineCode",{parentName:"p"},"API Server URL")," must be empty."),(0,s.kt)("p",null,"When Kraken is running outside of Kubernetes cluster then all fields\nare required: ",(0,s.kt)("inlineCode",{parentName:"p"},"API Server URL"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"Namespace")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"Token"),". ",(0,s.kt)("inlineCode",{parentName:"p"},"Namespace"),"\nand ",(0,s.kt)("inlineCode",{parentName:"p"},"Token")," were created in previous steps. The following commands will\nreveal the token."),(0,s.kt)("p",null,"First, check the definition of ",(0,s.kt)("inlineCode",{parentName:"p"},"kraken")," service account:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-console"},"kubectl get serviceaccounts/kraken -n <namespace> -o yaml\n")),(0,s.kt)("p",null,"This should display a list of secrets at the bottom. The token should\nbe stored in a secret with a name in the form ",(0,s.kt)("inlineCode",{parentName:"p"},"kraken-token-XXXXX"),"\nlike e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"kraken-token-5fvcb"),"."),(0,s.kt)("p",null,"Now retrieve the token value:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-console"},"kubectl get secret kraken-token-XXXXX -n <namespace> -o yaml\n")),(0,s.kt)("p",null,"The value should be under the token field, and it should be pretty\nlong. It is encoded using base64, and in this form, it should be copied\n& pasted to Kraken CI cloud settings (no decoding is required)."))),(0,s.kt)("h2",{id:"configuration-in-agents-groups"},"Configuration in Agents Groups"),(0,s.kt)("p",null,"Having set credentials to cloud providers, it is possible now to\nconfigure the aspects of spawning new machines. This can be done on Kraken\n-> Agents -> Groups page.  When a particular group is selected, then\nits details will be presented on a separate tab. On this tab, there is\na section ",(0,s.kt)("inlineCode",{parentName:"p"},"Agents Deployment"),". So the deployment can be manual\n(default) or automated to the particular cloud provider."),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"aws-ec2",label:"AWS EC2",default:!0,mdxType:"TabItem"},(0,s.kt)("p",null,"In the case of ",(0,s.kt)("inlineCode",{parentName:"p"},"AWS EC2"),", jobs are executed in AWS EC2 VMs. There are\nthe following options that can be set:"),(0,s.kt)(l.Z,{img:"screen-agents-groups-cloud-aws.png",mdxType:"Screen"}),(0,s.kt)("p",null,"The meaning of the settings is as follows."),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"General")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Region")," - AWS region where a machine will be spawned"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Instances Limit")," - maximum number of spawned machines at a time"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Default AMI Image")," - if AMI image is not provided in job definition\nthen this one is used"),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"VM Options")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Instance Type")," - EC2 instance type that should be used for spawned\nmachines, the full list is available on ",(0,s.kt)("a",{parentName:"p",href:"https://aws.amazon.com/ec2/instance-types/"},"AWS web\npage")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Spot Instance")," - indicates where Spot instance should be used (",(0,s.kt)("a",{parentName:"p",href:"https://aws.amazon.com/ec2/spot/"},"AWS\ndocs"),")"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Monitoring")," - indicates if monitoring should be enabled (",(0,s.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html"},"AWS\ndocs"),")"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"CPU Credits Unlimited")," - this allows having more burst power, more\nin ",(0,s.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-unlimited-mode.html"},"AWS\ndocs")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Disk Size")," - the size of root disk, if 0 then default size is used otherwise provided number is counted in GB"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Init Script")," - a value of this text is passed as UserData to EC2\ninstance, generally, this is a script that is executing during the\nfirst boot of instance (",(0,s.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html"},"AWS docs"),")"),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"Destruction")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Destroy VM after N jobs")," - this indicates that the machine should\nbe destroyed (terminated) after it is used in N Kraken jobs, default\nis 1, ie. machine is used once and then it is destroyed so each time\na new fresh machine is used for each job; 0 means that this\nmechanism is disabled"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Destroy VM after N minutes of idle time")," - this indicates that the\nmachine should be destroyed (terminated) after it is not used in any\nKraken jobs for a given number of minutes, default is 10 minutes,\nie. a machine is destroyed if it sits idle for 10 minutes; 0 means\nthat this mechanism is disabled")),(0,s.kt)(o.Z,{value:"aws-ecs",label:"AWS ECS",mdxType:"TabItem"},(0,s.kt)("p",null,"In the case of ",(0,s.kt)("inlineCode",{parentName:"p"},"AWS ECS"),", jobs are executed in containers in AWS ECS\ncluster. There are the following options that can be set:"),(0,s.kt)(l.Z,{img:"screen-agents-groups-cloud-aws-ecs.png",mdxType:"Screen"}),(0,s.kt)("p",null,"The meaning of the settings is as follows."),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"General")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Region")," - AWS region where a machine will be spawned"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Instances Limit")," - maximum number of spawned machines at a time"),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"ECS Task Options")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Cluster")," - the name of ECS cluster"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Subnets")," - a list of subnets IDs separated by comma"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Security Group")," - ID of security group used for spawned tasks and their containers")),(0,s.kt)(o.Z,{value:"azure-vm",label:"Azure VM",mdxType:"TabItem"},(0,s.kt)("p",null,"In the case of ",(0,s.kt)("inlineCode",{parentName:"p"},"Azure VM"),", jobs are executed in virtual machines, in\nMicrosoft Azure VMs. There are the following options that can be set:"),(0,s.kt)(l.Z,{img:"screen-agents-groups-cloud-azure-vm.png",mdxType:"Screen"}),(0,s.kt)("p",null,"The meaning of the settings is as follows."),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"General")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Location")," - Azure location (region) where a machine will be spawned"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Instances Limit")," - maximum number of spawned machines at a time"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Default Image")," - if image is not provided in job definition\nthen this one is used; the expected format is: publisher:offer:sku:version,\ne.g.: Canonical:0001-com-ubuntu-server-focal:20_04-lts:20.04.202109080"),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"VM Options")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"VM Size")," - Azure VM size that should be used for spawned\nmachines; more about VM sizes can be found on ",(0,s.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/virtual-machines/sizes"},"Azure web\npage")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Init Script")," - a value of this text is passed as user_data to VM\ninstance, generally, this is a script that is executing during the\nfirst boot of instance"),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"Destruction")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Destroy VM after N jobs")," - this indicates that the machine should\nbe destroyed (terminated) after it is used in N Kraken jobs, default\nis 1, ie. machine is used once and then it is destroyed so each time\na new fresh machine is used for each job; 0 means that this\nmechanism is disabled"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Destroy VM after N minutes of idle time")," - this indicates that the\nmachine should be destroyed (terminated) after it is not used in any\nKraken jobs for a given number of minutes, default is 10 minutes,\nie. a machine is destroyed if it sits idle for 10 minutes; 0 means\nthat this mechanism is disabled")),(0,s.kt)(o.Z,{value:"kubernetes",label:"Kubernetes",mdxType:"TabItem"},(0,s.kt)("p",null,"In the case of ",(0,s.kt)("inlineCode",{parentName:"p"},"Kubernetes"),", jobs are executed in containers in a\nKubernetes cluster. Kubernetes cluster can be self-hosted or hosted in\na public cloud like AWS EKS. There are the following options that can\nbe set:"),(0,s.kt)(l.Z,{img:"screen-agents-groups-cloud-kubernetes.png",mdxType:"Screen"}),(0,s.kt)("p",null,"The meaning of the settings is as follows."),(0,s.kt)("p",null,"In ",(0,s.kt)("strong",{parentName:"p"},"General")," section:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Instances Limit")," - maximum number of spawned containers at a time"))),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,"Now when a job is assigned to an agents group with configured Agents\nDeployment then a new machine will be spawned for that job if there\nare no available agents."))}f.isMDXComponent=!0},9339:function(e,n,t){n.Z=t.p+"assets/files/kraken-serviceaccount-bd8f51df760fdd9340742705154f3f28.yaml"}}]);