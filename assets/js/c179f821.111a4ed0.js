(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[3699],{4137:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(n),d=o,k=h["".concat(l,".").concat(d)]||h[d]||u[d]||a;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8742:function(e,t,n){"use strict";var r=n(7294);t.Z=function(e){var t=e.img;return r.createElement("img",{src:"/img/"+t,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}})}},8003:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(4034),o=n(9973),a=(n(7294),n(4137)),i=n(8742),s=["components"],l={id:"quick-start",title:"Quick Start"},c=void 0,p={unversionedId:"quick-start",id:"quick-start",isDocsHomePage:!1,title:"Quick Start",description:"This quick start guide shows how to install Kraken CI, configure a",source:"@site/docs/quick-start.mdx",sourceDirName:".",slug:"/quick-start",permalink:"/docs/quick-start",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/quick-start.mdx",tags:[],version:"current",frontMatter:{id:"quick-start",title:"Quick Start"},sidebar:"someSidebar",previous:{title:"Overview",permalink:"/docs/"},next:{title:"Philosophy",permalink:"/docs/philosophy"}},u=[{value:"1. Download Kraken Files for Docker Compose",id:"1-download-kraken-files-for-docker-compose",children:[],level:3},{value:"2. Start Kraken Services",id:"2-start-kraken-services",children:[],level:3},{value:"3. Log In",id:"3-log-in",children:[],level:3},{value:"4. Authorize Agent",id:"4-authorize-agent",children:[],level:3},{value:"5. The First Project and its Branch",id:"5-the-first-project-and-its-branch",children:[],level:3},{value:"6. Trigger the First Flow",id:"6-trigger-the-first-flow",children:[],level:3},{value:"7. Results of The Run",id:"7-results-of-the-run",children:[],level:3}],h={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This quick start guide shows how to install Kraken CI, configure a\nsimple project and run the first build."),(0,a.kt)("h3",{id:"1-download-kraken-files-for-docker-compose"},"1. Download Kraken Files for Docker Compose"),(0,a.kt)("p",null,"Download configuration files for Docker Compose from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Kraken-CI/kraken/releases"},"Kraken GitHub releases page"),".\nThey are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"kraken-docker-compose-X.Y.yaml")," - a services configuration file for Docker Compose"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"kraken-X.Y.env")," - an example configuration for Kraken services that is used by Docker Compose file")),(0,a.kt)("h3",{id:"2-start-kraken-services"},"2. Start Kraken Services"),(0,a.kt)("p",null,"In a terminal, in the folder where downloaded files are located, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"docker-compose --env-file kraken-X.Y.env -f kraken-docker-compose-X.Y.yaml up\n")),(0,a.kt)("p",null,"Now you should see lots of logs. They will not stop. First, Docker\nimages are downloaded, and then services are started."),(0,a.kt)(i.Z,{img:"qs-services-in-terminal.png",mdxType:"Screen"}),(0,a.kt)("p",null,"Try to get to the web page on ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080"),"."),(0,a.kt)("h3",{id:"3-log-in"},"3. Log In"),(0,a.kt)("p",null,"On the main page, log in as admin using ",(0,a.kt)("inlineCode",{parentName:"p"},"admin/admin")," credentials."),(0,a.kt)(i.Z,{img:"qs-login-page.png",mdxType:"Screen"}),(0,a.kt)("p",null,"After logging in, the dashboard page will appear. It shows tiles with\nprojects and their branches.  There is already a prepared project\ncalled ",(0,a.kt)("inlineCode",{parentName:"p"},"Demo"),"."),(0,a.kt)("p",null,"But first, a built-in agent that will be executing jobs needs to be\nauthorized."),(0,a.kt)("h3",{id:"4-authorize-agent"},"4. Authorize Agent"),(0,a.kt)("p",null,"Go to the menu Agents -> Discovered. The Discovered Agents page shows\nagents that try to connect to the Kraken server but were not yet\nauthorized by an admin."),(0,a.kt)(i.Z,{img:"qs-discovered-agents.png",mdxType:"Screen"}),(0,a.kt)("p",null,"Select the checkbox and click the ",(0,a.kt)("inlineCode",{parentName:"p"},"Authorized")," button."),(0,a.kt)("p",null,"Now we can go back to the main page (the dashboard) and explore\n",(0,a.kt)("inlineCode",{parentName:"p"},"Demo")," project. Click on the Kraken logo in the top left corner."),(0,a.kt)("h3",{id:"5-the-first-project-and-its-branch"},"5. The First Project and its Branch"),(0,a.kt)("p",null,"Click the cog icon on the right side of ",(0,a.kt)("inlineCode",{parentName:"p"},"Project Demo"),". It leads to\nthe project settings page."),(0,a.kt)(i.Z,{img:"qs-click-project-cog.png",mdxType:"Screen"}),(0,a.kt)("p",null,"On the project page, there is a list of branches. Let's go to the\nalready prepared ",(0,a.kt)("inlineCode",{parentName:"p"},"Master")," branch:"),(0,a.kt)(i.Z,{img:"qs-click-branch.png",mdxType:"Screen"}),(0,a.kt)("p",null,"On the branch page, there is a defined workflow that consists of stages."),(0,a.kt)(i.Z,{img:"qs-branch-workflow.png",mdxType:"Screen"}),(0,a.kt)("p",null,"On the screen, on the left, there is visible one stage, ",(0,a.kt)("inlineCode",{parentName:"p"},"Tests"),". The\nright side presents details of this stage. The black box shows the\ncritical part of the stage: it is a workflow schema that is written in\nStarlark/Python."),(0,a.kt)("p",null,"Currently, the stage's workflow pulls a sample project from\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Kraken-CI/sample-project-python.git"},"https://github.com/Kraken-CI/sample-project-python.git")," and then run\n",(0,a.kt)("inlineCode",{parentName:"p"},"pytest")," tests."),(0,a.kt)("h3",{id:"6-trigger-the-first-flow"},"6. Trigger the First Flow"),(0,a.kt)("p",null,"Click the ",(0,a.kt)("inlineCode",{parentName:"p"},"Run CI Flow")," button to trigger the first flow of the branch\nworkflow, and then confirm it by clicking the ",(0,a.kt)("inlineCode",{parentName:"p"},"Submit")," button."),(0,a.kt)("p",null,"The next page shows triggered flow details."),(0,a.kt)(i.Z,{img:"qs-completed-flow.png",mdxType:"Screen"}),(0,a.kt)("p",null,"On the left side, there is a list of runs of stages (currently there is\nonly one run: ",(0,a.kt)("inlineCode",{parentName:"p"},"Tests"),"), and on the right, there are details of this\nstage run. All is green, so it means that all completed successfully."),(0,a.kt)("h3",{id:"7-results-of-the-run"},"7. Results of The Run"),(0,a.kt)("p",null,"Click the ",(0,a.kt)("inlineCode",{parentName:"p"},"Tests")," run link to get to results of the run."),(0,a.kt)(i.Z,{img:"qs-run-jobs.png",mdxType:"Screen"}),(0,a.kt)("p",null,"The first tab, Jobs, on the run results page, shows a list of executed\njobs. Our job was pretty quick, so we see the final results. If a\njob takes more time, then here will be presented its live status and\nlogs."),(0,a.kt)("p",null,"The next tab, Test Results, presents a table with test cases and their\nstatus (passed, failed, etc.)."),(0,a.kt)(i.Z,{img:"qs-run-tests.png",mdxType:"Screen"}),(0,a.kt)("p",null,"We may conclude the quick start guide here. We encourage you to try\nto play with the workflow schema and check what can be accomplished more."))}d.isMDXComponent=!0}}]);