"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[8436],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,g=u["".concat(c,".").concat(d)]||u[d]||h[d]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8742:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.img;return r.createElement("a",{href:"/img/"+t,target:"blank"},r.createElement("img",{src:"/img/"+t,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}}))}},1531:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return h},default:function(){return d}});var r=n(3117),a=n(102),i=(n(7294),n(4137)),o=n(8742),s=["components"],c={id:"stages",title:"Stages in a Branch"},l=void 0,p={unversionedId:"stages",id:"stages",title:"Stages in a Branch",description:"Branch Stages",source:"@site/docs/stages.mdx",sourceDirName:".",slug:"/stages",permalink:"/docs/stages",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/stages.mdx",tags:[],version:"current",frontMatter:{id:"stages",title:"Stages in a Branch"},sidebar:"someSidebar",previous:{title:"Projects and Branches",permalink:"/docs/proj-branches"},next:{title:"Workflow Schema",permalink:"/docs/schema"}},h=[{value:"Branch Stages",id:"branch-stages",children:[],level:2},{value:"Chaining Stages",id:"chaining-stages",children:[],level:2},{value:"Stage Schema Source",id:"stage-schema-source",children:[],level:2}],u={toc:h};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"branch-stages"},"Branch Stages"),(0,i.kt)("p",null,"A branch contains one or several stages. Stages can be independent and\nrun in parallel or chained and together can form a tree or a set of\ntrees (forest). A stage has a schema that defines what should be\ndone. Schema generally defines jobs for execution, execution\nenvironment, triggers that start executing whole schema, optional\nparameters, and execution configuration. ",(0,i.kt)("a",{parentName:"p",href:"schema"},"The Schema chapter"),"\nprovides details of the schema."),(0,i.kt)("h2",{id:"chaining-stages"},"Chaining Stages"),(0,i.kt)("p",null,"When there are several stages in a branch, they are independent of each\nother. This means that when a new flow for a branch is triggered,\nall the stages are triggered and run in parallel."),(0,i.kt)("p",null,"It is possible to define dependencies between stages and form a chain\nor a tree of stages. Each stage can have defined its parent. One stage\ncan have one parent. One stage can have several children. A stage with\na parent is triggered when the execution of the parent stage is completed\nsuccessfully."),(0,i.kt)("h2",{id:"stage-schema-source"},"Stage Schema Source"),(0,i.kt)("p",null,"A stage schema can be defined directly in Kraken web UI, on a branch\nmanagement page. It can be also defined in a file in a Git\nrepository. The location of the repository and the schema file has to\nbe provided in ",(0,i.kt)("inlineCode",{parentName:"p"},"Schema from Repository")," tab in UI."),(0,i.kt)(o.Z,{img:"screen-branch-mgmt-schema-repo.png",mdxType:"Screen"}),(0,i.kt)("p",null,"The repository is refreshed on indicated interval basis. If there are\nany changes then the schema definition in Kraken database is updated."))}d.isMDXComponent=!0}}]);