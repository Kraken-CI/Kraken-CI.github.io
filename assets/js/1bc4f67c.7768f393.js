"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[7645],{6223:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=t(4848),o=t(8453);const i={id:"guide-intro",title:"Introductory Guide"},p=void 0,l={id:"guide-intro",title:"Introductory Guide",description:"Assumptions",source:"@site/docs/guide-intro.md",sourceDirName:".",slug:"/guide-intro",permalink:"/docs/guide-intro",draft:!1,unlisted:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/guide-intro.md",tags:[],version:"current",frontMatter:{id:"guide-intro",title:"Introductory Guide"},sidebar:"someSidebar",previous:{title:"Global Storage",permalink:"/docs/storage"},next:{title:"Autoscale Guide",permalink:"/docs/guide-autoscale"}},r={},c=[{value:"Assumptions",id:"assumptions",level:2},{value:"Project Preparation",id:"project-preparation",level:2},{value:"Stage Hello World",id:"stage-hello-world",level:2},{value:"Git Repo Checkout Step",id:"git-repo-checkout-step",level:2},{value:"Run Tests Step",id:"run-tests-step",level:2},{value:"Building Step",id:"building-step",level:2},{value:"Storing Artifacts Step",id:"storing-artifacts-step",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"assumptions",children:"Assumptions"}),"\n",(0,s.jsxs)(n.p,{children:["We are using fresh Kraken installation using Docker Compose with built-in Agent running in Docker as well.\nInstallation instruction can be found in ",(0,s.jsx)(n.a,{href:"/docs/install-docker-compose",children:"Installation chapter"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"project-preparation",children:"Project Preparation"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a project"}),"\n",(0,s.jsxs)(n.p,{children:["name: ",(0,s.jsx)(n.code,{children:"Demo"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a branch"}),"\n",(0,s.jsxs)(n.p,{children:["name: ",(0,s.jsx)(n.code,{children:"master"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a stage"}),"\n",(0,s.jsxs)(n.p,{children:["name: ",(0,s.jsx)(n.code,{children:"Stage 1"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"stage-hello-world",children:"Stage Hello World"}),"\n",(0,s.jsx)(n.p,{children:"Edit schema:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def stage(ctx):\n    return {\n        "parent": "root",\n        "triggers": {\n            "parent": True,\n        },\n        "parameters": [],\n        "configs": [],\n        "jobs": [{\n            "name": "hello",\n            "steps": [{\n                "tool": "shell",\n                "cmd": "echo \'hello world\'"\n            }],\n            "environments": [{\n                "system": "any",\n                "agents_group": "all",\n                "config": "default"\n            }]\n        }],\n    }\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now run CI flow."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"* shell\nexec: 'echo 'hello world'' in '/tmp/kk-jobs/jobs/570'\nhello world\n"})}),"\n",(0,s.jsx)(n.h2,{id:"git-repo-checkout-step",children:"Git Repo Checkout Step"}),"\n",(0,s.jsx)(n.p,{children:"Add step for checking out a Git repository"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'   "steps": [{\n       "tool": "git",\n       "checkout": "https://github.com/Kraken-CI/sample-project-python.git"\n   }, {\n       "tool": "shell",\n       "cmd": "ls -al"\n   }],\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now run CI flow again. The output should look like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"* git\nexec: 'git clone https://github.com/Kraken-CI/sample-project-python.git ' in '/tmp/kk-jobs/jobs/571'\nCloning into 'sample-project-python'...\nStep succeeded\n* shell\nexec: 'ls -al' in '/tmp/kk-jobs/jobs/571'\ntotal 20\ndrwxrwxr-x  3 godfryd godfryd 4096 wrz  3 10:21 .\ndrwxrwxr-x 11 godfryd godfryd 4096 wrz  3 10:21 ..\ndrwxrwxr-x  7 godfryd godfryd 4096 wrz  3 10:21 sample-project-python\n-rw-rw-r--  1 godfryd godfryd  267 wrz  3 10:21 step_0.json\n-rw-rw-r--  1 godfryd godfryd  172 wrz  3 10:21 step_1.json\nStep succeeded\n"})}),"\n",(0,s.jsx)(n.h2,{id:"run-tests-step",children:"Run Tests Step"}),"\n",(0,s.jsxs)(n.p,{children:["There are several built-in steps for running tests. In case of our Python sample project we will use ",(0,s.jsx)(n.code,{children:"pytest"})," built-in step."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'   "steps": [{\n       "tool": "git",\n       "checkout": "https://github.com/Kraken-CI/sample-project-python.git"\n   }, {\n       "tool": "pytest",\n       "cwd": "sample-project-python",\n       "params": "-vv",\n       "pythonpath": "src"\n   }],\n'})}),"\n",(0,s.jsx)(n.p,{children:"And the job output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"* git\nexec: 'git clone https://github.com/Kraken-CI/sample-project-python.git ' in '/tmp/kk-jobs/jobs/590'\nCloning into 'sample-project-python'...\nStep succeeded\n* pytest\nexec: 'PYTHONPATH=`pwd`:src pytest-3 --collect-only -q   | head -n -2' in 'sample-project-python'\ntests/test_simple.py::TestSimple::test_add_one\nexec: 'PYTHONPATH=`pwd`:src pytest-3 -vv -r ap --junit-xml=result.xml -vv tests/test_simple.py::TestSimple::test_add_one' in 'sample-project-python'\n============================= test session starts ==============================\n\nplatform linux -- Python 3.7.5, pytest-3.10.1, py-1.8.0, pluggy-0.12.0 -- /usr/bin/python3\ncachedir: .pytest_cache\nrootdir: /tmp/kk-jobs/jobs/590/sample-project-python, inifile:\ncollecting ...\ncollected 1 item\ntests/test_simple.py::TestSimple::test_add_one\nPASSED\n                    [100%]\n=========================== short test summary info ============================\nPASSED tests/test_simple.py::TestSimple::test_add_one\n=========================== 1 passed in 0.02 seconds ===========================\n\n-- generated xml file: /tmp/kk-jobs/jobs/590/sample-project-python/result.xml --\nStep succeeded\n"})}),"\n",(0,s.jsx)(n.h2,{id:"building-step",children:"Building Step"}),"\n",(0,s.jsx)(n.p,{children:"Add step for checking out a Git repository"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'   "steps": [{\n       "tool": "git",\n       "checkout": "https://github.com/Kraken-CI/sample-project-python.git"\n   }, {\n       "tool": "pytest",\n       "cwd": "sample-project-python",\n       "params": "-vv",\n       "pythonpath": "src"\n   }, {\n       "tool": "shell",\n       "cwd": "sample-project-python",\n       "cmd": "python3 setup.py sdist bdist_wheel"\n   }],\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now run CI flow again. The output should look as follows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"* git\nexec: 'git clone https://github.com/Kraken-CI/sample-project-python.git ' in '/tmp/kk-jobs/jobs/572'\nCloning into 'sample-project-python'...\nStep succeeded\n* pytest\nexec: 'PYTHONPATH=`pwd`:src pytest-3 --collect-only -q   | head -n -2' in 'sample-project-python'\n...\nStep succeeded\n* shell\nexec: 'python3 setup.py sdist bdist_wheel' in 'sample-project-python'\nusage: setup.py [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\n   or: setup.py --help [cmd1 cmd2 ...]\n   or: setup.py --help-commands\n   or: setup.py cmd --help\n\nerror: invalid command 'bdist_wheel'\nStep error\n"})}),"\n",(0,s.jsx)(n.p,{children:"It seems that there is missing package that provides wheel support for Python.\nLet's install it."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'   "steps": [{\n       "tool": "git",\n       "checkout": "https://github.com/Kraken-CI/sample-project-python.git"\n   }, {\n       "tool": "pytest",\n       "cwd": "sample-project-python",\n       "params": "-vv",\n       "pythonpath": "src"\n   }, {\n       "tool": "shell",\n       "cmd": "sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3-wheel python3-setuptools"\n   }, {\n       "tool": "shell",\n       "cwd": "sample-project-python",\n       "cmd": "python3 setup.py sdist bdist_wheel"\n   }],\n'})}),"\n",(0,s.jsx)(n.p,{children:"New output with building:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"* git\nexec: 'git clone https://github.com/Kraken-CI/sample-project-python.git ' in '/tmp/kk-jobs/jobs/590'\nCloning into 'sample-project-python'...\nStep succeeded\n* pytest\nexec: 'PYTHONPATH=`pwd`:src pytest-3 --collect-only -q   | head -n -2' in 'sample-project-python'\n...\nStep succeeded\n* shell\nexec: 'sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3-wheel python3-setuptools' in '/tmp/kk-jobs/jobs/590'\nCzytanie list pakiet\xf3w...\nBudowanie drzewa zale\u017cno\u015bci...\nOdczyt informacji o stanie...\npython3-setuptools is already the newest version (41.1.0-1).\npython3-wheel is already the newest version (0.32.3-2).\nNast\u0119puj\u0105ce pakiety zosta\u0142y zainstalowane automatycznie i nie s\u0105 ju\u017c wi\u0119cej wymagane:\n  linu\nx-headers-5.3.0-53 linux-headers-5.3.0-53-generic\n  linux-image-5.3.0-53-generic linux-modules-5.3.0-53-generic\n  linux-modules-extra-5.3.0-53-generic python-appindicator\nAby je usun\u0105\u0107 nale\u017cy u\u017cy\u0107 \"sudo apt autoremove\".\n0 aktualizowanych, 0 nowo instalowanych, 0 usuwanych i 13 nieaktualizowanych.\nStep succeeded\n* shell\nexec: 'python3 setup.py sdist bdist_wheel' in 'sample-project-python'\nrunning sdist\nrunning egg_info\ncreating src/sampleproject.egg-info\nwriting entry points to src/sampleproject.egg-info/entry_points.txt\nwriting src/sampleproject.egg-info/PKG-INFO\nwriting dependency_links to src/sampleproject.egg-info/dependency_links.txt\nwriting requirements to src/sampleproject.egg-info/requires.txt\nwriting top-level names to src/sampleproject.egg-info/top_level.txt\nwriting manifest file 'src/sampleproject.egg-info/SOURCES.txt'\nreading manifest file 'src/sampleproject.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nrunning check\nwriting manifest file 'src/sampleproject.egg-info/SOURCES.txt'\ncreating sampleproject-2.0.0/src/sample\ncreating sampleproject-2.0.0/src/sampleproject.egg-info\ncopying files to sampleproject-2.0.0...\ncopying LICENSE.txt -> sampleproject-2.0.0\ncreating sampleproject-2.0.0\ncreating sampleproject-2.0.0/data\ncreating sampleproject-2.0.0/src\ncopying MANIFEST.in -> sampleproject-2.0.0\ncopying setup.cfg -> sampleproject-2.0.0\ncopying setup.py -> sampleproject-2.0.0\ncopying README.md -> sampleproject-2.0.0\ncopying pyproject.toml -> sampleproject-2.0.0\ncopying data/data_file -> sampleproject-2.0.0/data\ncopying src/sample/__init__.py -> sampleproject-2.0.0/src/sample\ncopying src/sample/package_data.dat -> sampleproject-2.0.0/src/sample\ncopying src/sampleproject.egg-info/dependency_links.txt -> sampleproject-2.0.0/src/sampleproject.egg-info\ncopying src/sampleproject.egg-info/entry_points.txt -> sampleproject-2.0.0/src/sampleproject.egg-info\ncopying src/sampleproject.egg-info/SOURCES.txt -> sampleproject-2.0.0/src/sampleproject.egg-info\ncopying src/sample/simple.py -> sampleproject-2.0.0/src/sample\ncopying src/sampleproject.egg-info/PKG-INFO -> sampleproject-2.0.0/src/sampleproject.egg-info\ncopying src/sampleproject.egg-info/requires.txt -> sampleproject-2.0.0/src/sampleproject.egg-info\ncopying src/sampleproject.egg-info/top_level.txt -> sampleproject-2.0.0/src/sampleproject.egg-info\nWriting sampleproject-2.0.0/setup.cfg\ncreating dist\nCreating tar archive\nremoving 'sampleproject-2.0.0' (and everything under it)\nrunning bdist_wheel\nrunning build_py\ncreating build\nrunning build\ncopying src/sample/__init__.py -> build/lib/sample\ncreating build/lib\ncreating build/lib/sample\ncopying src/sample/simple.py -> build/lib/sample\ncopying src/sample/package_data.dat -> build/lib/sample\ninstalling to build/bdist.linux-x86_64/wheel\nrunning install_lib\nrunning install\ncreating build/bdist.linux-x86_64/wheel\ncreating build/bdist.linux-x86_64/wheel/sample\ncreating build/bdist.linux-x86_64\ncopying build/lib/sample/package_data.dat -> build/bdist.linux-x86_64/wheel/sample\ncopying build/lib/sample/simple.py -> build/bdist.linux-x86_64/wheel/sample\ncopying build/lib/sample/__init__.py -> build/bdist.linux-x86_64/wheel/sample\nrunning install_data\ncreating build/bdist.linux-x86_64/wheel/sampleproject-2.0.0.data/data\ncreating build/bdist.linux-x86_64/wheel/sampleproject-2.0.0.data/data/my_data\ncopying data/data_file -> build/bdist.linux-x86_64/wheel/sampleproject-2.0.0.data/data/my_data\ncreating build/bdist.linux-x86_64/wheel/sampleproject-2.0.0.data\nrunning install_egg_info\nCopying src/sampleproject.egg-info to build/bdist.linux-x86_64/wheel/sampleproject-2.0.0.egg-info\nrunning install_scripts\nadding license file \"LICENSE.txt\" (matched pattern \"LICENSE.txt\")\ncreating 'dist/sampleproject-2.0.0-py3-none-any.whl' and adding 'build/bdist.linux-x86_64/wheel' to it\ncreating build/bdist.linux-x86_64/wheel/sampleproject-2.0.0.dist-info/WHEEL\nadding 'sample/package_data.dat'\nadding 'sample/__init__.py'\nadding 'sample/simple.py'\nadding 'sampleproject-2.0.0.data/data/my_data/data_file'\nadding 'sampleproject-2.0.0.dist-info/LICENSE.txt'\nadding 'sampleproject-2.0.0.dist-info/METADATA'\nadding 'sampleproject-2.0.0.dist-info/entry_points.txt'\nadding 'sampleproject-2.0.0.dist-info/WHEEL'\nremoving build/bdist.linux-x86_64/wheel\nadding 'sampleproject-2.0.0.dist-info/RECORD'\nadding 'sampleproject-2.0.0.dist-info/top_level.txt'\nStep succeeded\n"})}),"\n",(0,s.jsx)(n.h2,{id:"storing-artifacts-step",children:"Storing Artifacts Step"}),"\n",(0,s.jsx)(n.p,{children:"The results of building the sample projects are two packages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"dist/sampleproject-2.0.0-py3-none-any.whl"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"dist/sampleproject-2.0.0.tar.gz"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For that purpose there is another built-in step: ",(0,s.jsx)(n.code,{children:"artifacts"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'   "steps": [{\n       "tool": "git",\n       "checkout": "https://github.com/Kraken-CI/sample-project-python.git"\n   }, {\n       "tool": "pytest",\n       "cwd": "sample-project-python",\n       "params": "-vv",\n       "pythonpath": "src"\n   }, {\n       "tool": "shell",\n       "cmd": "sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3-wheel python3-setuptools"\n   }, {\n       "tool": "shell",\n       "cwd": "sample-project-python",\n       "cmd": "python3 setup.py sdist bdist_wheel"\n   }, {\n       "tool": "artifacts",\n       "action": "upload",\n       "cwd": "sample-project-python/dist",\n       "source": [\n           "sampleproject-2.0.0-py3-none-any.whl",\n           "sampleproject-2.0.0.tar.gz"\n       ],\n       "public": True\n   }],\n'})}),"\n",(0,s.jsx)(n.p,{children:"And the job output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"* git\nexec: 'git clone https://github.com/Kraken-CI/sample-project-python.git ' in '/tmp/kk-jobs/jobs/590'\nCloning into 'sample-project-python'...\nStep succeeded\n* pytest\nexec: 'PYTHONPATH=`pwd`:src pytest-3 --collect-only -q   | head -n -2' in 'sample-project-python'\ntests/test_simple.py::TestSimple::test_add_one\nexec: 'PYTHONPATH=`pwd`:src pytest-3 -vv -r ap --junit-xml=result.xml -vv tests/test_simple.py::TestSimple::test_add_one' in 'sample-project-python'\n...\nStep succeeded\n* shell\nexec: 'sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3-wheel python3-setuptools' in '/tmp/kk-jobs/jobs/590'\n...\nStep succeeded\n* shell\nexec: 'python3 setup.py sdist bdist_wheel' in 'sample-project-python'\n...\nStep succeeded\n* artifacts\nupload: source: ['sampleproject-2.0.0-py3-none-any.whl', 'sampleproject-2.0.0.tar.gz'], dest: /\nstore /tmp/kk-jobs/jobs/590/sample-project-python/dist/sampleproject-2.0.0-py3-none-any.whl -> /sampleproject-2.0.0-py3-none-any.whl\nstore /tmp/kk-jobs/jobs/590/sample-project-python/dist/sampleproject-2.0.0.tar.gz -> /sampleproject-2.0.0.tar.gz\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>p,x:()=>l});var s=t(6540);const o={},i=s.createContext(o);function p(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:p(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);