"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[913],{7767:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return k}});var a=t(3117),r=t(102),o=(t(7294),t(4137)),s=(t(8742),t(5944),["components"]),i={slug:"agents-in-docker-compose",title:"Agents in Docker Compose",authors:"mike",tags:["kraken","devops","cicd"]},l=void 0,d={permalink:"/blog/agents-in-docker-compose",editUrl:"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-09-20-agents-in-docker-compose.mdx",source:"@site/blog/2022-09-20-agents-in-docker-compose.mdx",title:"Agents in Docker Compose",description:"Kraken Agent can be deployed in multiple ways. Here is",date:"2022-09-20T00:00:00.000Z",formattedDate:"September 20, 2022",tags:[{label:"kraken",permalink:"/blog/tags/kraken"},{label:"devops",permalink:"/blog/tags/devops"},{label:"cicd",permalink:"/blog/tags/cicd"}],readingTime:1.855,hasTruncateMarker:!0,authors:[{name:"Michal Nowikowski",title:"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.",url:"https://www.linkedin.com/in/godfryd",imageURL:"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4",key:"mike"}],frontMatter:{slug:"agents-in-docker-compose",title:"Agents in Docker Compose",authors:"mike",tags:["kraken","devops","cicd"]},nextItem:{title:"Custom Tools",permalink:"/blog/custom-tools"}},c={authorsImageUrls:[void 0]},k=[],p={toc:k};function m(e){var n=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Kraken Agent can be deployed in ",(0,o.kt)("a",{parentName:"p",href:"/docs/agents"},"multiple ways"),". Here is\npresented a new way that leverages Docker Compose. It is not scalable as\nsuch agents are run on the same machine but it is quick and simple and\nif we need just to have one or two more agents this is a way to go."),(0,o.kt)("p",null,"To add such agents we will extend Docker Compose from\n",(0,o.kt)("a",{parentName:"p",href:"/docs/quick-start"},"QuickStart"),"."),(0,o.kt)("p",null,"There is already defined one built-in agent. But first, several\nmodifications are needed to solve IP addressing issues. The problem is\nthat it may get a different IP address after a container restart than\nbefore. Kraken Server requires that the addresses do not change\notherwise it is not possible to identify agents by the Kraken Server."),(0,o.kt)("p",null,"First, open your compose file (e.g. kraken-docker-compose-X.Y.yaml)\nand enable IP Address Management (IPAM) in the ",(0,o.kt)("inlineCode",{parentName:"p"},"lab_net")," where all\nagents reside:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"  ...\n  lab_net:\n    driver: bridge\n    # add the following lines at the end of compose file\n    ipam:\n      config:\n        - subnet: 172.20.0.0/16\n")),(0,o.kt)("p",null,"Here is added a subnet with particular addresses class,\n",(0,o.kt)("inlineCode",{parentName:"p"},"172.20.0.0/16"),". You can define any subnet definition you need."),(0,o.kt)("p",null,"And now add extra agents by copy-pasting ",(0,o.kt)("inlineCode",{parentName:"p"},"agent")," service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"  agent1:\n    restart: always\n    image: us-docker.pkg.dev/kraken-261806/kk/kkagent:0.998\n    environment:\n      - KRAKEN_CLICKHOUSE_ADDR\n      - KRAKEN_SERVER_ADDR\n    networks:\n      lab_net:\n        ipv4_address: 172.20.0.11\n    depends_on:\n      - server\n      - minio\n      - clickhouse-proxy\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n")),(0,o.kt)("p",null,"Important things:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"New agent service name should be different e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"agent1"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"agent2"),", etc."),(0,o.kt)("li",{parentName:"ol"},"Remove ",(0,o.kt)("inlineCode",{parentName:"li"}," - KRAKEN_AGENT_BUILTIN=1")," environment variable that can be only in one agent."),(0,o.kt)("li",{parentName:"ol"},"Add explicit IP address in ",(0,o.kt)("inlineCode",{parentName:"li"},"networks")," section: ",(0,o.kt)("inlineCode",{parentName:"li"},"ipv4_address: 172.20.0.11"),".\nEvery new agent needs to have a different IP address.")),(0,o.kt)("p",null,"Before running such a modified compose file, shut down the currently\nrunning compose and delete ",(0,o.kt)("inlineCode",{parentName:"p"},"lab_net"),".  To delete this network, first,\ncheck if it exists:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ docker network ls\n")),(0,o.kt)("p",null,"It should have name like this ",(0,o.kt)("inlineCode",{parentName:"p"},"<current-folder-name>_lab_net"),". Please delete it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ docker network rm <current-folder-name>_lab_net\n")),(0,o.kt)("p",null,"Now you can start Docker Compose again. ",(0,o.kt)("inlineCode",{parentName:"p"},"lab_net")," network will be\nrecreated with proper new settings:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ docker-compose --env-file kraken-X.Y.env -f kraken-docker-compose-X.Y.yaml up\n")),(0,o.kt)("p",null,"Go to Discovered Agents page in Kraken Web UI and check if new agents\nare present there."),(0,o.kt)("p",null,"That's it. You have new agents running."))}m.isMDXComponent=!0},8742:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.img;return a.createElement("a",{href:"/img/"+n,target:"blank"},a.createElement("img",{src:"/img/"+n,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}}))}}}]);