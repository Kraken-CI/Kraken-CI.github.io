"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[6020],{6052:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=i(4848),s=i(8453),a=i(4074);const r={id:"notifications",title:"Notifications"},o=void 0,c={id:"notifications",title:"Notifications",description:"Kraken CI can provide information about the state of the last build of",source:"@site/docs/notifications.mdx",sourceDirName:".",slug:"/notifications",permalink:"/docs/notifications",draft:!1,unlisted:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/notifications.mdx",tags:[],version:"current",frontMatter:{id:"notifications",title:"Notifications"},sidebar:"someSidebar",previous:{title:"LXD Executor",permalink:"/docs/lxd-executor"},next:{title:"Webhooks",permalink:"/docs/webhooks"}},d={},l=[{value:"Notifications Sent per Build",id:"notifications-sent-per-build",level:2},{value:"Email",id:"email",level:3},{value:"Slack",id:"slack",level:3},{value:"Discord",id:"discord",level:3},{value:"GitHub PR",id:"github-pr",level:3},{value:"Presenting Current State",id:"presenting-current-state",level:2},{value:"Badges",id:"badges",level:3},{value:"CCTray",id:"cctray",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Kraken CI can provide information about the state of the last build of\na branch in a project. It can either send notifications over Email,\nSlack or GitHub PR, or present the current state using badges or\nCCTray protocol."}),"\n",(0,t.jsx)(n.h2,{id:"notifications-sent-per-build",children:"Notifications Sent per Build"}),"\n",(0,t.jsx)(n.h3,{id:"email",children:"Email"}),"\n",(0,t.jsxs)(n.p,{children:["More on ",(0,t.jsx)(n.a,{href:"/docs/schema#email",children:"Email Notifications in Workflow Schema docs"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"slack",children:"Slack"}),"\n",(0,t.jsxs)(n.p,{children:["More on ",(0,t.jsx)(n.a,{href:"/docs/schema#slack",children:"Slack Notifications in Workflow Schema docs"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"discord",children:"Discord"}),"\n",(0,t.jsxs)(n.p,{children:["More on ",(0,t.jsx)(n.a,{href:"/docs/schema#discord",children:"Discord Notifications in Workflow Schema docs"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"github-pr",children:"GitHub PR"}),"\n",(0,t.jsxs)(n.p,{children:["More on ",(0,t.jsx)(n.a,{href:"/docs/schema#github",children:"GitHub PR integration in Workflow Schema docs"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"presenting-current-state",children:"Presenting Current State"}),"\n",(0,t.jsx)(n.h3,{id:"badges",children:"Badges"}),"\n",(0,t.jsx)(n.p,{children:"The status badges indicate the current quality of a branch in a project."}),"\n",(0,t.jsx)(a.A,{img:"kraken-badges.png"}),"\n",(0,t.jsx)(n.p,{children:"There are three types of badges. They are indicating:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"building state (if there are no errors)"}),"\n",(0,t.jsx)(n.li,{children:"tests results with fixes and regression counts"}),"\n",(0,t.jsx)(n.li,{children:"issues count with a count of newly discovered issues"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Links to the badges are available on a branch management page, in the\n",(0,t.jsx)(n.code,{children:"Status Badge & CCTray"})," tab:"]}),"\n",(0,t.jsx)(a.A,{img:"screen-branch-mgmt-badges.png"}),"\n",(0,t.jsx)(n.h3,{id:"cctray",children:"CCTray"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://cctray.org",children:"CCTray"})," is a protocol that allows users to fetch\nthe current state of a branch using ",(0,t.jsx)(n.a,{href:"https://cctray.org/clients/",children:"dedicated\nclientes"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Kraken CI exposes a URL for a given branch that can be put to such a\nclient. This URL is available on the same page as for badges i.e. on\na branch management page, in the ",(0,t.jsx)(n.code,{children:"Status Badge & CCTray"})," tab:"]}),"\n",(0,t.jsx)(a.A,{img:"screen-branch-mgmt-badges.png"}),"\n",(0,t.jsxs)(n.p,{children:["Copy CCTray URL and paste it to a client e.g. ",(0,t.jsx)(n.a,{href:"https://anaynayak.github.io/buildnotify/",children:"BuildNotify"}),":"]}),"\n",(0,t.jsx)(a.A,{img:"screen-cctray-in-buildnotify.png"})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},4074:(e,n,i)=>{i.d(n,{A:()=>s});i(6540);var t=i(4848);const s=e=>{let{img:n}=e;return(0,t.jsx)("a",{href:"/img/"+n,target:"blank",children:(0,t.jsx)("img",{src:"/img/"+n,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}})})}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(6540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);