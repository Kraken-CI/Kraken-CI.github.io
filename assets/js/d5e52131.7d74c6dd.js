(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[6006],{4137:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,b=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(b,a(a({ref:t},u),{},{components:n})):r.createElement(b,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8742:function(e,t,n){"use strict";var r=n(7294);t.Z=function(e){var t=e.img;return r.createElement("img",{src:"/img/"+t,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}})}},1030:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=n(2122),o=n(9756),i=(n(7294),n(4137)),a=n(8742),s=["components"],c={id:"webhooks",title:"Webhooks"},l=void 0,u={unversionedId:"webhooks",id:"webhooks",isDocsHomePage:!1,title:"Webhooks",description:"Webhooks allows for integration between source code versioning system",source:"@site/docs/webhooks.mdx",sourceDirName:".",slug:"/webhooks",permalink:"/docs/webhooks",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/webhooks.mdx",version:"current",frontMatter:{id:"webhooks",title:"Webhooks"},sidebar:"someSidebar",previous:{title:"Secrets",permalink:"/docs/secrets"},next:{title:"Docker Executor",permalink:"/docs/docker-executor"}},p=[],d={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Webhooks allows for integration between source code versioning system\nand Kraken. This way a push to Git repository may trigger a CI or a\nDev flow. Currently the supported system is Github."),(0,i.kt)("p",null,"Webhooks configuration is located in a project web page, under ",(0,i.kt)("inlineCode",{parentName:"p"},"Web\nHooks")," tab. There is a switch that enables or disables receiving\nwebhook requests from GitHub."),(0,i.kt)(a.Z,{img:"screen-webhooks.png",mdxType:"Screen"}),(0,i.kt)("p",null,"When GitHub webhook is enabled then there is provided a ",(0,i.kt)("inlineCode",{parentName:"p"},"URL")," and a\n",(0,i.kt)("inlineCode",{parentName:"p"},"secret")," that should be set in GitHub project settings page for\nwebhooks. This is ",(0,i.kt)("inlineCode",{parentName:"p"},"https://github.com/<user>/<project>/settings/hooks"),"."),(0,i.kt)("p",null,"On this page there are several fields that should be filled:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Payload URL")," - set to URL from Kraken that was mentioned above,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Content Type")," - set to ",(0,i.kt)("inlineCode",{parentName:"li"},"application/json")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Secret")," - take from Kraken, it was mentioned above.")),(0,i.kt)("p",null,"In section ",(0,i.kt)("inlineCode",{parentName:"p"},"Which events would you like to trigger this webhook?"),"\nselect ",(0,i.kt)("inlineCode",{parentName:"p"},"Let me select individual events.")," and then check ",(0,i.kt)("inlineCode",{parentName:"p"},"Pull\nrequests")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Pushes"),"."),(0,i.kt)("p",null,"Now webhook can be saved. You may try to trigger testing request."))}m.isMDXComponent=!0}}]);