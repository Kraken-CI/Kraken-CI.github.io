"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[1477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"conditional-steps","metadata":{"permalink":"/blog/conditional-steps","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2023-07-12-conditional-steps.mdx","source":"@site/blog/2023-07-12-conditional-steps.mdx","title":"Conditional Steps","description":"The Kraken version","date":"2023-07-12T00:00:00.000Z","formattedDate":"July 12, 2023","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":1.81,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"conditional-steps","title":"Conditional Steps","authors":"mike","tags":["kraken","devops","cicd"]},"nextItem":{"title":"Data and Dynamism in Schema","permalink":"/blog/data-and-dynamism-in-schema"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThe Kraken version\\n[1.3](https://github.com/Kraken-CI/kraken/releases/tag/v1.3)\\nintroduces the conditional steps. This feature enables skipping a step\\nunder certain conditions. This condition can be based on any data\\navailable in the system including the latest data from previous steps.\\n\\n1.3 release brings several more features - check [the release\\nnotes](https://github.com/Kraken-CI/kraken/releases/tag/v1.3).\\n\\nMore details about the conditional steps are below.\\n\\n\x3c!--truncate--\x3e\\n\\nThe conditional steps rely on lazy step execution. Previously, all\\nsteps were sent to an agent, and the agent executed them all at once\\nuntil either all steps were executed or one of the steps failed. Now,\\nsteps are sent from the server to an agent one by one. So, the server\\nfirst evaluates the `when` condition and decides if the step should be\\nsent for execution to an agent.\\n\\nThe example below shows various cases of `when` condition:\\n\\n```python\\ndef stage(ctx):\\n  return {\\n    \\"parent\\": \\"root\\",\\n      \\"triggers\\": {\\n        \\"parent\\": True,\\n      },\\n      \\"parameters\\": [],\\n      \\"configs\\": [],\\n      \\"jobs\\": [{\\n        \\"name\\": \\"hello world\\",\\n        \\"steps\\": [{\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'hello world\'\\"\\n        }, {\\n          \\"when\\": \\"was_no_error\\",\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'was_no_error\'\\"\\n        }, {\\n          \\"when\\": \\"was_any_error\\",\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'was_any_error\'\\"\\n        }, {\\n          \\"when\\": \\"is_ci\\",\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'is_ci\'\\"\\n        }, {\\n          \\"when\\": \\"is_dev\\",\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'is_dev\'\\"\\n        }, {\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"missing-command-xyz\\"\\n        }, {\\n          \\"when\\": \\"was_no_error\\",\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'was_no_error 2\'\\"\\n        }, {\\n          \\"when\\": \\"was_any_error\\",\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'was_any_error 2\'\\"\\n        }, {\\n          \\"when\\": \\"always\\",\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'hello world always\' && sleep 5\\"\\n        }, {\\n          \\"when\\": \\"job.steps[step.index - 1].result.duration > 3\\",\\n          \\"tool\\": \\"shell\\",\\n          \\"cmd\\": \\"echo \'hello world #{job.steps[step.index - 1].result}\'\\"\\n        }],\\n        \\"environments\\": [{\\n          \\"system\\": \\"any\\",\\n          \\"agents_group\\": \\"all\\",\\n          \\"config\\": \\"default\\"\\n        }]\\n      }]\\n    }\\n```\\n\\nThis code can also be found at\\nhttps://github.com/Kraken-CI/workflow-examples/tree/main/conditional-steps/one.py.\\n\\nThe screenshot below shows the status of these steps execution.\\n\\n<Screen img=\\"screen-conditional-steps.png\\" />\\n\\nThe usage of several built-in variables can be observed, such as\\n`always`, `is_ci`, `is_dev`, `was_no_error`, and `was_any_error`. The\\nlast step presents a more complicated case. It utilizes `job.steps`\\nand `step.index` to verify the outcome of the previous step,\\nspecifically checking if the duration of the previous step was greater\\nthan 3 seconds. If this condition is met, the current step will be\\nexecuted."},{"id":"data-and-dynamism-in-schema","metadata":{"permalink":"/blog/data-and-dynamism-in-schema","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2023-04-15-data-and-dynamism-in-schema.mdx","source":"@site/blog/2023-04-15-data-and-dynamism-in-schema.mdx","title":"Data and Dynamism in Schema","description":"The Kraken version 1.1","date":"2023-04-15T00:00:00.000Z","formattedDate":"April 15, 2023","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":1.675,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"data-and-dynamism-in-schema","title":"Data and Dynamism in Schema","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Conditional Steps","permalink":"/blog/conditional-steps"},"nextItem":{"title":"Further Logging Improvements","permalink":"/blog/further-logging-improvements"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThe Kraken version [1.1](https://github.com/Kraken-CI/kraken/releases/tag/v1.1)\\nintroduces even more improvements in logging.\\n\\nThe major changes are:\\n\\n- added storing user data server-side\\n- data of internal objects and user data are now exposed in a schema code\\n- added support for several new operating systems\\n\\n1.1 release brings several more features - check [the release\\nnotes](https://github.com/Kraken-CI/kraken/releases/tag/v1.1).\\n\\nMore details about the major features are below.\\n\\n\x3c!--truncate--\x3e\\n\\n### User Data\\n\\nThis feature enables users to store data in the workflow schema code\\non the server-side. For instance, a user can prepare data in JSON\\nformat in one step of the schema code. Then, in the subsequent step,\\nthe user can upload the data from the prepared file to the Kraken Server. The\\ndata can be attached to a flow, branch, or project. If it is attached\\nto a flow, its scope is restricted to that particular flow, and it can\\nbe used in the next stage of that flow. However, it will not be\\nvisible in a new flow. If the data is attached to a branch or project,\\nit will be shared by subsequent flows.\\n\\nDetails and examples are described in the\\n[Data Tool section of the Workflow Schema documentation](/docs/schema#data).\\n\\n### Data in Schema Code\\n\\nThe data stored by the user, as well as the data of other internal\\nobjects such as jobs, runs, flows, branches, and projects, can be\\naccessed in a stage schema code.\\n\\nThe data can be accessed via a context that is passed to the stage\\nfunction and also through string interpolation of special variables.\\n\\nAll of this allows for significant dynamism in a stage schema\\ncode. For example, the list of jobs or step details may be based on\\nthe data stored by a user in previous stages.\\n\\nDetails are described in the [Data in Schema](/docs/schema-data)\\nchapter in the docs.\\n\\n### New OSes Supported\\n\\nThe new supported OSes include Rocky Linux 9, AlmaLinux and Debian\\nBookworm. The full list is availabled in\\n[Docker Executor](/docs/docker-executor#tested-vanilla-images)\\ndocs."},{"id":"further-logging-improvements","metadata":{"permalink":"/blog/further-logging-improvements","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2023-03-06-further-logging-improvements.mdx","source":"@site/blog/2023-03-06-further-logging-improvements.mdx","title":"Further Logging Improvements","description":"The Kraken version 1.0","date":"2023-03-06T00:00:00.000Z","formattedDate":"March 6, 2023","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":1.41,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"further-logging-improvements","title":"Further Logging Improvements","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Data and Dynamism in Schema","permalink":"/blog/data-and-dynamism-in-schema"},"nextItem":{"title":"Standing out Logs Handling","permalink":"/blog/standing-out-logs-handling"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThe Kraken version [1.0](https://github.com/Kraken-CI/kraken/releases/tag/v1.0)\\nintroduces even more improvements in logging.\\n\\nThe major changes are:\\n\\n- added global and per-branch logs retention policy\\n- added presenting logs of server-side activities related to a branch,\\n  a flow, a run and a job\\n\\n1.0 release brings several more features - check [the release\\nnotes](https://github.com/Kraken-CI/kraken/releases/tag/v1.0).\\n\\nMore details about the major features are below.\\n\\n\x3c!--truncate--\x3e\\n\\n### Logs Retention Policy\\n\\nThe logs retention policy generally indicates how long logs should be\\nkept in the logs store ie. Clickhouse. It is possible to set these\\npolicies on two levels: 1) global and 2) branch level. The time is\\nexpressed in a number of months.\\n\\nThe picture below shows the `General Settings` tab where under the\\n`Global Log Retention Policy` section, it is possible to set the number\\nof months for how long all the logs (from Kraken Server and all\\nAgents) will be kept in Clickhouse.\\n\\n<Screen img=\\"screen-logs-global-ttl.png\\" />\\n\\nThe following picture shows the `Retention Policy` tab on a branch\\nmanagement page. Here, a similar policy can be set for logs related to\\nthis branch, either for CI flows or for Dev flows.\\n\\n<Screen img=\\"screen-logs-branch-ttl.png\\" />\\n\\n\\n### Server Logs Presentation\\n\\nNew logs panel has been introduced. It can show logs from both the\\nserver and agent sides. This panel can be found in several places that\\nare indicated in the pictures below.\\n\\nHere a branch management page is presented with the `Logs` tab where\\nlogs related to this branch are shown.\\n\\n<Screen img=\\"screen-logs-of-branch.png\\" />\\n\\nHere is the case for a flow.\\n\\n<Screen img=\\"screen-logs-of-flow.png\\" />\\n\\nHere is the case for a run.\\n\\n<Screen img=\\"screen-logs-of-run.png\\" />\\n\\nAnd a job case.\\n\\n<Screen img=\\"screen-logs-of-job.png\\" />"},{"id":"standing-out-logs-handling","metadata":{"permalink":"/blog/standing-out-logs-handling","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2023-02-06-standing-out-logs-handling.mdx","source":"@site/blog/2023-02-06-standing-out-logs-handling.mdx","title":"Standing out Logs Handling","description":"The Kraken version 0.1126","date":"2023-02-06T00:00:00.000Z","formattedDate":"February 6, 2023","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":2.885,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"standing-out-logs-handling","title":"Standing out Logs Handling","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Further Logging Improvements","permalink":"/blog/further-logging-improvements"},"nextItem":{"title":"Support for CCTray","permalink":"/blog/support-for-cctray"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThe Kraken version [0.1126](https://github.com/Kraken-CI/kraken/releases/tag/v0.1126)\\nintroduces much improved logs handling and presentation.\\n\\nThe standing-out features connected with logs are:\\n- single-line and *multi-line* secrets masking\\n- coloring ANSI codes\\n- no issue with handling huge logs containing even more than 10.000 lines\\n- switching timestamps on/off\\n- auto scroll when at the bottom\\n- paging logs\\n\\nAnd the new features introduced by this Kraken version:\\n\\n- job logs are split by steps sections in UI\\n- steps status and metadata presented at the top of each step logs section\\n- download a step log\\n\\nMore details are below.\\n\\n\x3c!--truncate--\x3e\\n\\n### Single-line and Multi-line Secrets Masking\\n\\nIt is possible to define [secrets](/docs/secrets) on a project. Then\\nthese secrets can be used in workflow schema directly in shell commands\\nor as environment variables. Most often, they might be visible in\\nlogs. Thankfully, Kratos mask secrets - a secret in the log is replaced\\nby six asterisks (``*`` sign). Kraken can mask secrets that are single\\nline, for example, a password, but also it can secret multi-line\\nsecrets, e.g. SSH private key that may span about 30 lines. In both\\ncases, these secrets will be replaced with asterisks in the log.\\n\\nThe secrets are caught quite early and do not leave a machine\\nthat traces them to logs. The log database stores only masked\\npasswords. Example of masking below:\\n\\n<Screen img=\\"screen-logs-masked-secrets2.png\\" />\\n\\nA very long, multi-line secret has been replaced by 6 asterisk signs.\\n\\n### Coloring ANSI Codes\\n\\nQuite often in CI process, there are used tools that color their\\noutput. This is achieved\\nby [ANSI codes](https://en.wikipedia.org/wiki/ANSI_escape_code#Colors)\\nprinted to a terminal. Kraken can find them and replace them with\\ncolors in Web UI.\\n\\nAn example of a basic color palette in the log:\\n\\n<Screen img=\\"screen-logs-ansi-colors.png\\" />\\n\\n### Swithing Timestamps On/Off\\n\\nKraken allows a user to switch on and off displaying timestamps. These\\nare timestamps added during collecting logs and storing them in a\\ndatabase. They may not match with timestamps that are already present\\ninside the log, so they can be switched off. When there are no\\ntimestamps in the original log, Kraken timestamps can be switched on\\nand be pretty helpful.\\n\\nTimestamps are switched off:\\n<Screen img=\\"screen-logs-ts-off.png\\" />\\n\\nTimestamps are switched on:\\n<Screen img=\\"screen-logs-ts-on.png\\" />\\n\\n### Autoscroll\\n\\nWhen the scroll bar is at the bottom position then any new logs\\nfetched automatically will trigger scrolling to the bottom so the new\\nlog content is visible.\\n\\n### Job Logs Split by Steps\\n\\nIn Kraken Web UI, the job log is divided into steps sections. Each\\nsection has its title bar that, by clicking, allows a user to expand\\nthe section to see its details and logs. Each step log is separate, so\\nit is easier to browse logs of steps than handling one big job log.\\n\\n<Screen img=\\"screen-logs-steps.png\\" />\\n\\n### Steps Status and Metadata\\n\\nThe step details bar presents information about status and duration\\nbut also step parameters. Below the bar, there are logs with control\\nbuttons for navigating logs.\\n\\n<Screen img=\\"screen-logs-step-status.png\\" />\\n\\n### Download Whole Step Log\\n\\nA log of each section can be downloaded separately.\\n\\n<Screen img=\\"screen-logs-step-download.png\\" />\\n\\n### Paging Logs\\n\\nA step log pane has control buttons allowing a user to navigate\\nlogs. A user may load the previous or next page or jump to the first\\nor last page. A user may load the whole log, he/she may also scroll to the\\nbottom of the log.\\n\\n<Screen img=\\"screen-logs-paging.png\\" />"},{"id":"support-for-cctray","metadata":{"permalink":"/blog/support-for-cctray","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-12-12-support-for-cctray.mdx","source":"@site/blog/2022-12-12-support-for-cctray.mdx","title":"Support for CCTray","description":"CCTray is a protocol that allows users to fetch","date":"2022-12-12T00:00:00.000Z","formattedDate":"December 12, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":0.375,"hasTruncateMarker":false,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"support-for-cctray","title":"Support for CCTray","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Standing out Logs Handling","permalink":"/blog/standing-out-logs-handling"},"nextItem":{"title":"Migration to Newer Dependencies","permalink":"/blog/migration-to-newer-deps"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\n[CCTray](https://cctray.org) is a protocol that allows users to fetch\\nthe current state of a branch using [dedicated\\nclientes](https://cctray.org/clients/).\\n\\nKraken CI exposes a URL for a given branch that can be put to such a\\nclient. This URL is available on a branch management page, in the\\n`Status Badge & CCTray` tab:\\n\\n<Screen img=\\"screen-branch-mgmt-badges.png\\" />\\n\\nThese feature landed in\\n[0.1097 version](https://github.com/Kraken-CI/kraken/releases/tag/v0.1097)\\nand is documented in [notifications docs](/docs/notifications#cctray)\\ndocs."},{"id":"migration-to-newer-deps","metadata":{"permalink":"/blog/migration-to-newer-deps","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-12-10-migration-to-newer-deps.mdx","source":"@site/blog/2022-12-10-migration-to-newer-deps.mdx","title":"Migration to Newer Dependencies","description":"Till now, Kraken CI relied on pretty old versions","date":"2022-12-10T00:00:00.000Z","formattedDate":"December 10, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":0.565,"hasTruncateMarker":false,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"migration-to-newer-deps","title":"Migration to Newer Dependencies","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Support for CCTray","permalink":"/blog/support-for-cctray"},"nextItem":{"title":"LDAP and OIDC/OAuth","permalink":"/blog/ldap-and-oidc-oauth"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nTill now, Kraken CI relied on pretty old versions\\nof [Clickhouse](https://clickhouse.com/)\\nand [MinIO](https://min.io/). In the latest Kraken CI release, both\\nhave been upgraded.\\n\\nClickhouse has been upgraded from `20.11.4.13` to `22.10.2.11`. The\\nmigration is seamless from the Kraken CI point of view. There is no need\\nfor explicit data migration.\\n\\nMinIO has been upgraded from `RELEASE.2020-12-18T03-27-42Z` to\\n`RELEASE.2022-10-24T18-35-07Z`. The major visible change is the names\\nof environment variables that hold credentials. Previously they were\\n`MINIO_ACCESS_KEY` and `MINIO_SECRET_KEY`, now they are\\n`MINIO_ROOT_USER` and `MINIO_ROOT_PASSWORD`, respectively. Values of\\nthese variables may stay the same; they do not need to be changed.\\n\\nThese changes landed in\\n[0.1091 version](https://github.com/Kraken-CI/kraken/releases/tag/v0.1091)."},{"id":"ldap-and-oidc-oauth","metadata":{"permalink":"/blog/ldap-and-oidc-oauth","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-11-02-ldap-and-oidc-oauth.mdx","source":"@site/blog/2022-11-02-ldap-and-oidc-oauth.mdx","title":"LDAP and OIDC/OAuth","description":"There has beed developed an addition to users management:","date":"2022-11-02T00:00:00.000Z","formattedDate":"November 2, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":0.44,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"ldap-and-oidc-oauth","title":"LDAP and OIDC/OAuth","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Migration to Newer Dependencies","permalink":"/blog/migration-to-newer-deps"},"nextItem":{"title":"Users Management","permalink":"/blog/users-management"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThere has beed developed an addition to users management:\\nauthentication against external authentication servers using either\\nLDAP or OpenID Connect with OAuth.\\n\\nLDAP allows administrator to connect Kraken system to corporate LDAP\\nor Active Directory. OIDC & OAuth beside bringing another source of\\nusers\' identity it also provides Signe Sign-On scheme.\\n\\nThis features landed in [0.1047\\nversion](https://github.com/Kraken-CI/kraken/releases/tag/v0.1047) and\\nis documented in [identity providers](/docs/users#identity-providers)\\ndocs.\\n\\n\x3c!--truncate--\x3e\\n\\nHere is a screen that shows web UI for configuring Identity Providers.\\n\\n<Screen img=\\"screen-idp-all-disabled.png\\" />"},{"id":"users-management","metadata":{"permalink":"/blog/users-management","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-10-17-users-management.mdx","source":"@site/blog/2022-10-17-users-management.mdx","title":"Users Management","description":"Users management is a basic functionality that allows for adding users","date":"2022-10-17T00:00:00.000Z","formattedDate":"October 17, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":0.32,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"users-management","title":"Users Management","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"LDAP and OIDC/OAuth","permalink":"/blog/ldap-and-oidc-oauth"},"nextItem":{"title":"Agents in Docker Compose","permalink":"/blog/agents-in-docker-compose"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nUsers management is a basic functionality that allows for adding users\\nand assigning roles to them. This translates to users authatication\\nand authorization. In case of Kraken CI, this is described on [users\\ndocs](/docs/users) pages. This feature landed in [0.1037\\nversion](https://github.com/Kraken-CI/kraken/releases/tag/v0.1037).\\n\\n\x3c!--truncate--\x3e\\n\\nHere is a screen that shows web UI for managing users.\\n\\n<Screen img=\\"screen-users.png\\" />"},{"id":"agents-in-docker-compose","metadata":{"permalink":"/blog/agents-in-docker-compose","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-09-20-agents-in-docker-compose.mdx","source":"@site/blog/2022-09-20-agents-in-docker-compose.mdx","title":"Agents in Docker Compose","description":"Kraken Agent can be deployed in multiple ways. Here is","date":"2022-09-20T00:00:00.000Z","formattedDate":"September 20, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":1.855,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"agents-in-docker-compose","title":"Agents in Docker Compose","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Users Management","permalink":"/blog/users-management"},"nextItem":{"title":"Custom Tools","permalink":"/blog/custom-tools"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nKraken Agent can be deployed in [multiple ways](/docs/agents). Here is\\npresented a new way that leverages Docker Compose. It is not scalable as\\nsuch agents are run on the same machine but it is quick and simple and\\nif we need just to have one or two more agents this is a way to go.\\n\\n\x3c!--truncate--\x3e\\n\\nTo add such agents we will extend Docker Compose from\\n[QuickStart](/docs/quick-start).\\n\\nThere is already defined one built-in agent. But first, several\\nmodifications are needed to solve IP addressing issues. The problem is\\nthat it may get a different IP address after a container restart than\\nbefore. Kraken Server requires that the addresses do not change\\notherwise it is not possible to identify agents by the Kraken Server.\\n\\nFirst, open your compose file (e.g. kraken-docker-compose-X.Y.yaml)\\nand enable IP Address Management (IPAM) in the `lab_net` where all\\nagents reside:\\n\\n```yaml\\n  ...\\n  lab_net:\\n    driver: bridge\\n    # add the following lines at the end of compose file\\n    ipam:\\n      config:\\n        - subnet: 172.20.0.0/16\\n```\\n\\nHere is added a subnet with particular addresses class,\\n`172.20.0.0/16`. You can define any subnet definition you need.\\n\\nAnd now add extra agents by copy-pasting `agent` service:\\n\\n```yaml\\n  agent1:\\n    restart: always\\n    image: us-docker.pkg.dev/kraken-261806/kk/kkagent:0.998\\n    environment:\\n      - KRAKEN_CLICKHOUSE_ADDR\\n      - KRAKEN_SERVER_ADDR\\n    networks:\\n      lab_net:\\n        ipv4_address: 172.20.0.11\\n    depends_on:\\n      - server\\n      - minio\\n      - clickhouse-proxy\\n    volumes:\\n      - /var/run/docker.sock:/var/run/docker.sock\\n```\\n\\nImportant things:\\n\\n1. New agent service name should be different e.g. `agent1`, `agent2`, etc.\\n2. Remove ` - KRAKEN_AGENT_BUILTIN=1` environment variable that can be only in one agent.\\n3. Add explicit IP address in `networks` section: `ipv4_address: 172.20.0.11`.\\n  Every new agent needs to have a different IP address.\\n\\nBefore running such a modified compose file, shut down the currently\\nrunning compose and delete `lab_net`.  To delete this network, first,\\ncheck if it exists:\\n\\n```console\\n$ docker network ls\\n```\\n\\nIt should have name like this `<current-folder-name>_lab_net`. Please delete it:\\n\\n```console\\n$ docker network rm <current-folder-name>_lab_net\\n```\\n\\nNow you can start Docker Compose again. `lab_net` network will be\\nrecreated with proper new settings:\\n\\n```console\\n$ docker-compose --env-file kraken-X.Y.env -f kraken-docker-compose-X.Y.yaml up\\n```\\n\\nGo to Discovered Agents page in Kraken Web UI and check if new agents\\nare present there.\\n\\nThat\'s it. You have new agents running."},{"id":"custom-tools","metadata":{"permalink":"/blog/custom-tools","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-09-12-custom-tools.mdx","source":"@site/blog/2022-09-12-custom-tools.mdx","title":"Custom Tools","description":"There is a new way for extending Kraken CI: custom tools. A","date":"2022-09-12T00:00:00.000Z","formattedDate":"September 12, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":0.835,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"custom-tools","title":"Custom Tools","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Agents in Docker Compose","permalink":"/blog/agents-in-docker-compose"},"nextItem":{"title":"Hello Worlds in 22 Langs on Kraken CI","permalink":"/blog/hello-worlds-in-22-langs-on-kraken-ci"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThere is a new way for extending Kraken CI: custom tools. A\\n[tool](/docs/tools) in Kraken CI provides particular functionality that is\\nused in steps in a workflow schema. Till now, there were only built-in\\ntools like `git` for checking out source code from Git repository, or\\n`artifacts` for storing or retrieving files from Kraken global\\n[storage](/docs/storage) or finally `shell` for running commands in a shell.\\n\\nCustom tools allow for developing such tools by third parties, sharing\\nthem with others and installing and using them in Kraken Server.\\n\\n\x3c!--truncate--\x3e\\n\\n### Custom Tools Details\\n\\nDocs for [custom tools](/docs/tools) first present the whole\\narchitecture of Kraken CI with Agents and tools. Then the interaction\\nbetween Kraken Agent and a tool is shown with an example tool. The\\nfollowing sections show how to declare a custom tool and add it to\\nKraken Server so it can be used in workflows. It is also presented how\\nto develop custom tools locally, under the desk."},{"id":"hello-worlds-in-22-langs-on-kraken-ci","metadata":{"permalink":"/blog/hello-worlds-in-22-langs-on-kraken-ci","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-05-13-hello-worlds-in-22-langs-on-kraken-ci.mdx","source":"@site/blog/2022-05-13-hello-worlds-in-22-langs-on-kraken-ci.mdx","title":"Hello Worlds in 22 Langs on Kraken CI","description":"There is a new, quite funny workflow example for Kraken CI. It shows","date":"2022-05-13T00:00:00.000Z","formattedDate":"May 13, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"cicd","permalink":"/blog/tags/cicd"}],"readingTime":2.485,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"hello-worlds-in-22-langs-on-kraken-ci","title":"Hello Worlds in 22 Langs on Kraken CI","authors":"mike","tags":["kraken","devops","cicd"]},"prevItem":{"title":"Custom Tools","permalink":"/blog/custom-tools"},"nextItem":{"title":"Job Designer and More - 0.962 Release","permalink":"/blog/job-designer-and-more-0-962"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThere is a new, quite funny workflow example for Kraken CI. It shows\\nhow to compile and run `Hello World` programs in various programming\\nlanguages, 22 languages.\\n\\n\\n\x3c!--truncate--\x3e\\n\\n### Hello World Programs\\n\\nEvery programmer knows what does `Hello World` program looks like.\\n\\nHere is an example in C language:\\n\\n```c\\n#include<stdio.h>\\n\\nint main(){\\n  printf(\\"Hello World\\\\n\\");\\n  return 0;\\n}\\n```\\n\\nBut 22? These 22 can be seen in Kraken\'s repo on GitHub:\\nhttps://github.com/kraken-CI/hello-worlds\\n\\nStill, there are more languages with `Hello Worlds`.\\nThe biggest collection can be found here:\\nhttp://helloworldcollection.de/.\\n\\nThese are just examples. In our case, they can be compiled and run.\\nAfter downloading the repo you may run `./run.sh` script providing\\nthe language folder, e.g.:\\n\\n```shell\\n$ ./run.sh C\\n```\\n\\nThis will display, compile and run a C example.\\n\\nIn Kraken\'s case, there is defined a workflow that does it for us for\\neach language. But first, we need to have systems with a compiler or a\\nruntime for these languages. Docker to the rescue.\\n\\n\\n### Kraken Base Language Images\\n\\nFor each language, there is prepared a Docker image. They are based on\\nofficial images for these languages. For Kraken, they got some extras\\nlike Kraken Agent that is running using kraken user (not root).\\n\\nThe list of all lang images is available in [the docs](/docs/docker-executor#language-images).\\n\\n### The Workflow\\n\\nThe mentioned workflow can be found in [kraken-workflow.py](https://github.com/Kraken-CI/hello-worlds/blob/main/kraken-workflow.py) file.\\n\\nIn short, it looks as follows:\\n\\n```python\\ndef stage(ctx):\\n    langs = [\\n        (\'C\', \'gcc:11.3\'),\\n        (\'C++\', \'gcc:11.3\'),\\n        (\'C#\', \'mono:6.12\'),\\n        # and more...\\n    ]\\n\\n    jobs = []\\n\\n    for lang_name, lang_image in langs:\\n        jobs.append({\\n            \\"name\\": \\"hello world %s\\" % lang_name,\\n            \\"steps\\": [{\\n            \\"tool\\": \\"git\\",\\n                \\"checkout\\": \\"https://github.com/Kraken-CI/hello-worlds.git\\",\\n                \\"branch\\": \\"main\\"\\n            }, {\\n                \\"tool\\": \\"shell\\",\\n                \\"cmd\\": \\"./run.sh %s\\" % lang_name,\\n                \\"cwd\\": \\"hello-worlds\\"\\n            }],\\n            \\"environments\\": [{\\n                \\"executor\\": \\"docker\\",\\n                \\"system\\": \\"krakenci/%s\\" % lang_image,\\n                \\"agents_group\\": \\"all\\",\\n                \\"config\\": \\"default\\"\\n            }]\\n        })\\n\\n    return {\\n        \\"parent\\": \\"root\\",\\n        \\"triggers\\": {\\n            \\"parent\\": True,\\n        },\\n        \\"parameters\\": [],\\n        \\"configs\\": [],\\n        \\"jobs\\": jobs\\n    }\\n```\\n\\nAs you may notice, the list of jobs is built dynamically.  For each\\nentry of the list of tuples (`lang-name`, `docker-image`), a job is\\ndefined with the same steps but various values for language and Docker\\nimage name. The lang name is passed to `./run.sh` script in `shell`\\nstep.  And Docker image name is used in the environments section, in\\nthe `system` field. Such a list of jobs is then returned in the whole\\nworkflow definition. Each job will be run in parallel in separate\\nDocker containers.\\n\\nThe example of workflow execution is present in Kraken lab:\\nhttps://lab.kraken.ci/runs/5009/jobs. Check the workflow definitions in\\n[branch management page](https://lab.kraken.ci/branches/33).\\n\\nThis screenshot shows the execution of this workflow:\\n\\n<Screen img=\\"screen-hello-worlds-execution.png\\" />\\n\\n\\n### Summary\\n\\nThis article shows how Kraken CI can build programs written in various\\nlanguages. Kraken provides prepared Docker images for many\\nlanguages. It is easy to define sophisticated workflows that\\ndynamically define jobs that can be run in parallel. In the end, it is\\nnice to observe the results of workflow execution in Kraken UI."},{"id":"job-designer-and-more-0-962","metadata":{"permalink":"/blog/job-designer-and-more-0-962","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-05-09-job-designer-and-more-0-962.mdx","source":"@site/blog/2022-05-09-job-designer-and-more-0-962.mdx","title":"Job Designer and More - 0.962 Release","description":"The job designer","date":"2022-05-09T00:00:00.000Z","formattedDate":"May 9, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"release","permalink":"/blog/tags/release"},{"label":"theme","permalink":"/blog/tags/theme"},{"label":"images","permalink":"/blog/tags/images"}],"readingTime":2.21,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"job-designer-and-more-0-962","title":"Job Designer and More - 0.962 Release","authors":"mike","tags":["kraken","release","theme","images"]},"prevItem":{"title":"Hello Worlds in 22 Langs on Kraken CI","permalink":"/blog/hello-worlds-in-22-langs-on-kraken-ci"},"nextItem":{"title":"MLOps with MLflow on Kraken CI","permalink":"/blog/mlops-with-mlflow-on-kraken-ci"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThe job designer\\n([#171](https://github.com/Kraken-CI/kraken/issues/171)) is the main\\nfeature in\\n[0.962](https://github.com/Kraken-CI/kraken/releases/tag/v0.962)\\nrelease.\\n\\nBesides that, it contains:\\n\\n- support for multiline shell scripts and selecting shell executable\\n  ([#183](https://github.com/Kraken-CI/kraken/issues/183) and\\n  [#184](https://github.com/Kraken-CI/kraken/issues/184)) charts\\n- new chart showing flows duration in a branch ([#173](https://github.com/Kraken-CI/kraken/issues/173))\\n- multiple new base docker images for various programming languages\\n- split results chart to pass ratio chart and passed/total chart ([#187](https://github.com/Kraken-CI/kraken/issues/183))\\n\\n\\nMore information about these changes is below.\\n\\n\x3c!--truncate--\x3e\\n\\n\\n### Job Designer\\n\\nNow it is possible to design job steps using a UI available on a\\nbranch management page.\\n\\n<Screen img=\\"screen-branch-prepare-step-button.png\\" />\\n\\nThe `Prepare Step` button shows the job designer dialog.\\n\\n<Screen img=\\"screen-branch-prepare-step-dialog.png\\" />\\n\\nThe dialog shows all available fields of a step with descriptions and\\ninput boxes pre-filled with default values. These fields are available\\nfor a tool selected in the dropdown at the top of the dialog. Below,\\nthere is the step generated in JSON format.\\n\\nIn the case of the picture above, there is a shell tool\\nselected. There are multiple fields available. A few are used:\\n`cmd`, `cwd` and `shell_exec`. The generated step in JSON contains\\nthese fields with user-provided values.\\n\\nNow a user may copy the generated step and then paste it into the stage\\nschema code.\\n\\n\\n### Shell Tool Improvements\\n\\nThe shell tool got two improvements. One allows for entering a multiline\\nscript instead of just one command. The other one allows for indicating\\nan alternative shell executable - the default one is `/bin/sh`.\\n\\nA multiline script can be provided in the following way:\\n\\n```json\\n{\\n   \\"steps\\": [{\\n       \\"tool\\": \\"shell\\",\\n       \\"script\\": \\"\\"\\"\\n           echo \'multiline script\'\\n           ls -al\\n           echo \'completed\'\\n       \\"\\"\\"\\n   }]\\n}\\n```\\n\\nChanging default shell executable to e.g. `zsh` goes this way:\\n\\n```json\\n{\\n   \\"steps\\": [{\\n       \\"tool\\": \\"shell\\",\\n       \\"cmd\\": \\"echo $ZSH_VERSION\\",\\n       \\"shell_exec\\": \\"zsh\\"\\n   }]\\n}\\n```\\n\\nMore in the [docs](/docs/schema#shell).\\n\\n\\n### Flow Duration on Branch Chart\\n\\nOn the branch management page, on `Stats and Charts` tab, there are\\nbasic stats about the branch, like the total number of flows or the\\naverage flow duration in the last week. Below these stats, a chart\\nshows the duration of flows over time.\\n\\n<Screen img=\\"screen-branch-stats.png\\" />\\n\\nThe whole stats and charts are presented in two instances: one for CI\\nand the other one for DEV flows.\\n\\n\\n### New Base Docker Images\\n\\nThere are multiple new Docker images prepared to be used in Kraken CI.\\nThe full list is available in the [docs page](/docs/docker-executor#language-images).\\n\\n\\n### Split Results Chart\\n\\nInitially, the pass ratio was shown together with total and passed\\ncounts on the same chart. Now that is split into two charts: 1) pass\\nratio chart and 2) total and passed counts."},{"id":"mlops-with-mlflow-on-kraken-ci","metadata":{"permalink":"/blog/mlops-with-mlflow-on-kraken-ci","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-04-28-mlops-with-mlflow-on-kraken-ci.mdx","source":"@site/blog/2022-04-28-mlops-with-mlflow-on-kraken-ci.mdx","title":"MLOps with MLflow on Kraken CI","description":"Besides building, testing and deploying, Kraken CI is also a pretty","date":"2022-04-28T00:00:00.000Z","formattedDate":"April 28, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"devops","permalink":"/blog/tags/devops"},{"label":"mlops","permalink":"/blog/tags/mlops"},{"label":"mlflow","permalink":"/blog/tags/mlflow"}],"readingTime":2.585,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"mlops-with-mlflow-on-kraken-ci","title":"MLOps with MLflow on Kraken CI","authors":"mike","tags":["kraken","devops","mlops","mlflow"]},"prevItem":{"title":"Job Designer and More - 0.962 Release","permalink":"/blog/job-designer-and-more-0-962"},"nextItem":{"title":"Dark Mode in 0.945 Release","permalink":"/blog/dark-mode-in-0-945"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nBesides building, testing and deploying, Kraken CI is also a pretty\\nnice tool to build an [MLOps](https://en.wikipedia.org/wiki/MLOps)\\npipeline. In this article, it will be shown how to leverage Kraken CI to\\nbuild a CI workflow for machine learning using\\n[MLflow](https://mlflow.org/).\\n\\n\\n\x3c!--truncate--\x3e\\n\\n### MLOps and MLflow\\n\\nMLOps is a set of practices that aims to build and maintain machine\\nlearning models in production reliably and efficiently. One of\\nprominent tools in this area is [MLflow](https://mlflow.org/).\\n\\nMLflow is an open-source platform for managing the end-to-end machine\\nlearning lifecycle. It tackles four primary functions:\\n\\n- Tracking experiments to record and compare parameters and results\\n  (MLflow Tracking).\\n- Packaging ML code in a reusable, reproducible form to share\\n  with other data scientists or transfer to production (MLflow\\n  Projects).\\n- Managing and deploying models from various ML libraries to a\\n  variety of model serving and inference platforms (MLflow Models).\\n- Providing a central model store to collaboratively manage the entire\\n  lifecycle of an MLflow Model, including model versioning, stage\\n  transitions, and annotations (MLflow Model Registry).\\n\\n### MLflow in Kraken CI\\n\\nIn the following sections, I will describe how to prepare a workflow\\nin Kraken CI to train an ML model. This is an LSTM model that will\\npredict stock prices based on historical data.\\n\\nThe workflow will be:\\n\\n1. pulling live stock data and preparing it for training ([source\\n1](https://github.com/Kraken-CI/mlflow-example/blob/master/download_raw_data.py),\\n[source\\n2](https://github.com/Kraken-CI/mlflow-example/blob/master/transform_data.py))\\n\\n2. performing the training ([source 3](https://github.com/Kraken-CI/mlflow-example/blob/master/train_model.py))\\n\\n3. storing model metrics in Kraken CI for charting\\n\\nThe MLflow project is described in [MLproject](https://github.com/Kraken-CI/mlflow-example/blob/master/MLproject).\\n\\n### Workflow Definition\\n\\nThe whole Kraken CI workload is defined [here](https://github.com/Kraken-CI/mlflow-example/blob/master/.kraken/one.py).\\n\\nThere are 3 steps:\\n\\n```json\\n   \\"steps\\": [{\\n       \\"tool\\": \\"git\\",\\n       \\"checkout\\": \\"https://github.com/Kraken-CI/mlflow-example.git\\"\\n   }, {\\n       \\"tool\\": \\"shell\\",\\n       \\"cmd\\": \\"/opt/conda/bin/mlflow run .\\",\\n       \\"cwd\\": \\"mlflow-example\\",\\n       \\"timeout\\": 1200\\n   }, {\\n       \\"tool\\": \\"values_collect\\",\\n       \\"files\\": [{\\n           \\"name\\": \\"metrics.json\\",\\n           \\"namespace\\": \\"metrics\\"\\n       }, {\\n           \\"name\\": \\"params.json\\",\\n           \\"namespace\\": \\"params\\"\\n       }],\\n       \\"cwd\\": \\"mlflow-example\\"\\n   }],\\n```\\n\\n1. Checkout mflow example project sources\\n\\n2. Run the mlflow project ie. download data, prepare it, run a\\ntraining and at the end store metrics about the trained model to\\nmetrics.json\\n\\n3. Upload collected metrics together with hyperparameters from\\nparams.json to Kraken server\\n\\nThe last step allows for charting accuracy and RMS of the model over\\nbuilds.\\n\\nThere is one more element defined in the workflow: the definition of\\nexecution environment:\\n\\n```json\\n   \\"environments\\": [{\\n       \\"system\\": \\"krakenci/mlflow\\",\\n       \\"executor\\": \\"docker\\",\\n       \\"agents_group\\": \\"all\\",\\n       \\"config\\": \\"default\\"\\n   }]\\n```\\nHere we can notice the use of a pre-prepared image with mlflow.\\nIt is available in Docker hub:\\n[krakenci/mlflow](https://hub.docker.com/r/krakenci/mlflow).\\n\\nThe whole example of workflow is present in Kraken lab:\\nhttps://lab.kraken.ci/branches/32/ci. Check the steps definitions in\\n[branch management page](https://lab.kraken.ci/branches/32).\\n\\n### Execution and Monitoring\\n\\nBesides the workflow definition, Kraken UI also shows collected data\\nand the charts drawn from this data:\\nhttps://lab.kraken.ci/test_case_results/595950, the charts tab.\\n\\nThe right chart shows value of `loss` collected over time:\\n\\n<Screen img=\\"screen-values-chart.png\\" />\\n\\n\\n### Summary\\n\\nThis article shows how Kraken CI can be used to build an MLOps\\npipeline.  The pipeline downloads raw data, prepares the data for\\ntraining and then executes the training. The trained model\\nmetrics are collected and charted in Kraken UI at the end."},{"id":"dark-mode-in-0-945","metadata":{"permalink":"/blog/dark-mode-in-0-945","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-04-22-dark-mode-in-0-945.mdx","source":"@site/blog/2022-04-22-dark-mode-in-0-945.mdx","title":"Dark Mode in 0.945 Release","description":"The dark mode is the main feature in 0.945 release.","date":"2022-04-22T00:00:00.000Z","formattedDate":"April 22, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"release","permalink":"/blog/tags/release"},{"label":"theme","permalink":"/blog/tags/theme"},{"label":"images","permalink":"/blog/tags/images"}],"readingTime":2.01,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"dark-mode-in-0-945","title":"Dark Mode in 0.945 Release","authors":"mike","tags":["kraken","release","theme","images"]},"prevItem":{"title":"MLOps with MLflow on Kraken CI","permalink":"/blog/mlops-with-mlflow-on-kraken-ci"},"nextItem":{"title":"The Last Few Releases","permalink":"/blog/last-few-releases"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\nThe dark mode is the main feature in [0.945](https://github.com/Kraken-CI/kraken/releases/tag/v0.945) release.\\n\\nBesides that, it contains:\\n\\n- added a new tool `values_collect` that allows collecting values and then doing charts in UI based on them\\n- added cleaning cache in MinIO\\n- updated Go base image\\n- added new base image for [MLflow](https://mlflow.org/)\\n\\nMore information about these changes is below.\\n\\n\x3c!--truncate--\x3e\\n\\n### Dark Mode\\n\\nNow it is possible to look at Kraken CI web UI at night using dark mode.\\n\\n<Screen img=\\"screen-main-light.png\\" />\\n<Screen img=\\"screen-main-dark.png\\" />\\n\\nIf the dark mode is switched on in the browser that it will be\\nautomatically activated in Kraken CI web UI. Otherwise, it is\\npossible to manually switch the dark mode on or off using the profile\\ndrop-down button in the top left corner of the screen (see below).\\n\\n<Screen img=\\"screen-main-dark-mode-switch.png\\" />\\n\\n\\n### New Tool values_collect\\n\\nWhen testing is being carried out by a Kraken agent, custom measured\\nmetrics can be returned besides test results. Now it is possible to\\njust generate such measurements, store them in a JSON file and then\\nload them to the Kraken server. Then they will be visible on a job\\nresults page and it is possible to display a chart based on these\\nvalues.\\n\\nThe reported file should look like this (e.g. metrics.json):\\n\\n```json\\n{\\n    \\"metric-1\\": 432,\\n    \\"metric-2\\": 2.12,\\n}\\n```\\n\\nThe step that consumes these values should look like this:\\n\\n```json\\n{\\n    \\"tool\\": \\"values_collect\\",\\n    \\"files\\": [{\\n        \\"name\\": \\"metrics.json\\",\\n        \\"namespace\\": \\"metrics\\"\\n    }, {\\n        \\"name\\": \\"params.json\\",\\n        \\"namespace\\": \\"params\\"\\n    }],\\n    \\"cwd\\": \\"example\\"\\n}\\n```\\n\\nThe end results looks like that:\\n\\n<Screen img=\\"screen-values-chart.png\\" />\\n\\n\\nThe whole example of workflow with collected results is present in\\nKraken lab: https://lab.kraken.ci/branches/32/ci. Check the steps\\ndefinitions in [branch management\\npage](https://lab.kraken.ci/branches/32) and then check the charts on\\n[tests results page](https://lab.kraken.ci/test_case_results/595950),\\nin the charts tab.\\n\\n\\n### Cleaning Cache in MinIO\\n\\nThe files that are always pulled to a build environmnt can be cached\\nbetween builds, so they don\'t have to be downloaded from the internet\\neach time. More about caching\\n[here](http://localhost:3000/docs/schema/#cache).\\n\\nThe Current release introduces a feature that automatically removes\\nold cached files. Now, after 10 days, these files are deleted from\\nMinIO.\\n\\n\\n### Changes in Base Images\\n\\nThe Go lang base image has been updated. The latest image contains Go\\nin 1.18.  The location of the image is:\\n[krakenci/golang:1.18](https://hub.docker.com/r/krakenci/golang).\\n\\nThere is also a new image with [MLflow](https://mlflow.org/). It is\\navailable under:\\n[krakenci/mlflow](https://hub.docker.com/r/krakenci/mlflow)."},{"id":"last-few-releases","metadata":{"permalink":"/blog/last-few-releases","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-04-11-last-few-releases.mdx","source":"@site/blog/2022-04-11-last-few-releases.mdx","title":"The Last Few Releases","description":"The last mentioned Kraken CI release on the blog was","date":"2022-04-11T00:00:00.000Z","formattedDate":"April 11, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"results","permalink":"/blog/tags/results"},{"label":"charts","permalink":"/blog/tags/charts"},{"label":"secrets","permalink":"/blog/tags/secrets"},{"label":"logs","permalink":"/blog/tags/logs"}],"readingTime":2.075,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"last-few-releases","title":"The Last Few Releases","authors":"mike","tags":["kraken","results","charts","secrets","logs"]},"prevItem":{"title":"Dark Mode in 0.945 Release","permalink":"/blog/dark-mode-in-0-945"},"nextItem":{"title":"Commenting Test Results","permalink":"/blog/commenting-test-results"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\n\\nThe last mentioned Kraken CI release on the blog was\\n[0.854](https://github.com/Kraken-CI/kraken/releases/tag/v0.854).\\nSince then there was several releases:\\n[0.868](https://github.com/Kraken-CI/kraken/releases/tag/v0.868),\\n[0.909](https://github.com/Kraken-CI/kraken/releases/tag/v0.909) and\\nthe last one:\\n**[0.933](https://github.com/Kraken-CI/kraken/releases/tag/v0.933)**.\\nThey introduce various new features and lots of fixes.\\n\\nThe changes include:\\n\\n- added a chart with results history on a flow page\\n- added a multi-dimentional table with pass ratio stats of a flow\\n- added masking secrets in logs\\n- many improvements to the job\'s log panel like coloring and timestamps on/off\\n- added navigation to prev and next flow in breadcrumb on the flow page\\n\\nMore information about these changes is below.\\n\\n\x3c!--truncate--\x3e\\n\\n### Chart with Pass Ratio History\\n\\nThe flow page has now two new tabs. One of them is a `Results Charts`\\ntab.  On this tab, a results history chart can be found.  It presents\\na pass ratio line in % units and two more lines: passed and total that\\nshows the number of passed tests and the total number of tests over time.\\n\\n<Screen img=\\"screen-flow-pass-ratio-history.png\\" />\\n\\n\\n### Pass Ratio Stats of Flow\\n\\nOn the other tab, `Results Stats`, a table shows tests passing\\nstats. The dimensions of the table are dynamic. They can be selected\\nfrom dropdowns available over the table. There can be chosen:\\n`Stage`, `Agents Group` and `System`.\\n\\n<Screen img=\\"screen-flow-pass-ratio-stats.png\\" />\\n\\n\\n### Secrets Masking\\n\\nAnother feature is related to security. Quite often, a password or\\nsome access key needs to be passed during build or test\\nexecution. Sometimes this secret is revealed in logs. Now Kraken knows\\nsecrets defined in a project and it masks them in the logs. The\\nsecrets are caught quite early and they do not leave a machine that\\ntraced them to logs. The log database stores only masked passwords.\\n\\nThere is one interesting property of this masking that cannot be found\\nin other CI systems: it can mask multiline secrets like SSH private\\nkey.\\n\\n<Screen img=\\"screen-logs-masked-secrets.png\\" />\\n\\n\\n### Log Panel Improvements\\n\\nThere were added several improvements to the log panel:\\n\\n- coloring ANSI color codes in HTML log box\\n- turning timestamps on/off\\n- showing missing timestamps\\n- log loading indicator\\n\\nThe screens below show colored logs and timestamps that are either\\nswitched off or switched on.\\n\\n<Screen img=\\"screen-log-box-timestamps-off.png\\" />\\n\\n<Screen img=\\"screen-log-box-timestamps-on.png\\" />\\n\\n\\n### Flow Navigation Improved\\n\\nThe last feature presented here is flows navigation. In the breadcrumb\\nbar there are shown two arrows that allow for navigating to the\\nprevious flow and to the next flow.\\n\\n<Screen img=\\"screen-flow-navigation.png\\" />"},{"id":"commenting-test-results","metadata":{"permalink":"/blog/commenting-test-results","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2022-01-24-commenting-test-results.mdx","source":"@site/blog/2022-01-24-commenting-test-results.mdx","title":"Commenting Test Results","description":"This time not about autoscaling or other cloud feature. This time we","date":"2022-01-24T00:00:00.000Z","formattedDate":"January 24, 2022","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"git","permalink":"/blog/tags/git"},{"label":"webhooks","permalink":"/blog/tags/webhooks"}],"readingTime":0.71,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","key":"mike"}],"frontMatter":{"slug":"commenting-test-results","title":"Commenting Test Results","authors":"mike","tags":["kraken","git","webhooks"]},"prevItem":{"title":"The Last Few Releases","permalink":"/blog/last-few-releases"},"nextItem":{"title":"Autoscaling with Kubernetes","permalink":"/blog/autoscaling-with-kubernetes"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nimport Image from \'@theme/IdealImage\';\\n\\n\\nThis time not about autoscaling or other cloud feature. This time we\\nare coming back to the core area of Kraken: testing. Today\'s [0.854\\nrelease](https://github.com/Kraken-CI/kraken/releases/tag/v0.854)\\nintroduces test results commenting.\\n\\nMore information about commenting is below.\\n\\n\x3c!--truncate--\x3e\\n\\n[Test results comments](/docs/test-results-basics#comments) feature allows\\nfor adding sticky comments to test case results. When you spot a new\\nfailure, you may add a comment stating, e.g. the reason for the failure\\nor link to a bug in a bug tracker. If the failure persists in the\\nsubsequent test runs, the added comment is still presented next to\\nthe new result. If new facts about the failure are revealed, you may\\nextend the comment.\\n\\nThere is also a state of the comment. More information about these\\ndetails can be found in the [docs page](/docs/test-results-basics#comments)\\nof the results comments feature."},{"id":"autoscaling-with-kubernetes","metadata":{"permalink":"/blog/autoscaling-with-kubernetes","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-12-30-autoscaling-with-kubernetes.mdx","source":"@site/blog/2021-12-30-autoscaling-with-kubernetes.mdx","title":"Autoscaling with Kubernetes","description":"Previous Kraken\'s release introduced a new installation method into Kubernetes using Helm chart.","date":"2021-12-30T00:00:00.000Z","formattedDate":"December 30, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"git","permalink":"/blog/tags/git"},{"label":"webhooks","permalink":"/blog/tags/webhooks"}],"readingTime":0.39,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"autoscaling-with-kubernetes","title":"Autoscaling with Kubernetes","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","git","webhooks"]},"prevItem":{"title":"Commenting Test Results","permalink":"/blog/commenting-test-results"},"nextItem":{"title":"Installation on Kubernetes","permalink":"/blog/installation-to-kubernetes"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\n\\nPrevious Kraken\'s release introduced a new installation method into Kubernetes using Helm chart.\\nToday\'s [0.813 release](https://github.com/Kraken-CI/kraken/releases/tag/v0.813)\\nallows for autoscaling on Kubernetes.\\n\\nMore information about Kraken on Kubernetes is below.\\n\\n\x3c!--truncate--\x3e\\n\\nAutoscaling [docs](/docs/autoscale-in-cloud) have been\\nupdated and now includes details about Kubernetes.\\n\\nAdditionally, a new [guide for Kubernetes](/docs/guide-kubernetes) has\\nbeen prepared.  It presents, step by step, how to deploy Kraken to\\nKubernetes cluster, configure autoscaling on Kubernetes and how to run\\nthe first job there."},{"id":"installation-to-kubernetes","metadata":{"permalink":"/blog/installation-to-kubernetes","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-12-09-installation-to-kubernetes.mdx","source":"@site/blog/2021-12-09-installation-to-kubernetes.mdx","title":"Installation on Kubernetes","description":"The latest release 0.788 release","date":"2021-12-09T00:00:00.000Z","formattedDate":"December 9, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"git","permalink":"/blog/tags/git"},{"label":"webhooks","permalink":"/blog/tags/webhooks"}],"readingTime":0.55,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"installation-to-kubernetes","title":"Installation on Kubernetes","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","git","webhooks"]},"prevItem":{"title":"Autoscaling with Kubernetes","permalink":"/blog/autoscaling-with-kubernetes"},"nextItem":{"title":"Webhooks for GitLab and Gitea","permalink":"/blog/webhooks-for-gitlab-and-gitea"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\n\\nThe latest release [0.788 release](https://github.com/Kraken-CI/kraken/releases/tag/v0.788)\\nbrings support for Kraken installation into Kubernetes using Helm chart.\\n\\n[Helm installation](/docs/install-helm) guide shows how to do this.\\n\\nFull information about current and past Helm chart releases can be\\nfound on: https://artifacthub.io/packages/helm/kraken-ci/kraken-ci.\\n\\nMore information about ArtiactHub is below.\\n\\n\x3c!--truncate--\x3e\\n\\n<Screen img=\\"artifacthub-io.png\\" />\\n\\nThere are presented install and upgrade steps. The templates of the\\ncharts are available, so it is possible to check what and how they\\nwill be installed in a Kubernetes cluster. There are also shown\\nconfiguration fields with default values.\\n\\nBesides that, the history of releases is provided, and a list of the\\nreferenced container images in pod deployments."},{"id":"webhooks-for-gitlab-and-gitea","metadata":{"permalink":"/blog/webhooks-for-gitlab-and-gitea","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-11-12-webhooks-for-gitlab-and-gitea.mdx","source":"@site/blog/2021-11-12-webhooks-for-gitlab-and-gitea.mdx","title":"Webhooks for GitLab and Gitea","description":"The latest release 0.753 release","date":"2021-11-12T00:00:00.000Z","formattedDate":"November 12, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"git","permalink":"/blog/tags/git"},{"label":"webhooks","permalink":"/blog/tags/webhooks"}],"readingTime":0.905,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"webhooks-for-gitlab-and-gitea","title":"Webhooks for GitLab and Gitea","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","git","webhooks"]},"prevItem":{"title":"Installation on Kubernetes","permalink":"/blog/installation-to-kubernetes"},"nextItem":{"title":"Autoscaling with Azure and AWS ECS","permalink":"/blog/autoscaling-with-azure-and-aws-ecs"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\n\\nThe latest release [0.753 release](https://github.com/Kraken-CI/kraken/releases/tag/v0.753)\\nbrings support for webhooks for 2 new Git hosting services: [GitLab](https://gitlab.org)\\nand [Gitea](https://gitea.io/).\\n\\n[Quick Start](/docs/quick-start) guide shows how to install Kraken CI.\\n\\n[Webhooks Guide](/docs/guide-webhooks) shows how to use webhooks,\\nnow in GitLab, Gitea and GitHub.\\n\\n\x3c!--truncate--\x3e\\n\\n\\nWebhooks allows for triggering a flow in a branch. The webhook may\\ncome now from 3 Git hosting services: GitLab, Gitea and GitHub.  There\\nare two kinds of webhook events supported: push and pull request (in\\nthe case of GitHub and Gitea) and merge request (in the case of\\nGitLab). A push even to a given branch causes a CI flow to be\\nstarted. If this is a pull request or a merge request, then a DEV flow\\nis started. If a workflow schema checks out sources from this\\nrepository, a version indicated in the push or the pull/merge request is\\nchecked out.\\n\\nThe [Webhook Guide](/docs/guide-webhooks) shows how to configure\\nwebhooks in a project, and then how to configure a Git hosting\\nservice. In the end, checking out the repository in the workflow\\nschema is presented."},{"id":"autoscaling-with-azure-and-aws-ecs","metadata":{"permalink":"/blog/autoscaling-with-azure-and-aws-ecs","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-10-24-autoscaling-with-azure-and-aws-ecs.mdx","source":"@site/blog/2021-10-24-autoscaling-with-azure-and-aws-ecs.mdx","title":"Autoscaling with Azure and AWS ECS","description":"The latest release 0.748 release","date":"2021-10-24T00:00:00.000Z","formattedDate":"October 24, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"cloud","permalink":"/blog/tags/cloud"}],"readingTime":0.775,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"autoscaling-with-azure-and-aws-ecs","title":"Autoscaling with Azure and AWS ECS","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","cloud"]},"prevItem":{"title":"Webhooks for GitLab and Gitea","permalink":"/blog/webhooks-for-gitlab-and-gitea"},"nextItem":{"title":"Testing Frameworks","permalink":"/blog/testing-frameworks"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\n\\nThe latest release [0.748 release](https://github.com/Kraken-CI/kraken/releases/tag/v0.748)\\nbrings a new public cloud in autoscaling features: Azure and AWS ECS.\\n\\n[Quick Start](/docs/quick-start) guide shows how to install Kraken CI.\\n\\n[Autoscaling Guide](/docs/guide-autoscale) shows how to use\\nautoscaling with Azure VMs and AWS ECS.\\n\\n\x3c!--truncate--\x3e\\n\\n\\nMaintaining a fixed number of machines for Kraken CI can be costly. If\\nthere is no high traffic of builds, then some machines sit idle and\\nwaste power. The solution to this problem is autoscaling ie. spawning\\nmachines with Kraken Agents dynamically depending on the current needs\\nin the Kraken CI. If there is submitted a new flow with many building\\nor testing jobs, then new machines are spawned. When the flow\\ncompletes, machines are terminated and no costs are incurred.\\n\\nThe [Autoscaling Guide](/docs/guide-autoscale) shows how to configure\\naccess to Azure, then how to configure parameters and behaviour of\\nspawned machines. In the end, the usage in job definitions is\\npresented."},{"id":"testing-frameworks","metadata":{"permalink":"/blog/testing-frameworks","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-08-06-testing-frameworks.mdx","source":"@site/blog/2021-08-06-testing-frameworks.mdx","title":"Testing Frameworks","description":"There have been added three articles in the Kraken\'s documentation","date":"2021-08-06T00:00:00.000Z","formattedDate":"August 6, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"cloud","permalink":"/blog/tags/cloud"}],"readingTime":0.8,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"testing-frameworks","title":"Testing Frameworks","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","cloud"]},"prevItem":{"title":"Autoscaling with Azure and AWS ECS","permalink":"/blog/autoscaling-with-azure-and-aws-ecs"},"nextItem":{"title":"Autoscaling with AWS","permalink":"/blog/autoscaling-with-aws"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nThere have been added three articles in the Kraken\'s documentation\\nabout integration of testing frameworks with Kraken CI:\\n\\n- [JUnit](/docs/tf-junit)\\n- [Pytest](/docs/tf-pytest)\\n- [RobotFramework](/docs/tf-robotframework)\\n\\nThe latest release [0.698\\nrelease](https://github.com/Kraken-CI/kraken/releases/tag/v0.698)\\nbrings also a new feature: collecting, storing and presenting custom\\ngenerated reports in e.g. HTML.\\n\\n[Quick Start](/docs/quick-start) guide shows how to install Kraken CI.\\n\\n\x3c!--truncate--\x3e\\n\\n\\n### Testing Frameworks\\n\\nThe articles about testing frameworks shows how to use well known\\nframeworks like [JUnit](/docs/tf-junit), [Pytest](/docs/tf-pytest) and\\n[RobotFramework](/docs/tf-robotframework) inside Kraken CI. There are\\npresented stage workflow schemas with steps that:\\n\\n1. execute the tests using particular framework\\n1. report results to Kraken server\\n1. store generated custom reports on Kraken server\\n\\n### Custom Reports\\n\\nThe latest release [0.698\\nrelease](https://github.com/Kraken-CI/kraken/releases/tag/v0.698)\\nallows now for storing and presenting custom reports in e.g. HTML format.\\nThe are available along current generic test case results page.\\n\\nMore details about step for storing reports can be found in [the\\ndocs](/docs/schema#artifacts) and example usage on [RobotFramework\\nexample](/docs/tf-robotframework)."},{"id":"autoscaling-with-aws","metadata":{"permalink":"/blog/autoscaling-with-aws","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-07-20-autoscaling-with-aws.mdx","source":"@site/blog/2021-07-20-autoscaling-with-aws.mdx","title":"Autoscaling with AWS","description":"The latest release 0.687 release","date":"2021-07-20T00:00:00.000Z","formattedDate":"July 20, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"cloud","permalink":"/blog/tags/cloud"}],"readingTime":0.725,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"autoscaling-with-aws","title":"Autoscaling with AWS","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","cloud"]},"prevItem":{"title":"Testing Frameworks","permalink":"/blog/testing-frameworks"},"nextItem":{"title":"Kraken Release 0.645","permalink":"/blog/kraken-release-0-645"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\n\\nThe latest release [0.687 release](https://github.com/Kraken-CI/kraken/releases/tag/v0.687)\\nbrings a stabilization to autoscaling feature.\\n\\n[Quick Start](/docs/quick-start) guide shows how to install Kraken CI.\\n\\n[Autoscaling Guide](/docs/guide-autoscale) shows how to use autoscaling with AWS.\\n\\n\x3c!--truncate--\x3e\\n\\n\\nMaintaining a fixed number of machines for Kraken CI can be costly. If\\nthere is no high traffic of builds, then some machines sit idle and\\nwaste power. The solution to this problem is autoscaling ie. spawning\\nmachines with Kraken Agents dynamically depending on the current needs\\nin the Kraken CI. If there is submitted a new flow with many building\\nor testing jobs, then new machines are spawned. When the flow\\ncompletes, machines are terminated and no costs are incurred.\\n\\nThe [Autoscaling Guide](/docs/guide-autoscale) shows how to configure\\naccess to AWS, then how to configure parameters and behaviour of\\nspawned machines. In the end, the usage in job definitions is\\npresented."},{"id":"kraken-release-0-645","metadata":{"permalink":"/blog/kraken-release-0-645","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-07-04-kraken-release-0-645.mdx","source":"@site/blog/2021-07-04-kraken-release-0-645.mdx","title":"Kraken Release 0.645","description":"The 0.645 release contains several new features and improvements and some fixes.","date":"2021-07-04T00:00:00.000Z","formattedDate":"July 4, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"release","permalink":"/blog/tags/release"}],"readingTime":1.11,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"kraken-release-0-645","title":"Kraken Release 0.645","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","release"]},"prevItem":{"title":"Autoscaling with AWS","permalink":"/blog/autoscaling-with-aws"},"nextItem":{"title":"Kraken Release 0.557","permalink":"/blog/kraken-release-0-557"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\n\\nThe [0.645 release](https://github.com/Kraken-CI/kraken/releases/tag/v0.645) contains several new features and improvements and some fixes.\\nThe most noteworthy changes are:\\n\\n- added background steps\\n- added support for Rocky Linux\\n- replaced Celery with RQ for background tasks\\n- upgraded Angular and PrimeNG to 12\\n\\n[Quick Start](/docs/quick-start) guide shows how to install Kraken CI.\\n\\n\x3c!--truncate--\x3e\\n\\n## The list of changes\\n\\nThe complete list of changes looks as follows.\\n\\nFeatures & improvements:\\n\\n\\n- added more details about RQ jobs on the diagnostics page\\n- added changing name of branch in a repo\\n- when run is being started then stage schema is refreshed from repo\\n- added button for checking email and AWS settings\\n- converted timestamps columns to be with timezone in Postgresql schema\\n- converted all char(n) columns in db to text\\n- added doing db backup during deployment\\n\\nFixes:\\n\\n- fixed deleting dangling agents with no AWS instance\\n- added db rollback in watchdog in case of exception\\n- improved checking agents vm to destroy\\n- pytest tool: added check if collecting tests failed\\n- fixed counting available agents\\n- added detecting jobs with no agent and spawning them\\n- improved creating system records\\n- improved checking args to agent\\n- improved pulling git repo in git tool\\n\\n\\nMore details about background steps can be found in [the documentation](/docs/schema#shell)."},{"id":"kraken-release-0-557","metadata":{"permalink":"/blog/kraken-release-0-557","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-05-227-kraken-release-0-557.mdx","source":"@site/blog/2021-05-227-kraken-release-0-557.mdx","title":"Kraken Release 0.557","description":"The 0.557 release contains several new features and improvements and some fixes.","date":"2021-05-22T00:00:00.000Z","formattedDate":"May 22, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"release","permalink":"/blog/tags/release"}],"readingTime":2.37,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"kraken-release-0-557","title":"Kraken Release 0.557","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","release"]},"prevItem":{"title":"Kraken Release 0.645","permalink":"/blog/kraken-release-0-645"},"nextItem":{"title":"Kraken Release 0.492","permalink":"/blog/kraken-release-0-492"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\n\\nThe [0.557 release](https://github.com/Kraken-CI/kraken/releases/tag/v0.557) contains several new features and improvements and some fixes.\\nThe most noteworthy changes are:\\n\\n- improved diagnostics capabilities, i.e. browsing internal logs from Kraken services\\n- integration with AWS EC2 - this is in beta state\\n\\n[Quick Start](/docs/quick-start) guide shows how to install Kraken CI.\\n\\n\x3c!--truncate--\x3e\\n\\n## The list of changes\\n\\nThe complete list of changes looks as follows.\\n\\nFeatures & improvements:\\n\\n- #105 added browsing Kraken logs in diagnostics page\\n- added errors number indicator in the top menu bar\\n- added integration with AWS EC2 - spawning VMs for jobs (beta/preview)\\n- added loading status with a spinner to submit, refresh and other buttons\\n- added interpolating variables in system and agents_group names in a workflow schema\\n- added adding kraken user to docker group and configuring sudo in agent installer\\n- kraken workflow: switched to AWS agents in build and static analysis jobs\\n- added codebeat badge to readme\\n\\nFixes:\\n\\n- fixed preparing repo changes data\\n- fixed counting agents in agents group\\n- fixed updating schema_from_repo_enabled\\n- fixed colors of top menu items\\n\\n\\n## Improved diagnostics\\n\\n### Logs\\n\\nThe diagnostics page accessible from the top menu bar got a\\nnew feature: browser of Kraken services logs. The second tab on the\\ndiagnostics page, called `Logs`, now contains filters and a\\nlogs window.\\n\\n<Screen img=\\"screen-diagnostics-logs.png\\" />\\n\\nThe list of select buttons at the top allows selecting Kraken services\\nlike server/api, celery or watchdog. Below, there is a dropbox with\\nlog level selection, from info level to error level. When the celery\\nservice is selected, selecting task type from the dropbox list is also\\npossible.\\n\\n### Error Indicator\\n\\nTo make it easier to reach logs with some problems, there have been\\nadded an error indicator in the top menu bar.\\n\\n<Screen img=\\"screen-error-indicator.png\\" />\\n\\nIt is visible on all Kraken pages. If it is greater than 0, it is\\ndisplayed in reddish color to get user attention. The count indicates\\nthe number of errors in Kraken services logs in the last hour.\\nWhen clicked, it leads to the logs page.\\n\\n## Preliminary AWS EC2 integration\\n\\nThe second, quite exciting feature, is integration with AWS EC2. The\\nintegration allows for autoscaling Kraken\'s agents. If no jobs are\\nwaiting for execution, then there are no waitng agents on EC2\\nVMs. When they appear, new VMs in EC2 are spawned immediately. If the\\nnumber of jobs grows, the number of VMs can grow as well. There is\\npossible to set a limit for the number of VMs. VMs can be reused or\\nreclaimed after a given period of idle time or after an indicated\\nnumber of executed jobs.\\n\\nThe configuration in Kraken for AWS EC2 integration is 1) in global\\nsettings (credentials) and 2) on the agent\'s group page.\\n\\nMore details will be presented when the feature is completed."},{"id":"kraken-release-0-492","metadata":{"permalink":"/blog/kraken-release-0-492","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-04-24-kraken-release-0-492.mdx","source":"@site/blog/2021-04-24-kraken-release-0-492.mdx","title":"Kraken Release 0.492","description":"The 0.492 release contains one feature:","date":"2021-04-24T00:00:00.000Z","formattedDate":"April 24, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"release","permalink":"/blog/tags/release"}],"readingTime":0.545,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"kraken-release-0-492","title":"Kraken Release 0.492","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","release"]},"prevItem":{"title":"Kraken Release 0.557","permalink":"/blog/kraken-release-0-557"},"nextItem":{"title":"Kraken\'s Code Quality","permalink":"/blog/kraken-code-quality"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nThe 0.492 release contains one feature:\\n\\n- status badges\\n\\nand two fixes:\\n\\n- fixed collecting commits info in case there are deleted files\\n- fixed returning tests results counts - mistake during code cleanup\\n\\n\x3c!--truncate--\x3e\\n\\nThe status badges indicate the current quality of a branch of a project.\\n\\n<Screen img=\\"kraken-badges.png\\" />\\n\\nThere are three types of badges. They are indicating:\\n\\n- building state (if there are no errors)\\n- tests results with fixes and regression counts\\n- issues count with a count of newly discovered issues\\n\\nLinks to the badges are available on a branch management page, in the Status Badge tab:\\n\\n\\n<Screen img=\\"screen-branch-mgmt-badges.png\\" />"},{"id":"kraken-code-quality","metadata":{"permalink":"/blog/kraken-code-quality","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-04-22-kraken-code-quality.mdx","source":"@site/blog/2021-04-22-kraken-code-quality.mdx","title":"Kraken\'s Code Quality","description":"The last week brings to Kraken\'s source code many quality","date":"2021-04-22T00:00:00.000Z","formattedDate":"April 22, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"code","permalink":"/blog/tags/code"},{"label":"quality","permalink":"/blog/tags/quality"}],"readingTime":0.315,"hasTruncateMarker":false,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"kraken-code-quality","title":"Kraken\'s Code Quality","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","code","quality"]},"prevItem":{"title":"Kraken Release 0.492","permalink":"/blog/kraken-release-0-492"},"nextItem":{"title":"Kraken Release 0.475","permalink":"/blog/kraken-release-0-475"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\nThe last week brings to Kraken\'s source code many quality\\nimprovements. Services like\\n[LGTM](https://lgtm.com/projects/g/Kraken-CI/kraken/) and\\n[Codacy](https://app.codacy.com/gh/Kraken-CI/kraken/dashboard) help\\nfixing code smells but also serious problems. So during that week in\\nKraken\'s repository, many commits have landed that refactor the\\ncode, fix issues and do code cleanup.\\n\\nThanks to all these changes, the project earned these quality badges:\\n\\n<Screen img=\\"quality-badges.png\\" />"},{"id":"kraken-release-0-475","metadata":{"permalink":"/blog/kraken-release-0-475","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2021-04-12-kraken-release-0-475.mdx","source":"@site/blog/2021-04-12-kraken-release-0-475.mdx","title":"Kraken Release 0.475","description":"The 0.475 release contains three main features:","date":"2021-04-12T00:00:00.000Z","formattedDate":"April 12, 2021","tags":[{"label":"kraken","permalink":"/blog/tags/kraken"},{"label":"release","permalink":"/blog/tags/release"}],"readingTime":1.24,"hasTruncateMarker":true,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"kraken-release-0-475","title":"Kraken Release 0.475","author":"Michal Nowikowski","author_title":"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["kraken","release"]},"prevItem":{"title":"Kraken\'s Code Quality","permalink":"/blog/kraken-code-quality"},"nextItem":{"title":"Hello World!","permalink":"/blog/hello-world"}},"content":"import Screen from \\"../docs/common.jsx\\"\\n\\n\\nThe 0.475 release contains three main features:\\n\\n- presenting **the status of the last flows** on the Kraken main page\\n- presenting **changes in Git repository** that got into a given flow\\n- presenting **step duration** on Run page, on the selected job, on Steps tab\\n\\n\x3c!--truncate--\x3e\\n\\n## The last flows status on the Kraken main page\\n\\nThe Kraken main page presents a list of branches for each\\nproject.  On the Demo project shown below, there are multiple\\nbranches. Now under each branch, there are exposed the last completed\\nflow and the last in-progress flow. On the side, there is added a time\\nin grey how long ago the flow was completed or created.\\n\\n<Screen img=\\"screen-main-last-flows.png\\" />\\n\\n\\n## Git repo changes on a flow page\\n\\nThe flow can be triggered by a push to Github PR or a Git branch. Now\\nthe flow page presents information about these Git changes.\\n\\nIf a push to Github PR triggered a flow, then it is presented\\nin **Repo Changes** tab on the flow page.\\n\\n<Screen img=\\"screen-flow-repo-trigger.png\\" />\\n\\nIf a stage has a repository defined in a trigger section, then the changes\\ndetected since previous flow are presented on another **Repo Changes**\\ntab for the selected stage.\\n\\n<Screen img=\\"screen-flow-run-repo-changes.png\\" />\\n\\n\\n## Step duration on Run page\\n\\nThe run page show steps\' status for the selected job on the Steps\\ntab. Now besides the current state of a step, there is included its\\nduration in seconds.\\n\\n<Screen img=\\"screen-run-step-duration.png\\" />"},{"id":"hello-world","metadata":{"permalink":"/blog/hello-world","editUrl":"https://github.com/kraken-ci/website/edit/master/blog/blog/2020-07-26-hello-world.md","source":"@site/blog/2020-07-26-hello-world.md","title":"Hello World!","description":"Welcome to Kraken CI blog. This is the first post on this blog.","date":"2020-07-26T00:00:00.000Z","formattedDate":"July 26, 2020","tags":[{"label":"hello","permalink":"/blog/tags/hello"},{"label":"kraken","permalink":"/blog/tags/kraken"}],"readingTime":0.065,"hasTruncateMarker":false,"authors":[{"name":"Michal Nowikowski","title":"Kraken Founder","url":"https://www.linkedin.com/in/godfryd","imageURL":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4"}],"frontMatter":{"slug":"hello-world","title":"Hello World!","author":"Michal Nowikowski","author_title":"Kraken Founder","author_url":"https://www.linkedin.com/in/godfryd","author_image_url":"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4","tags":["hello","kraken"]},"prevItem":{"title":"Kraken Release 0.475","permalink":"/blog/kraken-release-0-475"}},"content":"Welcome to Kraken CI blog. This is the first post on this blog."}]}')}}]);