"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[5802],{3894:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return h}});var a=t(3117),o=t(102),s=(t(7294),t(4137)),r=t(8742),i=(t(5944),["components"]),l={slug:"conditional-steps",title:"Conditional Steps",authors:"mike",tags:["kraken","devops","cicd"]},c=void 0,p={permalink:"/blog/conditional-steps",editUrl:"https://github.com/kraken-ci/website/edit/master/blog/blog/2023-07-12-conditional-steps.mdx",source:"@site/blog/2023-07-12-conditional-steps.mdx",title:"Conditional Steps",description:"The Kraken version",date:"2023-07-12T00:00:00.000Z",formattedDate:"July 12, 2023",tags:[{label:"kraken",permalink:"/blog/tags/kraken"},{label:"devops",permalink:"/blog/tags/devops"},{label:"cicd",permalink:"/blog/tags/cicd"}],readingTime:1.81,hasTruncateMarker:!0,authors:[{name:"Michal Nowikowski",title:"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.",url:"https://www.linkedin.com/in/godfryd",imageURL:"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4",key:"mike"}],frontMatter:{slug:"conditional-steps",title:"Conditional Steps",authors:"mike",tags:["kraken","devops","cicd"]},nextItem:{title:"Data and Dynamism in Schema",permalink:"/blog/data-and-dynamism-in-schema"}},d={authorsImageUrls:[void 0]},h=[],m={toc:h};function u(e){var n=e.components,t=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The Kraken version\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Kraken-CI/kraken/releases/tag/v1.3"},"1.3"),"\nintroduces the conditional steps. This feature enables skipping a step\nunder certain conditions. This condition can be based on any data\navailable in the system including the latest data from previous steps."),(0,s.kt)("p",null,"1.3 release brings several more features - check ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Kraken-CI/kraken/releases/tag/v1.3"},"the release\nnotes"),"."),(0,s.kt)("p",null,"More details about the conditional steps are below."),(0,s.kt)("p",null,"The conditional steps rely on lazy step execution. Previously, all\nsteps were sent to an agent, and the agent executed them all at once\nuntil either all steps were executed or one of the steps failed. Now,\nsteps are sent from the server to an agent one by one. So, the server\nfirst evaluates the ",(0,s.kt)("inlineCode",{parentName:"p"},"when")," condition and decides if the step should be\nsent for execution to an agent."),(0,s.kt)("p",null,"The example below shows various cases of ",(0,s.kt)("inlineCode",{parentName:"p"},"when")," condition:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'def stage(ctx):\n  return {\n    "parent": "root",\n      "triggers": {\n        "parent": True,\n      },\n      "parameters": [],\n      "configs": [],\n      "jobs": [{\n        "name": "hello world",\n        "steps": [{\n          "tool": "shell",\n          "cmd": "echo \'hello world\'"\n        }, {\n          "when": "was_no_error",\n          "tool": "shell",\n          "cmd": "echo \'was_no_error\'"\n        }, {\n          "when": "was_any_error",\n          "tool": "shell",\n          "cmd": "echo \'was_any_error\'"\n        }, {\n          "when": "is_ci",\n          "tool": "shell",\n          "cmd": "echo \'is_ci\'"\n        }, {\n          "when": "is_dev",\n          "tool": "shell",\n          "cmd": "echo \'is_dev\'"\n        }, {\n          "tool": "shell",\n          "cmd": "missing-command-xyz"\n        }, {\n          "when": "was_no_error",\n          "tool": "shell",\n          "cmd": "echo \'was_no_error 2\'"\n        }, {\n          "when": "was_any_error",\n          "tool": "shell",\n          "cmd": "echo \'was_any_error 2\'"\n        }, {\n          "when": "always",\n          "tool": "shell",\n          "cmd": "echo \'hello world always\' && sleep 5"\n        }, {\n          "when": "job.steps[step.index - 1].result.duration > 3",\n          "tool": "shell",\n          "cmd": "echo \'hello world #{job.steps[step.index - 1].result}\'"\n        }],\n        "environments": [{\n          "system": "any",\n          "agents_group": "all",\n          "config": "default"\n        }]\n      }]\n    }\n')),(0,s.kt)("p",null,"This code can also be found at\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Kraken-CI/workflow-examples/tree/main/conditional-steps/one.py"},"https://github.com/Kraken-CI/workflow-examples/tree/main/conditional-steps/one.py"),"."),(0,s.kt)("p",null,"The screenshot below shows the status of these steps execution."),(0,s.kt)(r.Z,{img:"screen-conditional-steps.png",mdxType:"Screen"}),(0,s.kt)("p",null,"The usage of several built-in variables can be observed, such as\n",(0,s.kt)("inlineCode",{parentName:"p"},"always"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"is_ci"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"is_dev"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"was_no_error"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"was_any_error"),". The\nlast step presents a more complicated case. It utilizes ",(0,s.kt)("inlineCode",{parentName:"p"},"job.steps"),"\nand ",(0,s.kt)("inlineCode",{parentName:"p"},"step.index")," to verify the outcome of the previous step,\nspecifically checking if the duration of the previous step was greater\nthan 3 seconds. If this condition is met, the current step will be\nexecuted."))}u.isMDXComponent=!0},8742:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.img;return a.createElement("a",{href:"/img/"+n,target:"blank"},a.createElement("img",{src:"/img/"+n,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}}))}}}]);