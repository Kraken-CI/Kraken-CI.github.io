(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[4704],{4137:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,l(l({ref:t},p),{},{components:n})):a.createElement(f,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9571:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=n(2122),r=n(9756),i=(n(7294),n(4137)),l=["components"],o={id:"schema-vars",title:"Schema Variables"},s=void 0,c={unversionedId:"schema-vars",id:"schema-vars",isDocsHomePage:!1,title:"Schema Variables",description:"There are built-in and user defined variables that can be used in",source:"@site/docs/schema-vars.md",sourceDirName:".",slug:"/schema-vars",permalink:"/docs/schema-vars",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/schema-vars.md",version:"current",frontMatter:{id:"schema-vars",title:"Schema Variables"},sidebar:"someSidebar",previous:{title:"Workflow Schema",permalink:"/docs/schema"},next:{title:"Tools",permalink:"/docs/tools"}},p=[{value:"Built-in Variables",id:"built-in-variables",children:[{value:"Flow and Run Sequences",id:"flow-and-run-sequences",children:[]},{value:"Secret Variables",id:"secret-variables",children:[]}]}],u={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"There are built-in and user defined variables that can be used in\nworkflow schema definition. They can be access using string\ninterpolation, e.g.: ",(0,i.kt)("inlineCode",{parentName:"p"},'"flow_label": "build #{MY_VAR}"'),". In this example\nthere is a ",(0,i.kt)("inlineCode",{parentName:"p"},"MY_VAR")," variable. Interpolation inside a string is made\nusing ",(0,i.kt)("inlineCode",{parentName:"p"},"#{...}")," operator (hash and curly brackets, similarly to Ruby\nvariables interpolation in strings)."),(0,i.kt)("p",null,"User variables can be defined as parameters in stages\n(see ",(0,i.kt)("a",{parentName:"p",href:"schema#parameters"},"Parameters section in Workflow Schema chapter"),").\nThen they can be accessed using their name in uppercase."),(0,i.kt)("h2",{id:"built-in-variables"},"Built-in Variables"),(0,i.kt)("h3",{id:"flow-and-run-sequences"},"Flow and Run Sequences"),(0,i.kt)("p",null,"Flows and Runs has predefined sequences that are incremented with each\nnew flow or run. There are also variants specific to flow kinds (CI\nand DEV)."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Sequence Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"KK_FLOW_SEQ")),(0,i.kt)("td",{parentName:"tr",align:null},"A variable returning a sequence value for flows. The sequence is incremented with each flow regardles its type, ie. it is shared between flow types.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"KK_CI_DEV_FLOW_SEQ")),(0,i.kt)("td",{parentName:"tr",align:null},"A variable returning a sequence value for flows. The sequence is incremented with each flow of given type (CI/DEV), ie. it is handled separately for each flow type.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"KK_RUN_SEQ")),(0,i.kt)("td",{parentName:"tr",align:null},"A variable returning a sequence value for runs of given stage. The sequence is incremented with each run regardles of flow type, ie. it is shared between flow types.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"KK_CI_DEV_RUN_SEQ")),(0,i.kt)("td",{parentName:"tr",align:null},"A variable returning a sequence value for runs of given stage. The sequence is incremented with each run of given flow type (CI/DEV), ie. it is handled separately for each flow type.")))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'{\n    ...\n    "flow_label": "bld-#{KK_CI_DEV_FLOW_SEQ}",\n    ...\n}\n')),(0,i.kt)("h3",{id:"secret-variables"},"Secret Variables"),(0,i.kt)("p",null,"Values of secrets defined in a project can be access using built-in\nvariables. They have name according to the following pattern:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Secret","\xa0","Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Name Pattern"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Simple"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"KK_SECRET_SIMPLE_<secret name>")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"KK_SECRET_SIMPLE_access_token"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"SSH","\xa0","Key"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"KK_SECRET_USER_<secret_name>")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"KK_SECRET_KEY_<secret_name>")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"KK_SECRET_USER_gitlab")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"KK_SECRET_KEY_gitlab"))))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'{\n    ...\n    steps: [{\n        "tool": "git",\n        "access-token": "#{KK_SECRET_SIMPLE_gitlab_token}",\n        ...\n    }]\n}\n')),(0,i.kt)("p",null,"There is defined a secret named ",(0,i.kt)("inlineCode",{parentName:"p"},"gitlab_token")," and here it is\nreferenced and passed to ",(0,i.kt)("inlineCode",{parentName:"p"},"access-token")," field in ",(0,i.kt)("inlineCode",{parentName:"p"},"git")," step."),(0,i.kt)("p",null,"More about secrets can be found in ",(0,i.kt)("a",{parentName:"p",href:"secrets"},"Secrets chapter"),"."))}d.isMDXComponent=!0}}]);