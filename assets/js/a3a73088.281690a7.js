"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[3278],{5493:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=s(4848),t=s(8453);const r={id:"entities",title:"Entities & Terminology"},c=void 0,o={id:"entities",title:"Entities & Terminology",description:"Project",source:"@site/docs/entities.md",sourceDirName:".",slug:"/entities",permalink:"/docs/entities",draft:!1,unlisted:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/entities.md",tags:[],version:"current",frontMatter:{id:"entities",title:"Entities & Terminology"},sidebar:"someSidebar",previous:{title:"Manual Installation",permalink:"/docs/install-manual"},next:{title:"Architecture",permalink:"/docs/architecture"}},d={},l=[{value:"Project",id:"project",level:3},{value:"Branch",id:"branch",level:3},{value:"Stage",id:"stage",level:3},{value:"Jobs",id:"jobs",level:3},{value:"Job Steps",id:"job-steps",level:4},{value:"Job Environments",id:"job-environments",level:4},{value:"Flows &amp; Runs",id:"flows--runs",level:3},{value:"Example of a Workflow Schema",id:"example-of-a-workflow-schema",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"project",children:"Project"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Project"})," is the highest level entity, which separates things from other ",(0,i.jsx)(n.code,{children:"projects"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Projects",src:s(474).A+"",width:"511",height:"61"})}),"\n",(0,i.jsx)(n.h3,{id:"branch",children:"Branch"}),"\n",(0,i.jsxs)(n.p,{children:["A project can contain multiple ",(0,i.jsx)(n.code,{children:"branches"}),". Kraken ",(0,i.jsx)(n.code,{children:"Branch"})," can represent a real source code\nrepository branch of a ",(0,i.jsx)(n.code,{children:"project"}),", but it does not have to. ",(0,i.jsx)(n.code,{children:"Branches"})," are usually used to model\nmultiple parallel, often independent, activity streams of a ",(0,i.jsx)(n.code,{children:"project"}),". For example a customer-focused maintenance release\nor a future-oriented development work. ",(0,i.jsx)(n.code,{children:"Branches"})," may have different views of the source code repository,\nuse different sets of tools, have different scopes of tests, etc."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Branches",src:s(500).A+"",width:"521",height:"201"})}),"\n",(0,i.jsx)(n.h3,{id:"stage",children:"Stage"}),"\n",(0,i.jsxs)(n.p,{children:["Each ",(0,i.jsx)(n.code,{children:"branch"})," can contain multiple ",(0,i.jsx)(n.code,{children:"stages"}),". A ",(0,i.jsx)(n.code,{children:"stage"})," is used to define the detailed activities that will happen when a ",(0,i.jsx)(n.code,{children:"stage"})," is executed."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Stages"})," can be linked together to make one ",(0,i.jsx)(n.code,{children:"stage"})," run after another ",(0,i.jsx)(n.code,{children:"stage"})," is completed.\nAll ",(0,i.jsx)(n.code,{children:"stages"})," that are not dependent (linked) and are ready to run, can be executed in parallel."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Stages",src:s(5137).A+"",width:"601",height:"141"})}),"\n",(0,i.jsxs)(n.p,{children:["What is happening in a ",(0,i.jsx)(n.code,{children:"stage"})," is defined by ",(0,i.jsx)(n.code,{children:"stage's"})," ",(0,i.jsx)(n.code,{children:"workflow schema"})," or just ",(0,i.jsx)(n.code,{children:"schema"}),".\nIn ",(0,i.jsx)(n.code,{children:"schema"})," there can be defines:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["one or more ",(0,i.jsx)(n.code,{children:"stage"})," parents"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"triggers"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"parameters"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"configs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"jobs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"notifications"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"timeout"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Stage"})," linking is defined by parents property in a ",(0,i.jsx)(n.code,{children:"stage"}),". ",(0,i.jsx)(n.code,{children:"Parameters"})," can be used to differentiate and parametrize ",(0,i.jsx)(n.code,{children:"jobs"}),";\ntheir values can be provided by user while starting a ",(0,i.jsx)(n.code,{children:"stage"})," manually otherwise default values are used.\n",(0,i.jsx)(n.code,{children:"Configs"})," allow for defining set of key-value pairs that statically define set of tests variants for execution.\n",(0,i.jsx)(n.code,{children:"Notifications"})," can be used to inform users about ",(0,i.jsx)(n.code,{children:"stage"})," result. There are several media available like email or Slack.\n",(0,i.jsx)(n.code,{children:"Timeout"})," limits the time of whole ",(0,i.jsx)(n.code,{children:"stage"})," executions. These assure us that the ",(0,i.jsx)(n.code,{children:"stage"})," will be terminated if something really\nbad is happening in ",(0,i.jsx)(n.code,{children:"jobs"})," execution (e.g. they are hanging the machines)."]}),"\n",(0,i.jsxs)(n.p,{children:["More details about these ",(0,i.jsx)(n.code,{children:"schema"})," properties are available in chapter ",(0,i.jsx)(n.a,{href:"schema",children:"Schema"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"jobs",children:"Jobs"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Jobs"})," describe what should be done in a ",(0,i.jsx)(n.code,{children:"stage"}),". A ",(0,i.jsx)(n.code,{children:"stage"})," can define multiple ",(0,i.jsx)(n.code,{children:"jobs"})," and they all are run in parallel."]}),"\n",(0,i.jsx)(n.h4,{id:"job-steps",children:"Job Steps"}),"\n",(0,i.jsxs)(n.p,{children:["Each ",(0,i.jsx)(n.code,{children:"job"})," contains one or more ",(0,i.jsx)(n.code,{children:"steps"})," that describe operations to be run sequentially. A single ",(0,i.jsx)(n.code,{children:"step"})," can be for example:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"execution of a shell command"}),"\n",(0,i.jsx)(n.li,{children:"checking out sources from a repository"}),"\n",(0,i.jsx)(n.li,{children:"running tests by a test tool"}),"\n",(0,i.jsx)(n.li,{children:"running static checks by a linter"}),"\n",(0,i.jsx)(n.li,{children:"and many more"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Jobs-Steps",src:s(6486).A+"",width:"451",height:"241"})}),"\n",(0,i.jsx)(n.h4,{id:"job-environments",children:"Job Environments"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"Job"})," contains definition of multiple ",(0,i.jsx)(n.code,{children:"environments"}),". An ",(0,i.jsx)(n.code,{children:"environment"})," specifies the following conditions for the execution of a ",(0,i.jsx)(n.code,{children:"job"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"agents group"})," - pointing to machines with agents which will be used to run the steps"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"operating system"})," - OS that will be used on the machines"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"configuration"})," - one of ",(0,i.jsx)(n.code,{children:"configurations"})," defined in the ",(0,i.jsx)(n.code,{children:"stage"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["With the help of ",(0,i.jsx)(n.code,{children:"environments"}),", the same ",(0,i.jsx)(n.code,{children:"job"})," can be run on various combinations of target machines, operating systems and configuration parameters.\nSo environments allow for running the same job:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"on several different operating system;"}),"\n",(0,i.jsx)(n.li,{children:"on several different hardware, e.g.: one with AMD CPU, another one with Intel CPU;"}),"\n",(0,i.jsx)(n.li,{children:"with different tests configurations, e.g.: running the same benchmark but in several different resolutions."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"flows--runs",children:"Flows & Runs"}),"\n",(0,i.jsxs)(n.p,{children:["When Kraken triggers execution of stages, it starts a ",(0,i.jsx)(n.code,{children:"flow"}),". A ",(0,i.jsx)(n.code,{children:"flow"})," begins with the first ",(0,i.jsx)(n.code,{children:"stage"})," (or group of ",(0,i.jsx)(n.code,{children:"stages"}),") in the ",(0,i.jsx)(n.code,{children:"branch"}),".\nA ",(0,i.jsx)(n.code,{children:"stage"})," that has been triggered and is executing, is called a ",(0,i.jsx)(n.code,{children:"run"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Subsequent ",(0,i.jsx)(n.code,{children:"runs"})," are triggered by one of prior ",(0,i.jsx)(n.code,{children:"runs"}),". ",(0,i.jsx)(n.code,{children:"Runs"})," can also be triggered manually."]}),"\n",(0,i.jsxs)(n.p,{children:["There can be two kinds of flows that are predefined by Kraken (see ",(0,i.jsx)(n.a,{href:"/docs/philosophy",children:"Kraken's Philosophy"}),"):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DEV flow"})," - it represents ",(0,i.jsx)(n.em,{children:"pre-commit"})," activities, for example it can be triggered by developer on demand"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"CI flow"})," - it represents ",(0,i.jsx)(n.em,{children:"post-commit"})," activities, for example it can be triggered by commits to the production source code (master)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"run"})," can dynamically determine in the context of which ",(0,i.jsx)(n.code,{children:"flow"})," it is running - ",(0,i.jsx)(n.code,{children:"CI"})," or ",(0,i.jsx)(n.code,{children:"DEV"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"job"})," that is being executed as part of a ",(0,i.jsx)(n.code,{children:"run"})," is called ",(0,i.jsx)(n.code,{children:"job in run"}),". It has an individual execution status. Upon completion, it can\nalso have multiple test results or issues."]}),"\n",(0,i.jsxs)(n.p,{children:["Similarily, a ",(0,i.jsx)(n.code,{children:"step"})," that is being executed as part of a ",(0,i.jsx)(n.code,{children:"job in run"})," is called ",(0,i.jsx)(n.code,{children:"step in run"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"job in run"})," is executed (multiplied) for each of the ",(0,i.jsx)(n.code,{children:"environments"})," defined in a ",(0,i.jsx)(n.code,{children:"stage"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Jobs-Steps",src:s(6601).A+"",width:"676",height:"636"})}),"\n",(0,i.jsx)(n.h3,{id:"example-of-a-workflow-schema",children:"Example of a Workflow Schema"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Stage"})," is defined using Python language."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def stage(ctx):\n    return {\n        "parent": "root",\n        "triggers": {\n            "parent": True,\n            "cron": "1 * * * *",\n            "interval": "10m",\n            "repository": True,\n            "webhook": True\n        },\n        "parameters": [],\n        "jobs": [{\n            "name": "make dist",\n            "steps": [{\n                "tool": "git",\n                "checkout": "https://github.com/frankhjung/python-helloworld.git",\n                "branch": "master"\n            }, {\n                "tool": "pytest",\n                "params": "tests/testhelloworld.py",\n                "cwd": "python-helloworld"\n            }],\n            "environments": [{\n                "system": "ubuntu-18.04",\n                "agents_group": "all",\n                "config": "default"\n            }]\n        }],\n        "notification": {\n            "slack": {"channel": "kk-results"},\n            "email": "godfryd@gmail.com"\n        }\n    }\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},500:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/kraken-branches-ff1cfc375576c71881292e0ae8a6cc7d.png"},6601:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/kraken-flows-4e0d747d54136cc22026a7e4ebe6ea23.png"},6486:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/kraken-jobs-steps-4af264c74c8685cfb91864dd700130b6.png"},474:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/kraken-projects-6eba2e4b9ec14a082451cbae893dadf1.png"},5137:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/kraken-stages-2c3fd7a9951665b5a6d067915ab2360a.png"},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);