"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[1735],{819:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=a(4848),s=a(8453),r=a(4074);const i={id:"stages",title:"Stages in a Branch"},c=void 0,o={id:"stages",title:"Stages in a Branch",description:"Branch Stages",source:"@site/docs/stages.mdx",sourceDirName:".",slug:"/stages",permalink:"/docs/stages",draft:!1,unlisted:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/stages.mdx",tags:[],version:"current",frontMatter:{id:"stages",title:"Stages in a Branch"},sidebar:"someSidebar",previous:{title:"Projects and Branches",permalink:"/docs/proj-branches"},next:{title:"Workflow Schema",permalink:"/docs/schema"}},h={},d=[{value:"Branch Stages",id:"branch-stages",level:2},{value:"Chaining Stages",id:"chaining-stages",level:2},{value:"Stage Schema Source",id:"stage-schema-source",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"branch-stages",children:"Branch Stages"}),"\n",(0,t.jsxs)(n.p,{children:["A branch contains one or several stages. Stages can be independent and\nrun in parallel or chained and together can form a tree or a set of\ntrees (forest). A stage has a schema that defines what should be\ndone. Schema generally defines jobs for execution, execution\nenvironment, triggers that start executing whole schema, optional\nparameters, and execution configuration. ",(0,t.jsx)(n.a,{href:"schema",children:"The Schema chapter"}),"\nprovides details of the schema."]}),"\n",(0,t.jsx)(n.h2,{id:"chaining-stages",children:"Chaining Stages"}),"\n",(0,t.jsx)(n.p,{children:"When there are several stages in a branch, they are independent of each\nother. This means that when a new flow for a branch is triggered,\nall the stages are triggered and run in parallel."}),"\n",(0,t.jsx)(n.p,{children:"It is possible to define dependencies between stages and form a chain\nor a tree of stages. Each stage can have defined its parent. One stage\ncan have one parent. One stage can have several children. A stage with\na parent is triggered when the execution of the parent stage is completed\nsuccessfully."}),"\n",(0,t.jsx)(n.h2,{id:"stage-schema-source",children:"Stage Schema Source"}),"\n",(0,t.jsxs)(n.p,{children:["A stage schema can be defined directly in Kraken web UI, on a branch\nmanagement page. It can be also defined in a file in a Git\nrepository. The location of the repository and the schema file has to\nbe provided in ",(0,t.jsx)(n.code,{children:"Schema from Repository"})," tab in UI."]}),"\n",(0,t.jsx)(r.A,{img:"screen-branch-mgmt-schema-repo.png"}),"\n",(0,t.jsx)(n.p,{children:"The repository is refreshed on indicated interval basis. If there are\nany changes then the schema definition in Kraken database is updated."})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},4074:(e,n,a)=>{a.d(n,{A:()=>s});a(6540);var t=a(4848);const s=e=>{let{img:n}=e;return(0,t.jsx)("a",{href:"/img/"+n,target:"blank",children:(0,t.jsx)("img",{src:"/img/"+n,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}})})}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>c});var t=a(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);