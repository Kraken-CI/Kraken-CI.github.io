"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[1110],{8514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var s=n(4848),r=n(8453),i=n(4074);const o={id:"quick-start",title:"Quick Start"},a=void 0,c={id:"quick-start",title:"Quick Start",description:"This quick start guide shows how to install Kraken CI, configure a",source:"@site/docs/quick-start.mdx",sourceDirName:".",slug:"/quick-start",permalink:"/docs/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/quick-start.mdx",tags:[],version:"current",frontMatter:{id:"quick-start",title:"Quick Start"},sidebar:"someSidebar",previous:{title:"Overview",permalink:"/docs/"},next:{title:"Philosophy",permalink:"/docs/philosophy"}},l={},h=[{value:"1. Download Kraken Files for Docker Compose",id:"1-download-kraken-files-for-docker-compose",level:3},{value:"2. Start Kraken Services",id:"2-start-kraken-services",level:3},{value:"3. Log In",id:"3-log-in",level:3},{value:"4. Authorize Agent",id:"4-authorize-agent",level:3},{value:"5. The First Project and its Branch",id:"5-the-first-project-and-its-branch",level:3},{value:"6. Trigger the First Flow",id:"6-trigger-the-first-flow",level:3},{value:"7. Results of The Run",id:"7-results-of-the-run",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"This quick start guide shows how to install Kraken CI, configure a\nsimple project and run the first build."}),"\n",(0,s.jsx)(t.h3,{id:"1-download-kraken-files-for-docker-compose",children:"1. Download Kraken Files for Docker Compose"}),"\n",(0,s.jsxs)(t.p,{children:["Download configuration files for Docker Compose from ",(0,s.jsx)(t.a,{href:"https://github.com/Kraken-CI/kraken/releases",children:"Kraken GitHub releases page"}),".\nThey are:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"kraken-docker-compose-X.Y.yaml"})," - a services configuration file for Docker Compose"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"kraken-X.Y.env"})," - an example configuration for Kraken services that is used by Docker Compose file"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"2-start-kraken-services",children:"2. Start Kraken Services"}),"\n",(0,s.jsx)(t.p,{children:"In a terminal, in the folder where downloaded files are located, run:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-console",children:"docker-compose --env-file kraken-X.Y.env -f kraken-docker-compose-X.Y.yaml up\n"})}),"\n",(0,s.jsx)(t.p,{children:"Now you should see lots of logs. They will not stop. First, Docker\nimages are downloaded, and then services are started."}),"\n",(0,s.jsx)(i.A,{img:"qs-services-in-terminal.png"}),"\n",(0,s.jsxs)(t.p,{children:["Try to get to the web page on ",(0,s.jsx)(t.a,{href:"http://localhost:8080",children:"http://localhost:8080"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"3-log-in",children:"3. Log In"}),"\n",(0,s.jsxs)(t.p,{children:["On the main page, log in as admin using ",(0,s.jsx)(t.code,{children:"admin/admin"})," credentials."]}),"\n",(0,s.jsx)(i.A,{img:"qs-login-page.png"}),"\n",(0,s.jsxs)(t.p,{children:["After logging in, the dashboard page will appear. It shows tiles with\nprojects and their branches.  There is already a prepared project\ncalled ",(0,s.jsx)(t.code,{children:"Demo"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"But first, a built-in agent that will be executing jobs needs to be\nauthorized."}),"\n",(0,s.jsx)(t.h3,{id:"4-authorize-agent",children:"4. Authorize Agent"}),"\n",(0,s.jsx)(t.p,{children:"Go to the menu Agents -> Discovered. The Discovered Agents page shows\nagents that try to connect to the Kraken server but were not yet\nauthorized by an admin."}),"\n",(0,s.jsx)(i.A,{img:"qs-discovered-agents.png"}),"\n",(0,s.jsxs)(t.p,{children:["Select the checkbox and click the ",(0,s.jsx)(t.code,{children:"Authorized"})," button."]}),"\n",(0,s.jsxs)(t.p,{children:["Now we can go back to the main page (the dashboard) and explore\n",(0,s.jsx)(t.code,{children:"Demo"})," project. Click on the Kraken logo in the top left corner."]}),"\n",(0,s.jsxs)(t.p,{children:["More details about adding additional agents can be found on ",(0,s.jsx)(t.a,{href:"agents",children:"agents\ndocs page"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"5-the-first-project-and-its-branch",children:"5. The First Project and its Branch"}),"\n",(0,s.jsxs)(t.p,{children:["Click the cog icon on the right side of ",(0,s.jsx)(t.code,{children:"Project Demo"}),". It leads to\nthe project settings page."]}),"\n",(0,s.jsx)(i.A,{img:"qs-click-project-cog.png"}),"\n",(0,s.jsxs)(t.p,{children:["On the project page, there is a list of branches. Let's go to the\nalready prepared ",(0,s.jsx)(t.code,{children:"Master"})," branch:"]}),"\n",(0,s.jsx)(i.A,{img:"qs-click-branch.png"}),"\n",(0,s.jsx)(t.p,{children:"On the branch page, there is a defined workflow that consists of stages."}),"\n",(0,s.jsx)(i.A,{img:"qs-branch-workflow.png"}),"\n",(0,s.jsxs)(t.p,{children:["On the screen, on the left, there is visible one stage, ",(0,s.jsx)(t.code,{children:"Tests"}),". The\nright side presents details of this stage. The black box shows the\ncritical part of the stage: it is a workflow schema that is written in\nStarlark/Python."]}),"\n",(0,s.jsxs)(t.p,{children:["Currently, the stage's workflow pulls a sample project from\n",(0,s.jsx)(t.a,{href:"https://github.com/Kraken-CI/sample-project-python.git",children:"https://github.com/Kraken-CI/sample-project-python.git"})," and then run\n",(0,s.jsx)(t.code,{children:"pytest"})," tests."]}),"\n",(0,s.jsx)(t.h3,{id:"6-trigger-the-first-flow",children:"6. Trigger the First Flow"}),"\n",(0,s.jsxs)(t.p,{children:["Click the ",(0,s.jsx)(t.code,{children:"Run CI Flow"})," button to trigger the first flow of the branch\nworkflow, and then confirm it by clicking the ",(0,s.jsx)(t.code,{children:"Submit"})," button."]}),"\n",(0,s.jsx)(t.p,{children:"The next page shows triggered flow details."}),"\n",(0,s.jsx)(i.A,{img:"qs-completed-flow.png"}),"\n",(0,s.jsxs)(t.p,{children:["On the left side, there is a list of runs of stages (currently there is\nonly one run: ",(0,s.jsx)(t.code,{children:"Tests"}),"), and on the right, there are details of this\nstage run. All is green, so it means that all completed successfully."]}),"\n",(0,s.jsx)(t.h3,{id:"7-results-of-the-run",children:"7. Results of The Run"}),"\n",(0,s.jsxs)(t.p,{children:["Click the ",(0,s.jsx)(t.code,{children:"Tests"})," run link to get to results of the run."]}),"\n",(0,s.jsx)(i.A,{img:"qs-run-jobs.png"}),"\n",(0,s.jsx)(t.p,{children:"The first tab, Jobs, on the run results page, shows a list of executed\njobs. Our job was pretty quick, so we see the final results. If a\njob takes more time, then here will be presented its live status and\nlogs."}),"\n",(0,s.jsx)(t.p,{children:"The next tab, Test Results, presents a table with test cases and their\nstatus (passed, failed, etc.)."}),"\n",(0,s.jsx)(i.A,{img:"qs-run-tests.png"}),"\n",(0,s.jsx)(t.p,{children:"We may conclude the quick start guide here. We encourage you to try\nto play with the workflow schema and check what can be accomplished more."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4074:(e,t,n)=>{n.d(t,{A:()=>r});n(6540);var s=n(4848);const r=e=>{let{img:t}=e;return(0,s.jsx)("a",{href:"/img/"+t,target:"blank",children:(0,s.jsx)("img",{src:"/img/"+t,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}})})}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);