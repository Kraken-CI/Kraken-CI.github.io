"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[6584],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=l(n),m=a,u=h["".concat(s,".").concat(m)]||h[m]||d[m]||o;return n?r.createElement(u,i(i({ref:t},p),{},{components:n})):r.createElement(u,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8742:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.img;return r.createElement("a",{href:"/img/"+t,target:"blank"},r.createElement("img",{src:"/img/"+t,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}}))}},7572:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var r=n(3117),a=n(102),o=(n(7294),n(4137)),i=n(8742),c=["components"],s={id:"proj-branches",title:"Projects and Branches"},l=void 0,p={unversionedId:"proj-branches",id:"proj-branches",title:"Projects and Branches",description:"Projects",source:"@site/docs/proj-branches.mdx",sourceDirName:".",slug:"/proj-branches",permalink:"/docs/proj-branches",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/proj-branches.mdx",tags:[],version:"current",frontMatter:{id:"proj-branches",title:"Projects and Branches"},sidebar:"someSidebar",previous:{title:"Architecture",permalink:"/docs/architecture"},next:{title:"Stages in a Branch",permalink:"/docs/stages"}},d=[{value:"Projects",id:"projects",children:[],level:2},{value:"Branches",id:"branches",children:[],level:2}],h={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"projects"},"Projects"),(0,o.kt)("p",null,"The first thing that should be created is a project. It defines scope\nof view.  All entities defined inside a project are not visible or\navailable in other projects."),(0,o.kt)(i.Z,{img:"screen-projects.png",mdxType:"Screen"}),(0,o.kt)("p",null,"To add new project click ",(0,o.kt)("inlineCode",{parentName:"p"},"New Project")," button. Then you are asked for\na name of the new project. After adding new project on the main page a\ntile for new project should appear. There is a ",(0,o.kt)("inlineCode",{parentName:"p"},"New Branch")," button\nthat allows for creating a new branch for this project."),(0,o.kt)("h2",{id:"branches"},"Branches"),(0,o.kt)("p",null,"Branch is the first entity inside a project. There can be many\nbranches in a project. Branch logically represents a branch in a\nsource code repository and all development activities involved with\nit."),(0,o.kt)(i.Z,{img:"screen-branches.png",mdxType:"Screen"}),(0,o.kt)("p",null,"The first project that can be created is ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"master")," branch.\nTo do that click ",(0,o.kt)("inlineCode",{parentName:"p"},"New Branch")," button and enter its name.\nClick on branch name to get to branch page. On this page it is possible\nto define workflow schema for the branch and things."),(0,o.kt)(i.Z,{img:"screen-branch-mgmt.png",mdxType:"Screen"}),(0,o.kt)("p",null,'In the scope of a branch there are defined two sets of "builds" or\n',(0,o.kt)("inlineCode",{parentName:"p"},"Flows")," actually. These two sets of flows are called ",(0,o.kt)("inlineCode",{parentName:"p"},"CI Flows")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"Dev Flows"),". On branch page, after defining workflow schema, one can\ntrigger a ",(0,o.kt)("inlineCode",{parentName:"p"},"CI Flow")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Dev Flow"),". They are connected with 2 different\nset of activities.  Logically, ",(0,o.kt)("inlineCode",{parentName:"p"},"CI Flows")," are triggered by commits\npushed to master branch. So they are associated with traditional CI\nactivities, ie. post-commit verification of the changes. ",(0,o.kt)("inlineCode",{parentName:"p"},"Dev Flows"),"\nare used to verify pre-commit changes, the ones that are located on\ndeveloper branches forked from master branch or the ones that are\ncomming from Pull Requests or Merge Requests. So after completing such\nchanges they are merged to master branch what triggeres a new ",(0,o.kt)("inlineCode",{parentName:"p"},"CI\nFlow"),"."),(0,o.kt)("p",null,"The workflow schema defined in a branch is the same for both ",(0,o.kt)("inlineCode",{parentName:"p"},"CI\nFlows")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Dev Flows"),". The schema may be differentiated by\nintroducing a condition on flow type."),(0,o.kt)("p",null,"Coming back to a workflow schema in a branch, it is defined as a set\nof stages. More about stages and their schema in the next chapter."))}m.isMDXComponent=!0}}]);