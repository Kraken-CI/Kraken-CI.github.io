"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[2019],{4137:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=u(n),d=r,k=c["".concat(l,".").concat(d)]||c[d]||p[d]||i;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1030:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var a=n(3117),r=n(102),i=(n(7294),n(4137)),o=["components"],s={id:"features",title:"Features"},l=void 0,u={unversionedId:"features",id:"features",title:"Features",description:"The main differentiators of Kraken CI are:",source:"@site/docs/features.md",sourceDirName:".",slug:"/features",permalink:"/docs/features",draft:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/features.md",tags:[],version:"current",frontMatter:{id:"features",title:"Features"},sidebar:"someSidebar",previous:{title:"Philosophy",permalink:"/docs/philosophy"},next:{title:"Demo",permalink:"/docs/demo"}},m={},p=[{value:"Planning",id:"planning",level:2},{value:"Execution",id:"execution",level:2},{value:"Reporting",id:"reporting",level:2},{value:"Administration",id:"administration",level:2}],c={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The main differentiators of Kraken CI are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"massive testing support: hunderds thousands of tests per build"),(0,i.kt)("li",{parentName:"ul"},"focus on hardware testing were hardware is not stable and requires monitoring, rebooting, etc.")),(0,i.kt)("p",null,"The other features can be grouped in 4 areas: ",(0,i.kt)("a",{parentName:"p",href:"#planning"},"planning"),", ",(0,i.kt)("a",{parentName:"p",href:"#execution"},"execution"),",\n",(0,i.kt)("a",{parentName:"p",href:"#reporting"},"reporting")," and ",(0,i.kt)("a",{parentName:"p",href:"#administration"},"administration"),"."),(0,i.kt)("h2",{id:"planning"},"Planning"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"schema"},"workflow schema")," defines scope of jobs and tests with assigned configuration and\nenvironments"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"schema"},"workflow schema")," is using\n",(0,i.kt)("a",{parentName:"li",href:"https://www.python.org/"},"Python"),"/",(0,i.kt)("a",{parentName:"li",href:"https://github.com/bazelbuild/starlark"},"Starlark")," language"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"schema"},"workflow schema")," can be defined directly in Kraken Web UI or\nfetched from project's or from another Git repository"),(0,i.kt)("li",{parentName:"ul"},"configurations allow for running the same set of tests but with different parameters"),(0,i.kt)("li",{parentName:"ul"},"environments indicate execution agent groups and operating systems that should be used for jobs"),(0,i.kt)("li",{parentName:"ul"},"groups are defined by assigning execution agents to them"),(0,i.kt)("li",{parentName:"ul"},"jobs can be triggered by:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"external triggers via ",(0,i.kt)("a",{parentName:"li",href:"/docs/guide-webhooks"},"webhooks")," (e.g.: from GitHub, GitLab, Gitea or Radicle)"),(0,i.kt)("li",{parentName:"ul"},"by a commit to a repository"),(0,i.kt)("li",{parentName:"ul"},"on time interval"),(0,i.kt)("li",{parentName:"ul"},"on CRON rule"),(0,i.kt)("li",{parentName:"ul"},"on given time in a day"))),(0,i.kt)("li",{parentName:"ul"},"scope of jobs can be dynamically adjusted based on various criteria using Python/Starlark"),(0,i.kt)("li",{parentName:"ul"},"Flows and Runs can have custom labels"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/blog/job-designer-and-more-0-962"},"Job designer")," that makes preparing workflow schema much easier")),(0,i.kt)("h2",{id:"execution"},"Execution"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"jobs are assigned to Kraken Agents for execution by a scheduler using FIFO rule"),(0,i.kt)("li",{parentName:"ul"},"Agents are running on machines, they can be set up on:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"bare metal machines"),(0,i.kt)("li",{parentName:"ul"},"virtual machines"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," environment\nlike:\n",(0,i.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/"},"Compose"),",\n",(0,i.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/swarm/"},"Swarm"),"\nor ",(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/"},"Kubernetes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://linuxcontainers.org/lxd/introduction/"},"LXD")," environment"))),(0,i.kt)("li",{parentName:"ul"},"Agents may run on several operating systems:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Linux"),(0,i.kt)("li",{parentName:"ul"},"Windows"))),(0,i.kt)("li",{parentName:"ul"},"Agents use executors to execute; there are executors that can run jobs:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"locally on current host"),(0,i.kt)("li",{parentName:"ul"},"in Docker container"),(0,i.kt)("li",{parentName:"ul"},"in LXD container"))),(0,i.kt)("li",{parentName:"ul"},"builds and tests execution is dynamically distributed to multiple\nmachines with Kraken Agents according to indicated environments"),(0,i.kt)("li",{parentName:"ul"},"autoscaling in the cloud - Kraken server connected to ",(0,i.kt)("a",{parentName:"li",href:"/blog/autoscaling-with-azure-and-aws-ecs"},"AWS EC2 or ECS,\nAzure VM")," or ",(0,i.kt)("a",{parentName:"li",href:"/blog/autoscaling-with-kubernetes"},"Kubernetes")," environments can spawn new machines with Kraken Agents\nwhen there is not enough agents for jobs"),(0,i.kt)("li",{parentName:"ul"},"jobs can return 3 kinds of entities:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"build artifacts - any files like packages, tarballs, RPMs,\ngenerated HTML reports"),(0,i.kt)("li",{parentName:"ul"},"test results - they have several states (",(0,i.kt)("inlineCode",{parentName:"li"},"not-run"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"passed"),",\n",(0,i.kt)("inlineCode",{parentName:"li"},"failed"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"disabled"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"unsupported"),") and key-value pairs\nthat storing e.g. performance results (e.g. FPS or MPS)"),(0,i.kt)("li",{parentName:"ul"},"issues - returned by static analyzers, linters, etc"))),(0,i.kt)("li",{parentName:"ul"},"tests results and issues are streamed in realtime to Kraken Server\nso if execution crashes the results are preserved"),(0,i.kt)("li",{parentName:"ul"},"monitoring of machines and agents: if they do not report alive for\nseveral minutes then they are disconnected from pool of available\nmachines"),(0,i.kt)("li",{parentName:"ul"},"termination on timeout of stages, jobs and particular commands -\nthis way execution farm is behaving predictably and is not e.g.:\nblocked by some broken build that hangs machine or by an infinite\nloop in tests"),(0,i.kt)("li",{parentName:"ul"},"automatically estimated timeouts for jobs based on passed execution\nso there is no never ending jobs occupying resources"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/tools#custom-tools"},"custom tools")," that can be developed and hosted externally")),(0,i.kt)("h2",{id:"reporting"},"Reporting"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"test results and issues in CI are monitored over time; this allows for:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"comparing to previous results and then reporting ",(0,i.kt)("inlineCode",{parentName:"li"},"regressions")," and\n",(0,i.kt)("inlineCode",{parentName:"li"},"fixes")),(0,i.kt)("li",{parentName:"ul"},"presenting ",(0,i.kt)("inlineCode",{parentName:"li"},"stability")," of test cases so it is easy to spot what\ntest should be improved or removed from testing scope"),(0,i.kt)("li",{parentName:"ul"},"presenting charts of test case history so it can be observed how\ngiven test case behaved in the past"),(0,i.kt)("li",{parentName:"ul"},"aging ie. showing how long given result didn't change (or the time\nof the last change of result of given test case)"),(0,i.kt)("li",{parentName:"ul"},"adding sticky comments to failing results"))),(0,i.kt)("li",{parentName:"ul"},"test results and issues in DEV flows are compared to latest CI\nresults so fixes and regressions in changes on a given developer\nbranch are spotted before a merge to the production branch"),(0,i.kt)("li",{parentName:"ul"},"support for performance tests:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"on test case can report multiple iterations with a list values"),(0,i.kt)("li",{parentName:"ul"},"estimation of statistical values are like average, median,\nstandard deviation, covariance and more"),(0,i.kt)("li",{parentName:"ul"},"presenting on a chart changes of values of given test case over\ntime with indicating median or average"))),(0,i.kt)("li",{parentName:"ul"},"performance results are tracked over time and regressions are\ndetected and reported"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/test-results-basics#comments"},"commenting")," test results"),(0,i.kt)("li",{parentName:"ul"},"notifications using:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/schema#email"},"Email")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/schema#slack"},"Slack")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/schema#discord"},"Discord")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/schema#github"},"GitHub"))))),(0,i.kt)("h2",{id:"administration"},"Administration"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"installing:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"using ",(0,i.kt)("a",{parentName:"li",href:"/docs/install-docker-compose"},"Docker Compose")),(0,i.kt)("li",{parentName:"ul"},"to ",(0,i.kt)("a",{parentName:"li",href:"/docs/install-helm"},"Kubernetes")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/users"},"users management")," with global and per-project ",(0,i.kt)("a",{parentName:"li",href:"/docs/users#user-roles"},"roles")),(0,i.kt)("li",{parentName:"ul"},"authentication with:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/users#ldap"},"LDAP")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/users#openid-connect-and-oauth"},"OpenID Connect and OAuth")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/blog/dark-mode-in-0-945"},"dark mode"))))}d.isMDXComponent=!0}}]);