"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[5848],{9814:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var r=t(4848),i=t(8453),o=t(4074);t(3012);const s={slug:"integration-with-radicle",title:"Integration with Radicle",authors:"mike",tags:["kraken","devops","cicd","radicle"]},a=void 0,d={permalink:"/blog/integration-with-radicle",editUrl:"https://github.com/kraken-ci/website/edit/master/blog/blog/2024-03-26-integration-with-radicle.mdx",source:"@site/blog/2024-03-26-integration-with-radicle.mdx",title:"Integration with Radicle",description:"The main feature introduced by Kraken version",date:"2024-03-26T00:00:00.000Z",tags:[{label:"kraken",permalink:"/blog/tags/kraken"},{label:"devops",permalink:"/blog/tags/devops"},{label:"cicd",permalink:"/blog/tags/cicd"},{label:"radicle",permalink:"/blog/tags/radicle"}],readingTime:9.755,hasTruncateMarker:!0,authors:[{name:"Michal Nowikowski",title:"Kraken Founder. I\u2019m software engineer focused on full-stack programming and improving software processes.",url:"https://www.linkedin.com/in/godfryd",imageURL:"https://avatars1.githubusercontent.com/u/176567?s=460&u=4ade22771af9569be24b20278d24ef60da6eb0bb&v=4",key:"mike"}],frontMatter:{slug:"integration-with-radicle",title:"Integration with Radicle",authors:"mike",tags:["kraken","devops","cicd","radicle"]},unlisted:!1,prevItem:{title:"Radicle and Discord support",permalink:"/blog/radicle-and-discord"},nextItem:{title:"Windows Support in AWS",permalink:"/blog/windows-support-in-aws"}},h={authorsImageUrls:[void 0]},l=[{value:"Integrating a CI system using Radicle Webhooks",id:"integrating-a-ci-system-using-radicle-webhooks",level:2},{value:"Radicle Setup",id:"radicle-setup",level:3},{value:"Radicle Nodes",id:"radicle-nodes",level:4},{value:"Radicle Webhooks Adapter",id:"radicle-webhooks-adapter",level:4},{value:"Radicle CI Broker",id:"radicle-ci-broker",level:4},{value:"Repository Setup",id:"repository-setup",level:3},{value:"Testing",id:"testing",level:3},{value:"Push",id:"push",level:4}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The main feature introduced by Kraken version\n",(0,r.jsx)(n.a,{href:"https://github.com/Kraken-CI/kraken/releases/tag/v1.7",children:"1.7"})," is\nintegration with ",(0,r.jsx)(n.a,{href:"https://radicle.xyz",children:"Radicle"}),", a peer-to-peer code\ncollaboration stack."]}),"\n",(0,r.jsxs)(n.p,{children:["Radilce leverages Git\u2019s architecture combined with cryptography and a\ngossip protocol to enable a fully sovereign developer network.  Unlike\ncentralized platforms like GitHub, there is no single entity\ncontrolling the network or user data. Repositories are replicated\nacross peers in a decentralized manner. More details about Radicle can\nbe found it its ",(0,r.jsx)(n.a,{href:"https://radicle.xyz/guides",children:"Guides"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"To arrange a CI process for Radicle there must be appointed Radicle server that will be used by Kraken CI server so:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Kraken CI server can listen for webhooks coming from that Radicle server"}),"\n",(0,r.jsx)(n.li,{children:"Kraken CI can provide links that lead to repositiories, commit\nchanges, etc from Kraken CI web UI."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The configuration on Kraken CI side is described in ",(0,r.jsx)(n.a,{href:"/docs/guide-webhooks",children:"Webhooks guide"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The details about setting up Radicle side are presented below. This\ndescription is heavily based on the documentation ",(0,r.jsx)(n.a,{href:"https://app.radicle.xyz/nodes/seed.radicle.gr/rad:z4Uh671FzoooaHjLvmtW9BtGMF9qm",children:"Radicle CI Integrations"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"integrating-a-ci-system-using-radicle-webhooks",children:"Integrating a CI system using Radicle Webhooks"}),"\n",(0,r.jsx)(n.p,{children:"In order to add the desired webhook functionality, expected by Kraken\nCI, there must be run the Radicle CI Broker alongside the Radicle\nNode. Radicle CI Broker is responsible for grabbing any events that\nthe Radicle Node generates and for each event it invokes the Radicle\nWebhooks Adapter that will invoke any registered outgoing webooks."}),"\n",(0,r.jsx)(o.A,{img:"radicle-ci-arch.png"}),"\n",(0,r.jsx)(n.p,{children:"The second Radicle Node is required so that the first one can receive\nany updates from the network and then generate events so the broker\nwill spawn any registered adapter."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Making changes to a node wont generate any events to the same node."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"radicle-setup",children:"Radicle Setup"}),"\n",(0,r.jsx)(n.p,{children:"The setup requires a Radicle Node that will be running alongside the\nRadicle CI Broker and the Radicle CI Broker that will invoke the\nwebhooks adapter."}),"\n",(0,r.jsx)(n.p,{children:"Another Radicle Node is required with network access to the previous\none (through private, public IP - or even in the same host) that will\nmake changes to a repository. This way the first node will generate\nevents about the changes that the broker will grab and invoke the\nwebhook adapter."}),"\n",(0,r.jsx)(n.h4,{id:"radicle-nodes",children:"Radicle Nodes"}),"\n",(0,r.jsxs)(n.p,{children:["Radicle must be set up following one of the official installation\nmethodologies from: ",(0,r.jsx)(n.a,{href:"https://radicle.xyz/#get-started",children:"https://radicle.xyz/#get-started"}),". After the Radicle\ninstallation the ",(0,r.jsx)(n.code,{children:"rad auth"})," command must be executed. More details\nabout ",(0,r.jsx)(n.code,{children:"rad auth"})," can be found\n",(0,r.jsx)(n.a,{href:"https://app.radicle.xyz/nodes/seed.radicle.xyz/rad:z3gqcJUoA1n9HaHKufZs5FCSGazv5/tree/radicle-cli/examples/rad-auth.md",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["After this you will be able to start your node by running\n",(0,r.jsx)(n.code,{children:"rad node start"}),". At this point we all set!"]}),"\n",(0,r.jsxs)(n.p,{children:["You can run ",(0,r.jsx)(n.code,{children:"radicle-httpd"})," and ",(0,r.jsx)(n.code,{children:"rad web"})," so that you can access your\nRadicle Node through the web interface. ",(0,r.jsx)(n.code,{children:"radicle-httpd"})," provides an\nHTTP API for managing the Radicle Node. ",(0,r.jsx)(n.code,{children:"rad web"})," authenticates the\nRadicle Node using the ",(0,r.jsx)(n.code,{children:"radicle-httpd"})," towards\n",(0,r.jsx)(n.a,{href:"https://app.radicle.xyz/",children:"https://app.radicle.xyz/"})," so that users can manage their node through\nthe web client."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Web client and API offers a subset of functionality compared to the rad cli."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["You are able to setup and run more Radicle Nodes in the same host by\naltering the Radicle's home path through the ",(0,r.jsx)(n.code,{children:"RAD_HOME"})," environment\nvariable. So you can set up a new node using the\n",(0,r.jsx)(n.code,{children:"RAD_HOME=~/.new_radicle rad auth"}),". For the rad web you can provide\nthe radicle-httpd URL to connect to ",(0,r.jsx)(n.code,{children:"rad web https://app.radicle.xyz --connect 127.0.0.1:8080"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"So in order to setup two nodes in our host we have to run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Primary Node\nrad auth\nrad node start\nradicle-httpd\nrad web  # optionally append with: https://app.radicle.xyz --connect 127.0.0.1:8080\n"})}),"\n",(0,r.jsx)(n.p,{children:"For the second node use"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Secondary Node\nRAD_HOME=~/.secondary_radicle rad auth\nRAD_HOME=~/.secondary_radicle rad node start\n"})}),"\n",(0,r.jsx)(n.h4,{id:"radicle-webhooks-adapter",children:"Radicle Webhooks Adapter"}),"\n",(0,r.jsx)(n.p,{children:"As mentioned earlier, the Radicle CI Broker is responsible for\ngrabbing the Radicle Node events and then invoke any registered\nadapter for any event. An adapter is responsible for conducting any\ntasks."}),"\n",(0,r.jsx)(n.p,{children:"In our case, the Radicle Webhooks Adapter is responsible for invoking\nany registered webhooks when an event occurs."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"The Radicle Webhooks Adapter binary does not run as a stand alone\napplication. Radicle CI broker is responsible for spawning it with\nthe appropriate input data."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Radicle Webhooks Adapter read the webhook configuration from the\nrepository that the radicle node event occurred."}),"\n",(0,r.jsx)(n.p,{children:"The Radicle Webhooks Adapter binary must have appropriate execute permissions."}),"\n",(0,r.jsx)(n.p,{children:"The configuration that the adapter requires is:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"EnvVar"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"WEBHOOKS_RETRIES"})}),(0,r.jsx)(n.td,{children:"Total attempts until get a successful response."}),(0,r.jsx)(n.td,{children:"3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"WEBHOOKS_TIMOUT_SECS"})}),(0,r.jsx)(n.td,{children:"Timeout for webhook request."}),(0,r.jsx)(n.td,{children:"30"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RAD_HTTPD_URL"})}),(0,r.jsx)(n.td,{children:"URL of radicle's HTTPD."}),(0,r.jsx)(n.td,{children:'"127.0.0.1:8080"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RAD_BROWSE_URL"})}),(0,r.jsx)(n.td,{children:"Public URL of a radicle seed to browse repositories."}),(0,r.jsx)(n.td,{children:'"app.radicle.xyz/seeds/$RAD_HTTPD_URL"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RAD_HOME"})}),(0,r.jsx)(n.td,{children:"Path for radicle home directory."}),(0,r.jsx)(n.td,{children:'"~/.radicle"'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RAD_PASSPHRASE"})}),(0,r.jsx)(n.td,{children:"Passphrase for the radicle key."}),(0,r.jsx)(n.td,{children:'""'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"WEBHOOKS_DB_PATH"})}),(0,r.jsx)(n.td,{children:"Path for the SQLite DB to store webhooks results."}),(0,r.jsx)(n.td,{children:'"./webhooks-adapter.sqlite"'})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["More details about the radicle wbhooks adapter can be found at its\n",(0,r.jsx)(n.a,{href:"https://app.radicle.xyz/nodes/radicle.yorgos.net.gr/rad:z2hCUNw2T1qU31LyGy7VPEiS7BkxW",children:"repository"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"radicle-ci-broker",children:"Radicle CI Broker"}),"\n",(0,r.jsx)(n.p,{children:"The Radicle CI Broker is responsible for reading events from the\nRadicle Node and invoke any registered adapter. Radicle CI Broker must\nbe initiated and run at the background at all times in order to grab\nand process any new event from the Radicle Node. In our setup we\nshould connect Radicle CI Broker to our primary node ie. #1."}),"\n",(0,r.jsx)(n.p,{children:"The configuration of the broker should be stored in a .yaml file as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"$ cat ci-broker-cfg.yaml\ndefault_adapter: webhooks\nadapters:\n  webhooks:\n    command: radicle-webhooks-adapter\n    env:\nfilters:\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"radicle-webhooks-adapter"})," should be replaced with the full path of\nthe Radicle webhooks adapter binary path."]}),"\n",(0,r.jsx)(n.p,{children:"Then the broker can be initiated through the command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"RUST_LOG=debug ./ci-broker ci-broker-cfg.yaml\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ci-broker-cfg.yaml"})," is the path of the yaml file that contains the broker's configuration."]}),"\n",(0,r.jsxs)(n.p,{children:["More details about the Radicle CI Broker can be found at its\n",(0,r.jsx)(n.a,{href:"https://app.radicle.xyz/nodes/radicle.liw.fi/rad:zwTxygwuz5LDGBq255RA2CbNGrz8",children:"repository"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"repository-setup",children:"Repository Setup"}),"\n",(0,r.jsx)(n.p,{children:"Now that Radicle Primary Node with CI Broker is in place we have to\nproperly setup our repository. We can choose to set it up to any of\nthe available Radicle Nodes but we should seed it through the node\nthat runs the broker."}),"\n",(0,r.jsxs)(n.p,{children:["Now it's time to initialize a Git repository. This will be done in our\nsecondary node ie. #2. We do it as a normal Git repository through ",(0,r.jsx)(n.code,{children:"git init"}),"\nand then we should initialize it as a rad repository through\n",(0,r.jsx)(n.code,{children:"RAD_HOME=~/.secondary_radicle rad init"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["For more details about how to initialize a repository you can check\nthis ",(0,r.jsx)(n.a,{href:"https://app.radicle.xyz/nodes/seed.radicle.xyz/rad:z3gqcJUoA1n9HaHKufZs5FCSGazv5/tree/radicle-cli/examples/rad-init.md",children:"example"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Repository should contain the configuration for the webhooks. This\nfile should be stored under the ",(0,r.jsx)(n.code,{children:".radicle/webhooks/"})," directory in our\nrepo. Each configuration file should be a ",(0,r.jsx)(n.code,{children:".yaml"})," (or ",(0,r.jsx)(n.code,{children:".yml"}),") that\nwill contain all the details for each webhook. The schema of the\nfile's content is like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"outgoing_webhook_kraken_ci:\n    payload_url: https://kraken-server/webhooks/25/radicle\n    content_type: application/json\n    shared_secret: <some-secret>\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"outgoing_webhook_kraken_ci"})," is the friendly name of the webhook;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"payload_url"})," is the URL that will be invoked when an event occurs,\ne.g. ",(0,r.jsx)(n.code,{children:"https://kraken-server/webhooks/25/radicle"})," where ",(0,r.jsx)(n.code,{children:"kraken-server"}),"\nshould be replaced with real Kraken CI Server address and 25 with\nappropriate project ID in Kraken CI;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"content_type"})," is the content type of the payload (currently only\n",(0,r.jsx)(n.code,{children:"application/json"})," is supported);"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shared_secret"})," should be a high entropy secret key used to generate\nthe SHA-256 hash signature using HMAC hex digest from the provided\nwebhook's secret token alongside each payload. This result will be\nwithin the headers of the webhook request so that the recipient will\nbe able to validate the request."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Multiple webhook configuration files are supported within the\nrepository using multiple files or separating the entries using the\nthree dashes ",(0,r.jsx)(n.code,{children:"---"}),".  As a user stores all the webhooks' details within\nthe repository these details must be somehow hidden to the rest of the\nusers. So, these configuration files should be encrypted in order to\nensure that the configuration data are not exposed."]}),"\n",(0,r.jsxs)(n.p,{children:["In order to encrypt these files we should use the ",(0,r.jsx)(n.a,{href:"https://github.com/FiloSottile/age",children:"age file encryption\ntool"}),". This tool permits the\nencryption of a file using multiple public keys and the decryption of\neach file using just one of the private keys. After the age tool is\ninstalled you can encrypt each file using the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"age -encrypt -R radicle1.pub -R radicle2.pub -R radicle3.pub -o destination_for_encrupted_file.yaml file_to_encrypt\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"-R radicleX.pub"})," is added for every public key we want to encrypt\nthe file with. It is completely fine to use one or more keys. The keys\nthat should e used are the radicle public/private keys located at\n",(0,r.jsx)(n.code,{children:"$RAD_HOME/keys/"})," directory. We should encrypt the webhooks settings\nusing the keys of the users that we permit to be able to view and\npropose changes to these settings. We should definitely use the key\nthat the webhooks adapter will use in order to decrypt the webhooks'\nsettings files. This key is located under the $RAD_HOME and it's\npassphrase should be at $RAD_PASSPHRASE."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"destination_for_encrupted_file.yaml"})," is the file that should be\ncommitted to the repo. It's critical here to use the public key of the\nradicle node where the Radicle CI Broker runs in order to allow the\nadapter to decrypt it later."]}),"\n",(0,r.jsxs)(n.p,{children:["For more details and examples for this process you can refer to the\n",(0,r.jsx)(n.a,{href:"https://app.radicle.xyz/nodes/radicle.yorgos.net.gr/rad:z2hCUNw2T1qU31LyGy7VPEiS7BkxW/tree/docs/webhook_settings_persistence.md",children:"radicle-webhooks-adapter documentation"}),"."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["For this setup there is no reason to follow the steps under the\n",(0,r.jsx)(n.code,{children:"Automated encryption & decryption"})," section but feel free to do so!"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Now that we have our repository ready we have to ensure that the\nradicle node that runs alongside the broker (the primary node) is\nseeding the repository. Seeding a repository means that the Radicle\nnode will seed that repo in the Radicle p2p network (as we seed in\ntorrents).  This can be done either by cloning the repo through the\n",(0,r.jsx)(n.code,{children:"rad clode RAD_ID"})," command or the ",(0,r.jsx)(n.code,{children:"rad seed RAD_ID"})," command at the\nprimary node (where the broker runs). ",(0,r.jsx)(n.code,{children:"RAD_ID"})," is the repo's radicle\nID. This can be retrieved through the ",(0,r.jsx)(n.code,{children:"rad ls"})," command or by running\nthe ",(0,r.jsx)(n.code,{children:"rad ."})," command within the repository's folder."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"By seeding a repository we ensure that the a node receives any\nevents for the specific repo."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.p,{children:"We can now check our setup if everything works fine. On the Host #1 we\nshould start the Radicle Node and the CI Broker. The broker will report\nsome logs:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:' Running `./ci-broker webhooks`\n INFO  ci_broker > Radicle CI broker starts\n DEBUG ci_broker > loaded configuration: Config {\n    default_adapter: "webhooks",\n    adapters: {\n        "webhooks": Adapter {\n            command: "/tmp/bin/radicle-webhooks-adapter",\n            env: {},\n        },\n    },\n    filters: [],\n}\n INFO  radicle_ci_broker::event > subscribing to local node events\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["You can use a webhook listener service (such as the\n",(0,r.jsx)(n.a,{href:"https://webhook.site/",children:"https://webhook.site/"}),") in order to register the provided URL and\ncheck the requested payload alongside any headers."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"push",children:"Push"}),"\n",(0,r.jsx)(n.p,{children:"From the secondary node we should push some changes to the\nrepo. Pushing will automatically sync with other nodes and will print\nsomething like in the broker's log output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ git push\n\u2713 Patch b1d3420 updated to 54884569f96ac1db8ea1fb19004a536bb6e0ab83\n\u2713 Synced with 2 node(s)\nTo rad://z32iyJDyFLqvPFzwHm8YadK4HQ2EY/z6MksMpnzPF48pk4XAnqVotKmfs2SE3bxA57UA8KL9DnWnY3\n   a680e4d..6a76ee5  ha -> patches/b1d3420337dc4817cb9f2c2a0320e60b11530a25\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If the sync fails we can retry it through the\n",(0,r.jsx)(n.code,{children:"RAD_HOME=~/.secondary_radicle rad sync"})," command. A successful sync\nwill generate some events to the broker."]}),"\n",(0,r.jsxs)(n.p,{children:["If the webhook configuration is properly set up we can see in the logs\nthe webhook URL printed out. We can see that we will receive two\nevents from the broker which will make our broker invoke the webhooks\nfor these two events. One event will be about the update of the\n",(0,r.jsx)(n.code,{children:"sigrefs"})," and the other one is for the actual push event on the repo."]}),"\n",(0,r.jsxs)(n.p,{children:["And then in Kraken CI side we should see a triggered flow in a project\nassociated with the repositored hosted in Radicle. On the flow page,\nin ",(0,r.jsx)(n.code,{children:"Repo Changes"}),", there are information retrieved from Radicle Push\nevent. We can visit hosted Git repo in Radicle or visit the change commits."]}),"\n",(0,r.jsx)(o.A,{img:"radicle-repo-changes.png"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},4074:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(4848);const i=e=>{let{img:n}=e;return(0,r.jsx)("a",{href:"/img/"+n,target:"blank",children:(0,r.jsx)("img",{src:"/img/"+n,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}})})}}}]);