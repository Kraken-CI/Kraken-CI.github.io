"use strict";(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[3220],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(n),m=o,k=f["".concat(c,".").concat(m)]||f[m]||p[m]||i;return n?r.createElement(k,a(a({ref:t},u),{},{components:n})):r.createElement(k,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8742:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.img;return r.createElement("a",{href:"/img/"+t,target:"blank"},r.createElement("img",{src:"/img/"+t,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}}))}},7637:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(3117),o=n(102),i=(n(7294),n(4137)),a=(n(8742),["components"]),l={id:"tf-junit",title:"JUnit"},c=void 0,s={unversionedId:"tf-junit",id:"tf-junit",title:"JUnit",description:"Intro",source:"@site/docs/tf-junit.mdx",sourceDirName:".",slug:"/tf-junit",permalink:"/docs/tf-junit",draft:!1,editUrl:"https://github.com/kraken-ci/website/edit/master/docs/tf-junit.mdx",tags:[],version:"current",frontMatter:{id:"tf-junit",title:"JUnit"},sidebar:"someSidebar",previous:{title:"Test Results Tracking",permalink:"/docs/test-results-tracking"},next:{title:"Pytest",permalink:"/docs/tf-pytest"}},u={},p=[{value:"Intro",id:"intro",level:2},{value:"Integration with Kraken CI",id:"integration-with-kraken-ci",level:2}],f={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"intro"},"Intro"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://junit.org/"},"JUnit")," is a simple framework to write repeatable tests for Java\nlanguage. It is an instance of the xUnit architecture for unit testing\nframeworks."),(0,i.kt)("h2",{id:"integration-with-kraken-ci"},"Integration with Kraken CI"),(0,i.kt)("p",null,"The following example shows how to execute JUnit tests in Kraken CI.\nThe presented workflow stage does:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"pulls sample JUnit project,"),(0,i.kt)("li",{parentName:"ol"},"runs JUnit tests generating results in JUnit format"),(0,i.kt)("li",{parentName:"ol"},"collects results from JUnit file")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'def stage(ctx):\n    return {\n        "parent": "root",\n        "triggers": {\n            "parent": True,\n        },\n        "parameters": [],\n        "configs": [],\n        "jobs": [{\n            "name": "junit collect",\n            "steps": [{\n                "tool": "git",\n                "checkout": "https://github.com/junit-team/junit5-samples.git",\n                "branch": "main"\n            }, {\n                "tool": "shell",\n                "cmd": "./mvnw test",\n                "cwd": "junit5-samples/junit5-jupiter-starter-maven"\n            }, {\n                "tool": "junit_collect",\n                "cwd": "junit5-samples/junit5-jupiter-starter-maven/",\n                "file_glob": "target/*/*xml"\n            }],\n            "environments": [{\n                "system": "openjdk:11.0.12-slim-buster",\n                "agents_group": "all",\n                "executor": "docker",\n                "config": "default"\n            }]\n        }]\n    }\n')),(0,i.kt)("p",null,"More details about ",(0,i.kt)("inlineCode",{parentName:"p"},"junit_collect")," tool can be found in ",(0,i.kt)("a",{parentName:"p",href:"schema#junit-collect"},"its docs\nsection"),"."),(0,i.kt)("p",null,"As a result of the execution of this stage in the Kraken's web UI,\nthere will be a set of test case results."),(0,i.kt)("p",null,"Demo: ",(0,i.kt)("a",{parentName:"p",href:"https://lab.kraken.ci/branches/24"},"https://lab.kraken.ci/branches/24"),(0,i.kt)("br",null),"\nSources: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Kraken-CI/workflow-examples/blob/main/junit-collect/one.py"},"https://github.com/Kraken-CI/workflow-examples/blob/main/junit-collect/one.py")))}m.isMDXComponent=!0}}]);