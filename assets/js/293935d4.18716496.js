(self.webpackChunkkraken_ci_website=self.webpackChunkkraken_ci_website||[]).push([[4240],{4137:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=c(n),m=o,y=f["".concat(p,".").concat(m)]||f[m]||u[m]||a;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8742:function(e,t,n){"use strict";var r=n(7294);t.Z=function(e){var t=e.img;return r.createElement("img",{src:"/img/"+t,style:{boxShadow:"0 10px 10px 5px #777",marginBottom:"30px"}})}},4602:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return f}});var r=n(4034),o=n(9973),a=(n(7294),n(4137)),i=(n(8742),["components"]),s={id:"tf-pytest",title:"Pytest"},p=void 0,c={unversionedId:"tf-pytest",id:"tf-pytest",isDocsHomePage:!1,title:"Pytest",description:"Intro",source:"@site/docs/tf-pytest.mdx",sourceDirName:".",slug:"/tf-pytest",permalink:"/docs/tf-pytest",editUrl:"https://github.com/kraken-ci/website/edit/master/docs/tf-pytest.mdx",tags:[],version:"current",frontMatter:{id:"tf-pytest",title:"Pytest"},sidebar:"someSidebar",previous:{title:"JUnit",permalink:"/docs/tf-junit"},next:{title:"RobotFramework",permalink:"/docs/tf-robotframework"}},l=[{value:"Intro",id:"intro",children:[],level:2},{value:"Integration with Kraken CI",id:"integration-with-kraken-ci",children:[],level:2}],u={toc:l};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"intro"},"Intro"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://pytest.org/"},"Pytest")," framework for Python language makes it\neasy to write small tests, yet scales to support complex functional\ntesting for applications and libraries."),(0,a.kt)("h2",{id:"integration-with-kraken-ci"},"Integration with Kraken CI"),(0,a.kt)("p",null,"The following example shows how to execute Pytest tests in Kraken CI.\nThe presented workflow stage does:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"pulls simple Python project,"),(0,a.kt)("li",{parentName:"ol"},"runs Pytests tests cases one by one, and each test case result\nis reported to the Kraken server.")),(0,a.kt)("p",null,"It is expected that Pytest is already installed in the system."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def stage(ctx):\n    return {\n        "parent": "root",\n        "triggers": {\n            "parent": True,\n        },\n        "parameters": [],\n        "configs": [],\n        "jobs": [{\n            "name": "pytest",\n            "steps": [{\n                "tool": "git",\n                "checkout": "https://github.com/Kraken-CI/sample-project-python.git"\n            }, {\n                "tool": "pytest",\n                "cwd": "sample-project-python",\n                "params": "-vv",\n                "pythonpath": "src"\n            }],\n            "environments": [{\n                "system": "any",\n                "agents_group": "all",\n                "config": "default"\n            }]\n        }]\n    }\n')),(0,a.kt)("p",null,"More details about ",(0,a.kt)("inlineCode",{parentName:"p"},"pytest")," tool can be found in ",(0,a.kt)("a",{parentName:"p",href:"schema#pytest"},"its docs\nsection"),"."),(0,a.kt)("p",null,"Demo: ",(0,a.kt)("a",{parentName:"p",href:"https://lab.kraken.ci/branches/10"},"https://lab.kraken.ci/branches/10"),(0,a.kt)("br",null),"\nSources: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Kraken-CI/workflow-examples/blob/main/sample-project-python/one.py"},"https://github.com/Kraken-CI/workflow-examples/blob/main/sample-project-python/one.py")))}f.isMDXComponent=!0}}]);